VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
  Persistable = 0  'NotPersistable
  DataBindingBehavior = 0  'vbNone
  DataSourceBehavior  = 0  'vbNone
  MTSTransactionMode  = 0  'NotAnMTSObject
END
Attribute VB_Name = "ClassFATGravaTRV"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = True
Option Explicit

Private Declare Function Conexao_AbrirExt Lib "ADSQLMN.DLL" Alias "AD_Conexao_Abrir" (ByVal driver_sql As Integer, ByVal lpParamIn As String, ByVal ParamLenIn As Integer, ByVal lpParamOut As String, lpParamLenOut As Integer) As Long
Private Declare Function Conexao_FecharExt Lib "ADSQLMN.DLL" Alias "AD_Conexao_Fechar" (ByVal lConexao As Long) As Long

'ROTINAS CRIADAS AUTOMATICAMENTE PELA TELA BROWSECRIA
'GRAVAÇÃO
Public Function TRVOcorrencias_Grava(ByVal objTRVOcorrencias As ClassTRVOcorrencias) As Long

Dim lErro As Long
Dim lTransacao As Long

On Error GoTo Erro_TRVOcorrencias_Grava

    'Abertura de transação
    lTransacao = Transacao_Abrir()
    If lTransacao = 0 Then gError 189450

    lErro = CF("TRVOcorrencias_Grava_EmTrans", objTRVOcorrencias)
    If lErro <> SUCESSO Then gError 189451

    'Confirma a transação
    lErro = Transacao_Commit()
    If lErro <> AD_SQL_SUCESSO Then gError 189452

    TRVOcorrencias_Grava = SUCESSO

    Exit Function

Erro_TRVOcorrencias_Grava:

    TRVOcorrencias_Grava = gErr

    Select Case gErr

        Case 189450
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_TRANSACAO", gErr)

        Case 189451

        Case 189452
            Call Rotina_Erro(vbOKOnly, "ERRO_COMMIT", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 189473)

    End Select

    'Desfaz Transação
    Call Transacao_Rollback

    Exit Function

End Function

Public Function TRVOcorrencias_Grava_EmTrans(ByVal objTRVOcorrencias As ClassTRVOcorrencias, Optional ByVal bValidaCancVou As Boolean = True, Optional ByVal bIgnoraJaFaturado As Boolean = False, Optional ByVal bLiberacao As Boolean = False) As Long

Dim lErro As Long
Dim alComando(0 To 7) As Long
Dim iIndice As Integer
Dim lNumIntDoc As Long
Dim lNumIntDocDest As Long
Dim iFormaPagto As Integer
Dim objVoucher As New ClassTRVVouchers
Dim sSerie As String
Dim sTipo As String
Dim lNumVou As Long
Dim iStatusVou As Integer
Dim dValorOcr As Double
Dim dValorOcrAtu As Double
Dim dValorAnterior As Double
Dim BOrcNova As Boolean
Dim bIgnorar As Boolean
Dim iOrigem As Integer
Dim dValorOCRBrutoVou As Double
Dim dValorOCRCMAVou As Double
Dim dValorBrutoVou As Double
Dim dValorCMAVou As Double
Dim iCartao As Integer, lID As Long

On Error GoTo Erro_TRVOcorrencias_Grava_EmTrans

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 189454
    Next
       
    sSerie = String(STRING_TRV_OCR_SERIE, 0)
    sTipo = String(STRING_TRV_OCR_TIPOVOU, 0)

    'Le a tabelaTRVOcorrencias
    lErro = Comando_ExecutarPos(alComando(0), "SELECT NumIntDoc,NumIntDocDestino,FormaPagto, Serie, TipoDoc, NumVou, ValorTotal, Origem,ValorOCRBrutoVou,ValorOCRCMAVou, ID FROM TRVOcorrencias WHERE Codigo= ? ", _
                0, lNumIntDoc, lNumIntDocDest, iFormaPagto, sSerie, sTipo, lNumVou, dValorAnterior, iOrigem, dValorOCRBrutoVou, dValorOCRCMAVou, lID, objTRVOcorrencias.lCodigo)
    If lErro <> AD_SQL_SUCESSO Then gError 189455

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(0))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 189456

    If lErro = AD_SQL_SUCESSO Then
        BOrcNova = False
        If UCase(sSerie) <> UCase(objTRVOcorrencias.sSerie) Or UCase(sTipo) <> UCase(objTRVOcorrencias.sTipoDoc) Or lNumVou <> objTRVOcorrencias.lNumVou Then gError 202790
    Else
        BOrcNova = True
        dValorAnterior = 0
    End If
    
    'Le a tabela TRVVoucher
    lErro = Comando_ExecutarPos(alComando(6), "SELECT Status, ValorOcr, ValorComissao, ValorBruto, Cartao FROM TRVVouchers WHERE TipoDoc= ? AND NumVou = ? AND TipVou = ? AND Serie = ? ", _
                0, iStatusVou, dValorOcr, dValorCMAVou, dValorBrutoVou, iCartao, TRV_TIPODOC_VOU_TEXTO, objTRVOcorrencias.lNumVou, objTRVOcorrencias.sTipoDoc, objTRVOcorrencias.sSerie)
    If lErro <> AD_SQL_SUCESSO Then gError 194437

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(6))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 194438

    If lErro <> AD_SQL_SUCESSO Then gError 194441

    'Trava registro contra alterações/Leituras
    lErro = Comando_LockExclusive(alComando(6))
    If lErro <> SUCESSO Then gError 194439
    
    If iCartao = MARCADO Then dValorCMAVou = 0
    
    dValorOcrAtu = dValorOcr + objTRVOcorrencias.dValorTotal - dValorAnterior

    lErro = Comando_ExecutarPos(alComando(7), "UPDATE TRVVouchers SET ValorOcr= ? , TemOcr= ? ", alComando(6), dValorOcrAtu, MARCADO)
    If lErro <> SUCESSO Then gError 194440
    
    bIgnorar = False

    'Se existir => UPDATE, senão => INSERT
    If Not BOrcNova Then
    
        If iOrigem <> objTRVOcorrencias.iOrigem Then gError 198220
        If Abs(dValorOCRBrutoVou - objTRVOcorrencias.dValorOCRBrutoVou) > DELTA_VALORMONETARIO Then gError 198220
        If Abs(dValorOCRCMAVou - objTRVOcorrencias.dValorOCRCMAVou) > DELTA_VALORMONETARIO Then gError 198220
    
        If lNumIntDocDest <> 0 Then
            If Not bIgnoraJaFaturado Then
                If iFormaPagto = FORMAPAGTO_TRV_OCR_FAT Then
                    gError 190310
                Else
                    gError 190311
                End If
            Else
                bIgnorar = True
            End If
        End If
        
        If Not bIgnorar Then

            'Trava registro contra alterações/Leituras
            lErro = Comando_LockExclusive(alComando(0))
            If lErro <> SUCESSO Then gError 189457
            
            If objTRVOcorrencias.lID = 0 Then objTRVOcorrencias.lID = lID
            
            objTRVOcorrencias.lNumIntDoc = lNumIntDoc
                
            lErro = Comando_ExecutarPos(alComando(1), "UPDATE TRVOcorrencias SET NumVou= ? , TipoDoc= ? , Serie= ? , Cliente= ? , " & _
                    "FilialCliente= ? , DataEmissao= ? , Observacao= ? , Status= ? , Origem= ? , " & _
                    "Historico= ? , FormaPagto= ? , ValorTotal= ?, ID = ? ", alComando(0), _
                    objTRVOcorrencias.lNumVou, objTRVOcorrencias.sTipoDoc, objTRVOcorrencias.sSerie, objTRVOcorrencias.lCliente, _
                    objTRVOcorrencias.iFilialCliente, objTRVOcorrencias.dtDataEmissao, objTRVOcorrencias.sObservacao, objTRVOcorrencias.iStatus, objTRVOcorrencias.iOrigem, _
                    objTRVOcorrencias.sHistorico, objTRVOcorrencias.iFormaPagto, objTRVOcorrencias.dValorTotal, objTRVOcorrencias.lID)
            If lErro <> AD_SQL_SUCESSO Then gError 189458
            
            lErro = TRVOcorrenciaDet_Exclui(alComando(2), alComando(3), objTRVOcorrencias)
            If lErro <> SUCESSO Then gError 189473
            
        End If

    Else

        'Obter NumIntDoc
        lErro = CF("Config_ObterNumInt", "FATConfig", "NUM_INT_PROX_TRVOCORRENCIAS", lNumIntDoc)
        If lErro <> SUCESSO Then gError 189453

        objTRVOcorrencias.lNumIntDoc = lNumIntDoc
        
        If objTRVOcorrencias.iOrigem = INATIVACAO_AUTOMATICA_CODIGO Then
            objTRVOcorrencias.dValorOCRBrutoVou = -dValorBrutoVou
            objTRVOcorrencias.dValorOCRCMAVou = -dValorCMAVou
        End If
        
        lErro = Comando_Executar(alComando(1), "INSERT INTO TRVOcorrencias( NumIntDoc, NumVou, TipoDoc, Serie, " & _
                "Codigo, Cliente, FilialCliente, DataEmissao, Observacao, " & _
                "Status, Origem, Historico, FormaPagto, " & _
                "ValorTotal,ValorOCRBrutoVou,ValorOCRCMAVou, ID) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)", _
                objTRVOcorrencias.lNumIntDoc, objTRVOcorrencias.lNumVou, objTRVOcorrencias.sTipoDoc, objTRVOcorrencias.sSerie, _
                objTRVOcorrencias.lCodigo, objTRVOcorrencias.lCliente, objTRVOcorrencias.iFilialCliente, objTRVOcorrencias.dtDataEmissao, objTRVOcorrencias.sObservacao, _
                objTRVOcorrencias.iStatus, objTRVOcorrencias.iOrigem, objTRVOcorrencias.sHistorico, objTRVOcorrencias.iFormaPagto, _
                objTRVOcorrencias.dValorTotal, objTRVOcorrencias.dValorOCRBrutoVou, objTRVOcorrencias.dValorOCRCMAVou, objTRVOcorrencias.lID)
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 189459

    End If
    
    If Not bIgnorar Then
        lErro = TRVOcorrenciaDet_Insere(alComando(4), objTRVOcorrencias)
        If lErro <> SUCESSO Then gError 189474
    End If
       
    If Abs(dValorOCRBrutoVou - objTRVOcorrencias.dValorOCRBrutoVou) > DELTA_VALORMONETARIO Or Abs(dValorOCRCMAVou - objTRVOcorrencias.dValorOCRCMAVou) > DELTA_VALORMONETARIO Then
    
        objVoucher.lNumVou = objTRVOcorrencias.lNumVou
        objVoucher.sSerie = objTRVOcorrencias.sSerie
        objVoucher.sTipoDoc = TRV_TIPODOC_VOU_TEXTO
        objVoucher.sTipVou = objTRVOcorrencias.sTipoDoc
'
        'Tem que gerar a comissão
        If objTRVOcorrencias.iOrigem = INATIVACAO_AUTOMATICA_CODIGO Then
            'Só existe alteração de valor na inativação na liberação para abter impostos e tarifas e isso não deve ser tratado
            If dValorAnterior = 0 Then
                lErro = TRVVou_Gera_Comis(objVoucher, objTRVOcorrencias.dValorTotal - dValorAnterior, 0, TRV_TIPO_VALOR_BASE_LIQ, objTRVOcorrencias.dtDataEmissao, "Inativação do Voucher", TRV_TIPO_TRATAMENTO_COMI_NVL, objTRVOcorrencias)
            End If
        Else
            lErro = TRVVou_Gera_Comis(objVoucher, objTRVOcorrencias.dValorTotal - dValorAnterior, 0, TRV_TIPO_VALOR_BASE_LIQ, objTRVOcorrencias.dtDataEmissao, "Ocorrência código " & CStr(objTRVOcorrencias.lCodigo), TRV_TIPO_TRATAMENTO_COMI_OCR, objTRVOcorrencias)
        End If
        If lErro <> SUCESSO Then gError 196312
        
    End If
    
    If Not bLiberacao Then
        lErro = TRVOcrExp_Insere(objTRVOcorrencias)
        If lErro <> SUCESSO Then gError 196312
    End If
    
    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVOcorrencias_Grava_EmTrans = SUCESSO

    Exit Function

Erro_TRVOcorrencias_Grava_EmTrans:

    TRVOcorrencias_Grava_EmTrans = gErr

    Select Case gErr

        Case 189453, 189473, 189474, 196312

        Case 189454
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 189455, 189456
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVOCORRENCIAS", gErr)

        Case 189457
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVOCORRENCIAS", gErr)

        Case 189458
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVOCORRENCIAS", gErr)

        Case 189459
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_TRVOCORRENCIAS", gErr)

        Case 190310
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVOCORRENCIAS_FATURADA", gErr)

        Case 190311
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVOCORRENCIAS_DEBITO", gErr)
            
        Case 192874
        
        Case 192875
            Call Rotina_Erro(vbOKOnly, "ERRO_VOUCHER_JA_CANCELADO", gErr)
            
        Case 194437, 194438
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVVOUCHERS", gErr)

        Case 194439
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVVOUCHERS", gErr)

        Case 194440
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVVOUCHERS", gErr)

        Case 194441
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVVOUCHERS_NAO_CADASTRADO", gErr, lNumVou, sTipo, sSerie)

        Case 198220
            Call Rotina_Erro(vbOKOnly, "ERRO_TRV_TIPOOCR_NAO_ALTERAVEL", gErr)
            
        Case 202790
            Call Rotina_Erro(vbOKOnly, "ERRO_ORC_VOU_ALTERADO", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 189479)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Public Function TRVOcorrenciaDet_Insere(ByVal lComando As Long, ByVal objTRVOcorrencia As ClassTRVOcorrencias) As Long

Dim lErro As Long
Dim lNumIntDoc As Long
Dim objTRVOcorrenciaDet As ClassTRVOcorrenciaDet

On Error GoTo Erro_TRVOcorrenciaDet_Insere

    For Each objTRVOcorrenciaDet In objTRVOcorrencia.colDetalhamento

        'Obter NumIntDoc
        lErro = CF("Config_ObterNumInt", "FATConfig", "NUM_INT_PROX_TRVOCORRENCIADET", lNumIntDoc)
        If lErro <> SUCESSO Then gError 189476
    
        objTRVOcorrenciaDet.lNumIntDoc = lNumIntDoc
        objTRVOcorrenciaDet.lNumIntDocOCR = objTRVOcorrencia.lNumIntDoc
    
        lErro = Comando_Executar(lComando, "INSERT INTO TRVOcorrenciaDet( NumIntDoc, NumIntDocOcr, Tipo, Valor, Seq) VALUES (?,?,?,?,?)", _
                objTRVOcorrenciaDet.lNumIntDoc, objTRVOcorrenciaDet.lNumIntDocOCR, objTRVOcorrenciaDet.iTipo, objTRVOcorrenciaDet.dValor, objTRVOcorrenciaDet.iSeq)
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 189482

    Next

    TRVOcorrenciaDet_Insere = SUCESSO

    Exit Function

Erro_TRVOcorrenciaDet_Insere:

    TRVOcorrenciaDet_Insere = gErr

    Select Case gErr

        Case 189476

        Case 189477
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_TRVOCORRENCIADET", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 189478)

    End Select

    Exit Function

End Function

Public Function TRVOcorrenciaDet_Exclui(ByVal lComando1 As Long, lComando2 As Long, ByVal objTRVOcorrencia As ClassTRVOcorrencias) As Long

Dim lErro As Long
Dim iIndice As Integer
Dim lNumIntDoc As Long

On Error GoTo Erro_TRVOcorrenciaDet_Exclui

    'Le a tabela TRVOcorrenciaDet
    lErro = Comando_ExecutarPos(lComando1, "SELECT NumIntDoc FROM TRVOcorrenciaDet WHERE NumIntDocOcr= ? ", _
                0, lNumIntDoc, objTRVOcorrencia.lNumIntDoc)
    If lErro <> AD_SQL_SUCESSO Then gError 189468

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(lComando1)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 189469

    Do While lErro <> AD_SQL_SEM_DADOS

        'Trava registro contra alterações/Leituras
        lErro = Comando_LockExclusive(lComando1)
        If lErro <> SUCESSO Then gError 189471
    
        lErro = Comando_ExecutarPos(lComando2, "DELETE FROM TRVOcorrenciaDet", lComando1)
        If lErro <> AD_SQL_SUCESSO Then gError 189472

        'Busca Próximo
        lErro = Comando_BuscarProximo(lComando1)
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 189470

    Loop

    TRVOcorrenciaDet_Exclui = SUCESSO

    Exit Function

Erro_TRVOcorrenciaDet_Exclui:

    TRVOcorrenciaDet_Exclui = gErr

    Select Case gErr

        Case 189468, 189469, 189470
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVOCORRENCIADET", gErr)

        Case 189471
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVOCORRENCIADET", gErr)

        Case 189472
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_TRVOCORRENCIADET", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 189480)

    End Select

    Exit Function

End Function

'ROTINAS CRIADAS AUTOMATICAMENTE PELA TELA BROWSECRIA
'EXCLUSÃO
Public Function TRVOcorrencias_Exclui(ByVal objTRVOcorrencias As ClassTRVOcorrencias) As Long

Dim lErro As Long
Dim lTransacao As Long

On Error GoTo Erro_TRVOcorrencias_Exclui

    'Abertura de transação
    lTransacao = Transacao_Abrir()
    If lTransacao = 0 Then gError 189441

    lErro = CF("TRVOcorrencias_Exclui_EmTrans", objTRVOcorrencias)
    If lErro <> SUCESSO Then gError 189442

    'Confirma a transação
    lErro = Transacao_Commit()
    If lErro <> AD_SQL_SUCESSO Then gError 189443

    TRVOcorrencias_Exclui = SUCESSO

    Exit Function

Erro_TRVOcorrencias_Exclui:

    TRVOcorrencias_Exclui = gErr

    Select Case gErr

        Case 189441
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_TRANSACAO", gErr)

        Case 189442

        Case 189443
            Call Rotina_Erro(vbOKOnly, "ERRO_COMMIT", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 189482)

    End Select

    'Desfaz Transação
    Call Transacao_Rollback

    Exit Function

End Function

Public Function TRVOcorrencias_Exclui_EmTrans(ByVal objTRVOcorrencias As ClassTRVOcorrencias, Optional ByVal bInativacaoExclui As Boolean = False, Optional ByVal bImportacao As Boolean = False) As Long

Dim lErro As Long
Dim alComando(0 To 5) As Long
Dim iIndice As Integer
Dim lNumIntDoc As Long
Dim iTipoDestino As Integer
Dim lNumIntDocDestino As Long
Dim iTemOcr As Integer
Dim dValorOcr As Double
Dim dValorOcrAtu As Double
Dim lNumVou As Long
Dim sTipoDoc As String
Dim sSerie As String
Dim iStatusVou As Integer
Dim iOrigem As Integer
Dim bSemDados As Boolean
Dim objVoucher As New ClassTRVVouchers
Dim dValorTotal As Double
Dim dtDataEmissao As Date
Dim lCliente As Long
Dim objOCRBD As New ClassTRVOcorrencias

On Error GoTo Erro_TRVOcorrencias_Exclui_EmTrans

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 189444
    Next
    
    sSerie = String(STRING_TRV_OCR_SERIE, 0)
    sTipoDoc = String(STRING_TRV_OCR_TIPOVOU, 0)
    
    'Le a tabela TRVOcorrencias
    If Not bInativacaoExclui Then
        If objTRVOcorrencias.lNumIntDoc <> 0 Then
            lErro = Comando_ExecutarPos(alComando(0), "SELECT NumIntDoc, TipoDocDestino, NumIntDocDestino,Origem, NumVou, TipoDoc, Serie, ValorTotal, DataEmissao, Cliente FROM TRVOcorrencias WHERE NumIntDoc= ? ", _
                        0, lNumIntDoc, iTipoDestino, lNumIntDocDestino, iOrigem, lNumVou, sTipoDoc, sSerie, dValorTotal, dtDataEmissao, lCliente, objTRVOcorrencias.lNumIntDoc)
        Else
            lErro = Comando_ExecutarPos(alComando(0), "SELECT NumIntDoc, TipoDocDestino, NumIntDocDestino,Origem, NumVou, TipoDoc, Serie, ValorTotal, DataEmissao, Cliente FROM TRVOcorrencias WHERE Codigo= ? ", _
                        0, lNumIntDoc, iTipoDestino, lNumIntDocDestino, iOrigem, lNumVou, sTipoDoc, sSerie, dValorTotal, dtDataEmissao, lCliente, objTRVOcorrencias.lCodigo)
        End If
    Else
        lErro = Comando_ExecutarPos(alComando(0), "SELECT NumIntDoc, TipoDocDestino, NumIntDocDestino,Origem, NumVou, TipoDoc, Serie, ValorTotal, DataEmissao, Cliente FROM TRVOcorrencias WHERE Origem = ? AND NumVou = ? AND TipoDoc = ? AND Serie = ? AND Cliente = ? ", _
                    0, lNumIntDoc, iTipoDestino, lNumIntDocDestino, iOrigem, lNumVou, sTipoDoc, sSerie, dValorTotal, dtDataEmissao, lCliente, INATIVACAO_AUTOMATICA_CODIGO, objTRVOcorrencias.lNumVou, objTRVOcorrencias.sTipoDoc, objTRVOcorrencias.sSerie, objTRVOcorrencias.lCliente)
    End If
    If lErro <> AD_SQL_SUCESSO Then gError 189445

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(0))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 189446

    'Se não existir => ERRO
    If lErro = AD_SQL_SEM_DADOS Then
    
        lNumVou = objTRVOcorrencias.lNumVou
        sTipoDoc = objTRVOcorrencias.sTipoDoc
        sSerie = objTRVOcorrencias.sSerie
        
        bSemDados = True
        
        If bImportacao And Not bInativacaoExclui Then
            TRVOcorrencias_Exclui_EmTrans = SUCESSO
            Exit Function
        End If
        
    Else
        bSemDados = False
    End If
    
    If bSemDados And Not bInativacaoExclui Then gError 189447
    
    'Le a tabela TRVVoucher
    lErro = Comando_ExecutarPos(alComando(4), "SELECT Status, ValorOcr FROM TRVVouchers WHERE TipoDoc= ? AND NumVou = ? AND TipVou = ? AND Serie = ? ", _
                0, iStatusVou, dValorOcr, TRV_TIPODOC_VOU_TEXTO, lNumVou, sTipoDoc, sSerie)
    If lErro <> AD_SQL_SUCESSO Then gError 194437

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(4))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 194438
    
    If lErro <> AD_SQL_SUCESSO Then gError 194441
    
    'Trava registro contra alterações/Leituras
    lErro = Comando_LockExclusive(alComando(4))
    If lErro <> SUCESSO Then gError 194439
    
    dValorOcrAtu = dValorOcr - dValorTotal
    
    If Abs(dValorOcrAtu) > DELTA_VALORMONETARIO Then
        iTemOcr = MARCADO
    Else
        iTemOcr = DESMARCADO
    End If

    If bSemDados Then
    
        If bInativacaoExclui Then
            'Se ainda não tem a OCR de inativação e for uma exclusão de inativação apenas troca o status do voucher
            lErro = Comando_ExecutarPos(alComando(5), "UPDATE TRVVouchers SET Status = ?, NumIntDocNVL = ?", alComando(4), STATUS_TRV_VOU_ABERTO, 0)
        End If
    
    ElseIf iOrigem = INATIVACAO_AUTOMATICA_CODIGO Then
        'Se tiver a ocr de inativação cadastrada atualiza os valores no voucher e o status
        lErro = Comando_ExecutarPos(alComando(5), "UPDATE TRVVouchers SET ValorOcr= ? , TemOcr= ? , Status = ?, NumIntDocNVL = ?, DataCanc  = ?, HoraCanc = ?, UsuarioCanc = ?", alComando(4), dValorOcrAtu, iTemOcr, STATUS_TRV_VOU_ABERTO, 0, DATA_NULA, 0, "")
    Else
        'Se for só uma exclusão de ocr acerta os valores no voucher
        lErro = Comando_ExecutarPos(alComando(5), "UPDATE TRVVouchers SET ValorOcr= ? , TemOcr= ? ", alComando(4), dValorOcrAtu, iTemOcr)
    End If
    If lErro <> SUCESSO Then gError 194440

    objVoucher.lNumVou = lNumVou
    objVoucher.sSerie = sSerie
    objVoucher.sTipoDoc = TRV_TIPODOC_VOU_TEXTO
    objVoucher.sTipVou = sTipoDoc
    
    objTRVOcorrencias.lNumIntDoc = lNumIntDoc
    objTRVOcorrencias.iOrigem = iOrigem
    objTRVOcorrencias.lCliente = lCliente
    
    'Tem que gerar a comissão
    If objTRVOcorrencias.iOrigem = INATIVACAO_AUTOMATICA_CODIGO Then
        lErro = TRVVou_Gera_Comis(objVoucher, -dValorTotal, 0, TRV_TIPO_VALOR_BASE_LIQ, Date, "Exclusão da inativação do Voucher", TRV_TIPO_TRATAMENTO_COMI_NVL_EXCLUSAO, objTRVOcorrencias)
    Else
        lErro = TRVVou_Gera_Comis(objVoucher, -dValorTotal, 0, TRV_TIPO_VALOR_BASE_LIQ, Date, "Exclusão da ocorrência código " & CStr(objTRVOcorrencias.lCodigo), TRV_TIPO_TRATAMENTO_COMI_OCR_EXCLUSAO, objTRVOcorrencias)
    End If
    If lErro <> SUCESSO Then gError 196382
    
    'Se não tinha a OCR cadastrada não faz mais nada
    If Not bSemDados Then
    
        objTRVOcorrencias.lNumIntDoc = lNumIntDoc

        'Trava registro contra alterações/Leituras
        lErro = Comando_LockExclusive(alComando(0))
        If lErro <> SUCESSO Then gError 189448
    
'        lErro = Comando_ExecutarPos(alComando(1), "DELETE FROM TRVOcorrencias", alComando(0))
'        If lErro <> AD_SQL_SUCESSO Then gError 189449
        
        lErro = TRVOcorrenciaDet_Exclui(alComando(2), alComando(3), objTRVOcorrencias)
        If lErro <> SUCESSO Then gError 189485
        
        lErro = Item_Exclui_Com_Destino(iTipoDestino, lNumIntDocDestino)
        If lErro <> SUCESSO Then gError 192062
        
        objOCRBD.lCodigo = objTRVOcorrencias.lCodigo
        objOCRBD.lNumIntDoc = objTRVOcorrencias.lNumIntDoc
        
        lErro = CF("TRVOcorrencias_Le", objOCRBD)
        If lErro <> SUCESSO And lErro <> ERRO_LEITURA_SEM_DADOS Then gError 192062
       
        lErro = TRVOcrExp_Insere(objOCRBD, True)
        If lErro <> SUCESSO Then gError 192062
        
        lErro = Comando_ExecutarPos(alComando(1), "DELETE FROM TRVOcorrencias", alComando(0))
        If lErro <> AD_SQL_SUCESSO Then gError 189449

    End If
    
    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVOcorrencias_Exclui_EmTrans = SUCESSO

    Exit Function

Erro_TRVOcorrencias_Exclui_EmTrans:

    TRVOcorrencias_Exclui_EmTrans = gErr

    Select Case gErr

        Case 189444
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 189445, 189446
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVOCORRENCIAS", gErr)

        Case 189447
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVOCORRENCIAS_NAO_CADASTRADO", gErr, objTRVOcorrencias.lCodigo)

        Case 189448
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVOCORRENCIAS", gErr)

        Case 189449
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_TRVOCORRENCIAS", gErr)
            
        Case 189485, 192062, 196381, 196382

        Case 194437, 194438
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVVOUCHERS", gErr)

        Case 194439
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVVOUCHERS", gErr)

        Case 194440
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVVOUCHERS", gErr)

        Case 194441
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVVOUCHERS_NAO_CADASTRADO", gErr, lNumVou, sTipoDoc, sSerie)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 189481)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Private Function Item_Exclui_Com_Destino(ByVal iTipoDestino As Integer, ByVal lNumIntDocDestino As Long) As Long

Dim lErro As Long
Dim objDebitoRecCli As New ClassDebitoRecCli
Dim objContabil As New ClassContabil
Dim objCreditoPagar As New ClassCreditoPagar

On Error GoTo Erro_Item_Exclui_Com_Destino
    
    If lNumIntDocDestino <> 0 Then
    
        Select Case iTipoDestino
    
            Case TRV_TIPO_DOC_DESTINO_DEBCLI
                       
                Call objContabil.Contabil_Inicializa_Contabilidade4(29, MODULO_CONTASARECEBER)
                
                objDebitoRecCli.lNumIntDoc = lNumIntDocDestino
                
                'Verifica se o debito a receber existe
                lErro = CF("DebitoReceber_Le", objDebitoRecCli)
                If lErro <> SUCESSO And lErro <> 17835 Then gError 192059
                
                lErro = CF("DebitoRecCli_Exclui_EmTransacao", objDebitoRecCli, objContabil)
                If lErro <> SUCESSO Then gError 192059
        
            Case TRV_TIPO_DOC_DESTINO_CREDFORN
            
                Call objContabil.Contabil_Inicializa_Contabilidade4(28, MODULO_CONTASAPAGAR)
        
                objCreditoPagar.lNumIntDoc = lNumIntDocDestino
                
                'Verifica se o credito a pagar existe
                lErro = CF("CreditoPagar_Le", objCreditoPagar)
                If lErro <> SUCESSO And lErro <> 17071 Then gError 192060
                
                lErro = CF("CreditoPagar_Exclui_EmTransacao", objCreditoPagar, objContabil)
                If lErro <> SUCESSO Then gError 192060
        
            Case Else
                gError 192058
    
        End Select
        
    End If

    Item_Exclui_Com_Destino = SUCESSO

    Exit Function

Erro_Item_Exclui_Com_Destino:

    Item_Exclui_Com_Destino = gErr

    Select Case gErr

        Case 192059, 192060
        
        Case 192058
            Call Rotina_Erro(vbOKOnly, "ERRO_ITEM_JA_FATURADO", gErr, iTipoDestino, lNumIntDocDestino)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 192061)

    End Select

    Exit Function

End Function

Public Function CamposGenericos_ValidaExclusao_TRVOCROrigem() As Long
'Verifica se é válida a exclusão de valores para o campo Origem

Dim alComando(1 To 2) As Long
Dim lErro As Long
Dim lCodigo As Long
Dim iOrigem As Integer
Dim sValor As String
Dim iIndice As Integer

On Error GoTo Erro_CamposGenericos_ValidaExclusao_TRVOCROrigem
    
    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 190154
    Next
    
    'Busca nas ocorrências origens que não existam na tabela CamposGenericos Valores
    lErro = Comando_Executar(alComando(1), "SELECT Codigo, Origem FROM TRVOcorrencias WHERE Origem NOT IN (SELECT CodValor FROM CamposGenericosValores WHERE CodCampo = ?) ", lCodigo, iOrigem, CAMPOSGENERICOS_TRVORIGEM_OCR)
    If lErro <> AD_SQL_SUCESSO Then gError 190155
    
    'Posiciona no primeiro registro
    lErro = Comando_BuscarPrimeiro(alComando(1))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 190156
    
    'Se encontrou algum registro => erro de inconsistência
    If lErro = AD_SQL_SUCESSO Then gError 190157
    
    sValor = String(STRING_CAMPOSGENERICOSVALORES_VALOR, 0)
    
    'Busca nas ocorrências origens que não existam na tabela CamposGenericos Valores
    lErro = Comando_Executar(alComando(2), "SELECT Valor FROM CamposGenericosValores WHERE CodCampo = ? AND CodValor = ? ", sValor, CAMPOSGENERICOS_TRVORIGEM_OCR, INATIVACAO_AUTOMATICA_CODIGO)
    If lErro <> AD_SQL_SUCESSO Then gError 190555
    
    'Posiciona no primeiro registro
    lErro = Comando_BuscarPrimeiro(alComando(2))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 190556
    
    'O código 1 é obrigatório pois é utilizado nas inativações automáticas
    If lErro <> AD_SQL_SUCESSO Then gError 190557
    
    If sValor <> INATIVACAO_AUTOMATICA_TEXTO Then gError 190558
    
    'Busca nas ocorrências origens que não existam na tabela CamposGenericos Valores
    lErro = Comando_Executar(alComando(2), "SELECT Valor FROM CamposGenericosValores WHERE CodCampo = ? AND CodValor = ? ", sValor, CAMPOSGENERICOS_TRVORIGEM_OCR, IMPORTACAO_OCORRENCIA_CODIGO)
    If lErro <> AD_SQL_SUCESSO Then gError 194430
    
    'Posiciona no primeiro registro
    lErro = Comando_BuscarPrimeiro(alComando(2))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 194431
    
    'O código 2 é obrigatório pois é utilizado nas importações de ocorrências
    If lErro <> AD_SQL_SUCESSO Then gError 194432
    
    If sValor <> IMPORTACAO_OCORRENCIA_TEXTO Then gError 194433
    
    'Fecha comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next
    
    CamposGenericos_ValidaExclusao_TRVOCROrigem = SUCESSO
    
    Exit Function
    
Erro_CamposGenericos_ValidaExclusao_TRVOCROrigem:

    CamposGenericos_ValidaExclusao_TRVOCROrigem = gErr
    
    Select Case gErr
    
        Case 190154
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)
        
        Case 190155, 190156, 190555, 190556, 194430, 194431
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_CAMPOSGENERICOS", gErr, CAMPOSGENERICOS_TRVORIGEM_OCR)
        
        Case 190157
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_ORIGEM_OCR", gErr, iOrigem, lCodigo)
            
        Case 190557
            Call Rotina_Erro(vbOKOnly, "ERRO_ORIGEMOCR_CODIGO_OBRIGATORIO", gErr, INATIVACAO_AUTOMATICA_CODIGO)
        
        Case 190558
            Call Rotina_Erro(vbOKOnly, "ERRO_ORIGEMOCR_TEXTO_OBRIGATORIO", gErr, INATIVACAO_AUTOMATICA_CODIGO, INATIVACAO_AUTOMATICA_TEXTO)
            
        Case 194432
            Call Rotina_Erro(vbOKOnly, "ERRO_ORIGEMOCR_CODIGO_OBRIGATORIO", gErr, IMPORTACAO_OCORRENCIA_CODIGO)
        
        Case 194433
            Call Rotina_Erro(vbOKOnly, "ERRO_ORIGEMOCR_TEXTO_OBRIGATORIO", gErr, IMPORTACAO_OCORRENCIA_CODIGO, IMPORTACAO_OCORRENCIA_TEXTO)
            
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error$, 190158)
    
    End Select

    'Fecha comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

End Function

Public Function CamposGenericos_ValidaExclusao_TRVOCRTipo() As Long
'Verifica se é válida a exclusão de valores para o campo Tipo

Dim alComando(1 To 2) As Long
Dim lErro As Long
Dim lCodigo As Long
Dim iTipo As Integer
Dim iTipoAux As Integer
Dim sTextoAux As String
Dim iIndice As Integer
Dim sValor As String

On Error GoTo Erro_CamposGenericos_ValidaExclusao_TRVOCRTipo
    
    'Abre comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 190159
    Next
    
    'Busca nas ocorrências origens que não existam na tabela CamposGenericos Valores
    lErro = Comando_Executar(alComando(1), "SELECT O.Codigo, D.Tipo FROM TRVOcorrenciaDet AS D, TRVOcorrencias AS O WHERE O.NumIntDoc = D.NumIntDocOcr AND D.Tipo NOT IN (SELECT CodValor FROM CamposGenericosValores WHERE CodCampo = ?) ", lCodigo, iTipo, CAMPOSGENERICOS_TRVTIPODET_OCR)
    If lErro <> AD_SQL_SUCESSO Then gError 190160
    
    'Posiciona no primeiro registro
    lErro = Comando_BuscarPrimeiro(alComando(1))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 190161
    
    'Se encontrou algum registro => erro de inconsistência
    If lErro = AD_SQL_SUCESSO Then gError 190162
    
    For iIndice = 1 To 6
    
        Select Case iIndice
        
            Case 1
                iTipoAux = INATIVACAO_AUTOMATICA_TIPO_NVL_CODIGO
                sTextoAux = INATIVACAO_AUTOMATICA_TIPO_NVL_TEXTO
            Case 2
                iTipoAux = INATIVACAO_AUTOMATICA_TIPO_TAR_CODIGO
                sTextoAux = INATIVACAO_AUTOMATICA_TIPO_TAR_TEXTO
            Case 3
                iTipoAux = INATIVACAO_AUTOMATICA_TIPO_PIS_CODIGO
                sTextoAux = INATIVACAO_AUTOMATICA_TIPO_PIS_TEXTO
            Case 4
                iTipoAux = INATIVACAO_AUTOMATICA_TIPO_COFINS_CODIGO
                sTextoAux = INATIVACAO_AUTOMATICA_TIPO_COFINS_TEXTO
            Case 5
                iTipoAux = INATIVACAO_AUTOMATICA_TIPO_ISS_CODIGO
                sTextoAux = INATIVACAO_AUTOMATICA_TIPO_ISS_TEXTO
            Case 6
                iTipoAux = IMPORTACAO_OCORRENCIA_TIPO_IMP_CODIGO
                sTextoAux = IMPORTACAO_OCORRENCIA_TIPO_IMP_TEXTO

        End Select
        
        sValor = String(STRING_CAMPOSGENERICOSVALORES_VALOR, 0)
    
        'Busca nas ocorrências origens que não existam na tabela CamposGenericos Valores
        lErro = Comando_Executar(alComando(2), "SELECT Valor FROM CamposGenericosValores WHERE CodCampo = ? AND CodValor = ? ", sValor, CAMPOSGENERICOS_TRVTIPODET_OCR, iTipoAux)
        If lErro <> AD_SQL_SUCESSO Then gError 190559
        
        'Posiciona no primeiro registro
        lErro = Comando_BuscarPrimeiro(alComando(2))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 190560
        
        'O código 1 é obrigatório pois é utilizado nas inativações automáticas
        If lErro <> AD_SQL_SUCESSO Then gError 190561
        
        If sValor <> sTextoAux Then gError 190562
        
    Next
    
    'Fecha comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next
    
    CamposGenericos_ValidaExclusao_TRVOCRTipo = SUCESSO
    
    Exit Function
    
Erro_CamposGenericos_ValidaExclusao_TRVOCRTipo:

    CamposGenericos_ValidaExclusao_TRVOCRTipo = gErr
    
    Select Case gErr
    
        Case 190159
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)
        
        Case 190160, 190161, 190559, 190560
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_CAMPOSGENERICOS", gErr, CAMPOSGENERICOS_TRVTIPODET_OCR)
        
        Case 190162
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_TIPO_OCR", gErr, iTipo, lCodigo)
            
        Case 190561
            Call Rotina_Erro(vbOKOnly, "ERRO_TIPOOCR_CODIGO_OBRIGATORIO", gErr, iTipoAux)
        
        Case 190562
            Call Rotina_Erro(vbOKOnly, "ERRO_TIPOOCR_TEXTO_OBRIGATORIO", gErr, iTipoAux, sTextoAux)
            
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error$, 190163)
    
    End Select

    'Fecha comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

End Function

Public Function CamposGenericos_ValidaExclusao_TRVAporteTipo() As Long
'Verifica se é válida a exclusão de valores para o campo Tipo

Dim lComando As Long
Dim lErro As Long
Dim lCodigo As Long
Dim iTipo As Integer

On Error GoTo Erro_CamposGenericos_ValidaExclusao_TRVAporteTipo
    
    'Abre comando
    lComando = Comando_Abrir()
    If lComando = 0 Then gError 190550
    
    'Busca nas ocorrências origens que não existam na tabela CamposGenericos Valores
    lErro = Comando_Executar(lComando, "SELECT Codigo, Tipo FROM TRVAportes WHERE Tipo NOT IN (SELECT CodValor FROM CamposGenericosValores WHERE CodCampo = ?) ", lCodigo, iTipo, CAMPOSGENERICOS_TRVTIPOAPORTE_OCR)
    If lErro <> AD_SQL_SUCESSO Then gError 190551
    
    'Posiciona no primeiro registro
    lErro = Comando_BuscarPrimeiro(lComando)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 190552
    
    'Se encontrou algum registro => erro de inconsistência
    If lErro = AD_SQL_SUCESSO Then gError 190553
    
    'Fecha comando
    Call Comando_Fechar(lComando)
    
    CamposGenericos_ValidaExclusao_TRVAporteTipo = SUCESSO
    
    Exit Function
    
Erro_CamposGenericos_ValidaExclusao_TRVAporteTipo:

    CamposGenericos_ValidaExclusao_TRVAporteTipo = gErr
    
    Select Case gErr
    
        Case 190550
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)
        
        Case 190551, 190552
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_CAMPOSGENERICOS", gErr, CAMPOSGENERICOS_TRVTIPODET_OCR)
        
        Case 190553
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_TIPO_APORTE", gErr, iTipo, lCodigo)
            
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error$, 190554)
    
    End Select

    'Fecha comando
    Call Comando_Fechar(lComando)

End Function

'ROTINAS CRIADAS AUTOMATICAMENTE PELA TELA BROWSECRIA
'GRAVAÇÃO
Public Function TRVOcorrencias_Libera(ByVal colOcorrencias As Collection) As Long

Dim lErro As Long
Dim lTransacao As Long
Dim objTRVOcorrencias As ClassTRVOcorrencias
Dim alComando(0 To 4) As Long
Dim iIndice As Integer

On Error GoTo Erro_TRVOcorrencias_Libera

    'Abertura de transação
    lTransacao = Transacao_Abrir()
    If lTransacao = 0 Then gError 190306
    
    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 190312
    Next
    
    For Each objTRVOcorrencias In colOcorrencias
    
        lErro = TRVOcorrencias_Grava_EmTrans(objTRVOcorrencias, , , True)
        If lErro <> SUCESSO Then gError 190307

        lErro = TRVOcorrencias_Libera_EmTrans(alComando, objTRVOcorrencias)
        If lErro <> SUCESSO Then gError 190307
        
    Next
    
    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    'Confirma a transação
    lErro = Transacao_Commit()
    If lErro <> AD_SQL_SUCESSO Then gError 190308

    TRVOcorrencias_Libera = SUCESSO

    Exit Function

Erro_TRVOcorrencias_Libera:

    TRVOcorrencias_Libera = gErr

    Select Case gErr

        Case 190306
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_TRANSACAO", gErr)

        Case 190307

        Case 190308
            Call Rotina_Erro(vbOKOnly, "ERRO_COMMIT", gErr)

        Case 190312
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 190309)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next
    
    'Desfaz Transação
    Call Transacao_Rollback

    Exit Function

End Function

Public Function TRVOcorrencias_Libera_EmTrans(alComando() As Long, ByVal objTRVOcorrencias As ClassTRVOcorrencias) As Long

Dim lErro As Long
Dim lNumIntDoc As Long
Dim objDebitoRecCli As New ClassDebitoRecCli
Dim colInfoComissao As New colInfoComissao
Dim objContabil As ClassContabil
Dim objCreditoPagar As New ClassCreditoPagar

On Error GoTo Erro_TRVOcorrencias_Libera_EmTrans

    objTRVOcorrencias.iStatus = STATUS_TRV_OCR_LIBERADO

    If objTRVOcorrencias.iFormaPagto = FORMAPAGTO_TRV_OCR_FAT Then
        'Não precisa fazer nada => O Tratamento é dado na tela de Faturamento
    Else
        'Gera o crédito e informa o número do numintdoc do débito
    
        If objTRVOcorrencias.dValorTotal < 0 Then
        
            objDebitoRecCli.iFilialEmpresa = giFilialEmpresa
            objDebitoRecCli.lCliente = objTRVOcorrencias.lCliente
            objDebitoRecCli.iFilial = objTRVOcorrencias.iFilialCliente
            objDebitoRecCli.sSiglaDocumento = "NCR" 'Nota de crédito
            objDebitoRecCli.lNumTitulo = objTRVOcorrencias.lCodigo
            objDebitoRecCli.dtDataEmissao = objTRVOcorrencias.dtDataEmissao
            objDebitoRecCli.dValorTotal = Abs(objTRVOcorrencias.dValorTotal)
            objDebitoRecCli.dValorProdutos = Abs(objTRVOcorrencias.dValorTotal)
            
            lErro = CF("DebitoRecCli_Grava_EmTrans", objDebitoRecCli, colInfoComissao, objContabil)
            If lErro <> SUCESSO Then gError 190315
            
            objTRVOcorrencias.lNumIntDocDestino = objDebitoRecCli.lNumIntDoc
            objTRVOcorrencias.iTipoDocDestino = TRV_TIPO_DOC_DESTINO_DEBCLI
            objTRVOcorrencias.lNumDocDestino = objDebitoRecCli.lNumTitulo
        
        Else
        
            objCreditoPagar.iFilialEmpresa = giFilialEmpresa
            objCreditoPagar.lFornecedor = objTRVOcorrencias.lCliente
            objCreditoPagar.iFilial = objTRVOcorrencias.iFilialCliente
            objCreditoPagar.sSiglaDocumento = "NCP" 'Nota de crédito
            objCreditoPagar.lNumTitulo = objTRVOcorrencias.lCodigo
            objCreditoPagar.dtDataEmissao = objTRVOcorrencias.dtDataEmissao
            objCreditoPagar.dValorTotal = Abs(objTRVOcorrencias.dValorTotal)
            objCreditoPagar.dValorProdutos = Abs(objTRVOcorrencias.dValorTotal)
            
            lErro = CF("CreditoPagar_Grava_EmTrans", objCreditoPagar, objContabil)
            If lErro <> SUCESSO Then gError 190325
            
            objTRVOcorrencias.lNumIntDocDestino = objCreditoPagar.lNumIntDoc
            objTRVOcorrencias.iTipoDocDestino = TRV_TIPO_DOC_DESTINO_CREDFORN
            objTRVOcorrencias.lNumDocDestino = objCreditoPagar.lNumTitulo
    
        End If
    
    End If
    
    'Le a tabelaTRVOcorrencias
    lErro = Comando_ExecutarPos(alComando(0), "SELECT NumIntDoc FROM TRVOcorrencias WHERE Codigo= ? ", _
                0, lNumIntDoc, objTRVOcorrencias.lCodigo)
    If lErro <> AD_SQL_SUCESSO Then gError 190316

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(0))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 190317

    'Se existir => UPDATE, senão => INSERT
    If lErro <> AD_SQL_SUCESSO Then gError 190318

    'Trava registro contra alterações/Leituras
    lErro = Comando_LockExclusive(alComando(0))
    If lErro <> SUCESSO Then gError 190319
    
    objTRVOcorrencias.lNumIntDoc = lNumIntDoc

    'Altera o Status da ocorrencia e a forma de pagamento
    lErro = Comando_ExecutarPos(alComando(1), "UPDATE TRVOcorrencias SET Status= ? , FormaPagto= ?, NumIntDocDestino = ?, DataLiberacao = ? , Usuario = ?, TipoDocDestino = ?, ValorTotal = ?, NumTitulo = ? ", alComando(0), objTRVOcorrencias.iStatus, objTRVOcorrencias.iFormaPagto, objTRVOcorrencias.lNumIntDocDestino, Date, gsUsuario, objTRVOcorrencias.iTipoDocDestino, objTRVOcorrencias.dValorTotal, objTRVOcorrencias.lNumDocDestino)
    If lErro <> AD_SQL_SUCESSO Then gError 190320
    
    lErro = TRVOcorrenciaDet_Exclui(alComando(2), alComando(3), objTRVOcorrencias)
    If lErro <> SUCESSO Then gError 190321
    
    lErro = TRVOcorrenciaDet_Insere(alComando(4), objTRVOcorrencias)
    If lErro <> SUCESSO Then gError 190322
    
    lErro = TRVOcrExp_Insere(objTRVOcorrencias)
    If lErro <> SUCESSO Then gError 190322

    TRVOcorrencias_Libera_EmTrans = SUCESSO

    Exit Function

Erro_TRVOcorrencias_Libera_EmTrans:

    TRVOcorrencias_Libera_EmTrans = gErr

    Select Case gErr
        
        Case 190316, 190317
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVOCORRENCIAS", gErr)
            
        Case 190318
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVOCORRENCIAS_NAO_CADASTRADO", gErr, objTRVOcorrencias.lCodigo)

        Case 190319
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVOCORRENCIAS", gErr)

        Case 190320
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVOCORRENCIAS", gErr)
            
        Case 190321, 190322, 190325
        
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 190323)

    End Select

    Exit Function

End Function

'ROTINAS CRIADAS AUTOMATICAMENTE PELA TELA BROWSECRIA
'GRAVAÇÃO
Public Function TRVAportes_Grava(ByVal objTRVAportes As ClassTRVAportes) As Long

Dim lErro As Long
Dim lTransacao As Long

On Error GoTo Erro_TRVAportes_Grava

    lErro = TRVAportes_Valida(objTRVAportes)
    If lErro <> SUCESSO Then gError 196478

    'Abertura de transação
    lTransacao = Transacao_Abrir()
    If lTransacao = 0 Then gError 190348

    lErro = CF("TRVAportes_Grava_EmTrans", objTRVAportes)
    If lErro <> SUCESSO Then gError 190349

    'Confirma a transação
    lErro = Transacao_Commit()
    If lErro <> AD_SQL_SUCESSO Then gError 190350

    TRVAportes_Grava = SUCESSO

    Exit Function

Erro_TRVAportes_Grava:

    TRVAportes_Grava = gErr

    Select Case gErr

        Case 190348
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_TRANSACAO", gErr)

        Case 190349, 196478

        Case 190350
            Call Rotina_Erro(vbOKOnly, "ERRO_COMMIT", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 190351)

    End Select

    'Desfaz Transação
    Call Transacao_Rollback

    Exit Function

End Function

Public Function TRVAportes_Grava_EmTrans(ByVal objTRVAportes As ClassTRVAportes) As Long

Dim lErro As Long
Dim alComando(0 To 100) As Long
Dim iIndice As Integer
Dim lNumIntDoc As Long
Dim iProxCmd As Integer
Dim iMoeda As Integer

On Error GoTo Erro_TRVAportes_Grava_EmTrans

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 190352
    Next

    'Le a tabelaTRVAportes
    lErro = Comando_ExecutarPos(alComando(0), "SELECT NumIntDoc, Moeda FROM TRVAportes WHERE Codigo= ? ", _
                0, lNumIntDoc, iMoeda, objTRVAportes.lCodigo)
    If lErro <> AD_SQL_SUCESSO Then gError 190353

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(0))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 190354

    'Se existir => UPDATE, senão => INSERT
    If lErro = AD_SQL_SUCESSO Then

        'Trava registro contra alterações/Leituras
        lErro = Comando_LockExclusive(alComando(0))
        If lErro <> SUCESSO Then gError 190355
        
        objTRVAportes.lNumIntDoc = lNumIntDoc
        
        If iMoeda <> objTRVAportes.iMoeda Then gError 192887

        lErro = Comando_ExecutarPos(alComando(1), "UPDATE TRVAportes SET Cliente= ? , FilialCliente= ? , DataEmissao= ? , Observacao= ? , " & _
                "Historico= ? , Tipo= ? , Moeda= ? , PrevValor= ? , PrevDataDe= ? , " & _
                "PrevDataAte= ? ", alComando(0), _
                objTRVAportes.lCliente, objTRVAportes.iFilialCliente, objTRVAportes.dtDataEmissao, objTRVAportes.sObservacao, _
                objTRVAportes.sHistorico, objTRVAportes.iTipo, objTRVAportes.iMoeda, objTRVAportes.dPrevValor, objTRVAportes.dtPrevDataDe, _
                objTRVAportes.dtPrevDataAte)
        If lErro <> AD_SQL_SUCESSO Then gError 190356

    Else

        'Obter NumIntDoc
        lErro = CF("Config_ObterNumInt", "FATConfig", "NUM_INT_PROX_TRVAPORTES", lNumIntDoc)
        If lErro <> SUCESSO Then gError 190357

        objTRVAportes.lNumIntDoc = lNumIntDoc

        lErro = Comando_Executar(alComando(1), "INSERT INTO TRVAportes( NumIntDoc, Codigo, Cliente, FilialCliente, " & _
                "DataEmissao, Observacao, Historico, Tipo, Moeda, " & _
                "PrevValor, PrevDataDe, PrevDataAte) VALUES (?,?,?,?,?,?,?,?,?,?,?,?)", _
                objTRVAportes.lNumIntDoc, objTRVAportes.lCodigo, objTRVAportes.lCliente, objTRVAportes.iFilialCliente, _
                objTRVAportes.dtDataEmissao, objTRVAportes.sObservacao, objTRVAportes.sHistorico, objTRVAportes.iTipo, objTRVAportes.iMoeda, _
                objTRVAportes.dPrevValor, objTRVAportes.dtPrevDataDe, objTRVAportes.dtPrevDataAte)
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 190358

    End If
    
    iProxCmd = 1
    
    lErro = TRVAportes_Grava_Pagtos(alComando, objTRVAportes, iProxCmd)
    If lErro <> SUCESSO Then gError 190359

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVAportes_Grava_EmTrans = SUCESSO

    Exit Function

Erro_TRVAportes_Grava_EmTrans:

    TRVAportes_Grava_EmTrans = gErr

    Select Case gErr

        Case 190352
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 190353, 190354
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVAPORTES", gErr)

        Case 190355
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVAPORTES", gErr)

        Case 190356
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVAPORTES", gErr)

        Case 190357, 190359
        
        Case 190358
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_TRVAPORTES", gErr)
            
        Case 192887
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVAPORTES_TROCA_MOEDA", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 190360)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Public Function TRVAportes_Grava_Pagtos(alComando() As Long, ByVal objAporte As ClassTRVAportes, iProxCmd As Integer) As Long

Dim lErro As Long
Dim objAporteBD As New ClassTRVAportes
Dim bAchou As Boolean
Dim bExisteDestino As Boolean
Dim lNumTitulo As Long
Dim sDoc As String
Dim iIndice As Integer
Dim colColecaoBD As Collection
Dim colColecao As Collection
Dim objObjetoBD As Object
Dim objObjeto As Object
Dim sPrefixoFunc As String
Dim iSeq As Integer

On Error GoTo Erro_TRVAportes_Grava_Pagtos

    'A tela tem que manter os numintdoc nos pagtos
    
    objAporteBD.lCodigo = objAporte.lCodigo
    
    'Le o aporte do BD
    lErro = CF("TRVAportes_Le_Aux", alComando, objAporteBD, iProxCmd, True, True)
    If lErro <> SUCESSO And lErro <> ERRO_LEITURA_SEM_DADOS Then gError 190365
    
    '1 para cada tipo de pagamento
    'Para evitar código duplicado
    For iIndice = 1 To 4
    
        iSeq = 0
    
        If iIndice = 1 Then
            Set colColecaoBD = objAporteBD.colPagtoCondicionados
            Set colColecao = objAporte.colPagtoCondicionados
            sPrefixoFunc = "TRVAportePagtoCond"
        ElseIf iIndice = 2 Then
            Set colColecaoBD = objAporteBD.colPagtoDireto
            Set colColecao = objAporte.colPagtoDireto
            sPrefixoFunc = "TRVAportePagtoDireto"
        ElseIf iIndice = 3 Then
            Set colColecaoBD = objAporteBD.colPagtoSobreFaturaCond
            Set colColecao = objAporte.colPagtoSobreFaturaCond
            sPrefixoFunc = "TRVAportePagtoFatCond"
        Else
            Set colColecaoBD = objAporteBD.colPagtoSobreFatura
            Set colColecao = objAporte.colPagtoSobreFatura
            sPrefixoFunc = "TRVAportePagtoFat"
        End If
    
        For Each objObjeto In colColecao
        
            iSeq = iSeq + 1
        
            objObjeto.iSeq = iSeq
        
            objObjeto.lNumIntDocAporte = objAporte.lNumIntDoc
        
            If objObjeto.lNumIntDoc = 0 Then
                lErro = CF(sPrefixoFunc & "_Insere", alComando(iProxCmd), objObjeto, objAporte)
                iProxCmd = iProxCmd + 1
                If lErro <> SUCESSO Then gError 190366
            Else
            
                bAchou = False
                For Each objObjetoBD In colColecaoBD
                    If objObjeto.lNumIntDoc = objObjetoBD.lNumIntDoc Then
                        bAchou = True
                        Exit For
                    End If
                Next
                If Not bAchou Then gError 190367 ' NumIntDoc inexistente no BD
                
                If iIndice < 3 Then
                    'Esse código é apenas para reforçar o código da tela que já
                    'não deixa excluir ou alterar um item que já tenha originado outro
                    lErro = CF("Verifica_Existencia_Doc_TRV", objObjetoBD.lNumIntDocDestino, objObjetoBD.iTipoDocDestino, bExisteDestino, lNumTitulo, sDoc)
                    If lErro <> SUCESSO Then gError 190368
                Else
                    bExisteDestino = False
                End If
                
                If Not bExisteDestino Then
                    iProxCmd = iProxCmd + 1
                    lErro = CF(sPrefixoFunc & "_Atualiza", alComando(iProxCmd - 1), alComando(iProxCmd), objObjeto, objAporte)
                    iProxCmd = iProxCmd + 1
                    If lErro <> SUCESSO Then gError 190369
                End If
            End If
        Next
    
        For Each objObjetoBD In colColecaoBD
            bAchou = False
            For Each objObjeto In colColecao
                If objObjeto.lNumIntDoc = objObjetoBD.lNumIntDoc Then
                    bAchou = True
                    Exit For
                End If
            Next
            'Tinha antes e já não tem mais
            If Not bAchou Then
            
                If iIndice < 3 Then
                    'Esse código é apenas para reforçar o código da tela que já
                    'não deixa excluir ou alterar um item que já tenha originado outro
                    lErro = CF("Verifica_Existencia_Doc_TRV", objObjetoBD.lNumIntDocDestino, objObjetoBD.iTipoDocDestino, bExisteDestino, lNumTitulo, sDoc)
                    If lErro <> SUCESSO Then gError 190370
                
                    If bExisteDestino And objObjetoBD.iTipoDocDestino <> TRV_TIPO_DOC_DESTINO_DEBCLI And objObjetoBD.iTipoDocDestino <> TRV_TIPO_DOC_DESTINO_CREDFORN Then gError 190371
                Else
                    bExisteDestino = False
                End If
                
                
                iProxCmd = iProxCmd + 1
                lErro = CF(sPrefixoFunc & "_Exclui", alComando(iProxCmd - 1), alComando(iProxCmd), objObjetoBD)
                iProxCmd = iProxCmd + 1
                If lErro <> SUCESSO Then gError 190372
    
            End If
        Next
        
    Next
    
    TRVAportes_Grava_Pagtos = SUCESSO

    Exit Function

Erro_TRVAportes_Grava_Pagtos:

    TRVAportes_Grava_Pagtos = gErr

    Select Case gErr
    
        Case 190365, 190366, 190368 To 190370, 190372
        
        Case 190367
            Call Rotina_Erro(vbOKOnly, "ERRO_NUMINTDOC_NAO_CADASTRADO_TABELA", gErr, objObjeto.lNumIntDoc, sPrefixoFunc)
        
        Case 190371
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_EXISTE_DOC_DESTINO", gErr, sDoc)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 190373)

    End Select

    Exit Function

End Function

Public Function Verifica_Existencia_Doc_TRV(ByVal lNumIntDoc As Long, ByVal iTipo As Integer, bExiste As Boolean, lNumTitulo As Long, sDoc As String) As Long

Dim lErro As Long
Dim alComando(0 To 1) As Long
Dim iIndice As Integer
Dim sTabela As String
Dim sSQL As String
Dim sDocAux As String
Dim sFiltro As String

On Error GoTo Erro_Verifica_Existencia_Doc_TRV

    bExiste = False
    sDoc = ""

    If iTipo <> 0 And lNumIntDoc <> 0 Then

        'Abertura de Comando
        For iIndice = LBound(alComando) To UBound(alComando)
            alComando(iIndice) = Comando_Abrir()
            If alComando(iIndice) = 0 Then gError 190361
        Next
        
        Select Case iTipo
        
            Case TRV_TIPO_DOC_DESTINO_CREDFORN
                sTabela = TRV_TIPO_DOC_DESTINO_CREDFORN_TABELA
                sDocAux = TRV_TIPO_DOC_DESTINO_CREDFORN_TEXTO
                sFiltro = ""
                
            Case TRV_TIPO_DOC_DESTINO_DEBCLI
                sTabela = TRV_TIPO_DOC_DESTINO_DEBCLI_TABELA
                sDocAux = TRV_TIPO_DOC_DESTINO_DEBCLI_TEXTO
                sFiltro = ""
        
            Case TRV_TIPO_DOC_DESTINO_TITPAG
                sTabela = TRV_TIPO_DOC_DESTINO_TITPAG_TABELA
                sDocAux = TRV_TIPO_DOC_DESTINO_TITPAG_TEXTO
                sFiltro = " AND Status <> 5 "
        
            Case TRV_TIPO_DOC_DESTINO_TITREC
                sTabela = TRV_TIPO_DOC_DESTINO_TITREC_TABELA
                sDocAux = TRV_TIPO_DOC_DESTINO_TITREC_TEXTO
                sFiltro = " AND Status <> 5 "
        
            Case TRV_TIPO_DOC_DESTINO_NFSPAG
                sTabela = TRV_TIPO_DOC_DESTINO_NFSPAG_TABELA
                sDocAux = TRV_TIPO_DOC_DESTINO_NFSPAG_TEXTO
                sFiltro = " AND Status <> 5 "
        
        End Select
        
        sDocAux = sDocAux & " n° "
    
        sSQL = "SELECT NumTitulo FROM " & sTabela & " WHERE NumIntDoc = ? " & sFiltro
    
        lErro = Comando_Executar(alComando(0), sSQL, lNumTitulo, lNumIntDoc)
        If lErro <> AD_SQL_SUCESSO Then gError 190362
    
        'Busca Primeiro
        lErro = Comando_BuscarPrimeiro(alComando(0))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 190363
    
        If lErro <> AD_SQL_SEM_DADOS Then
            bExiste = True
            sDoc = sDocAux & CStr(lNumTitulo)
        End If
    
    End If

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Verifica_Existencia_Doc_TRV = SUCESSO

    Exit Function

Erro_Verifica_Existencia_Doc_TRV:

    Verifica_Existencia_Doc_TRV = gErr

    Select Case gErr

        Case 190361
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)
            
        Case 190362 To 190363
            Call Rotina_Erro(vbOKOnly, "ERRO_PREPARACAO_COMANDO_SQL", gErr, sSQL)
        
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 190364)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Public Function TRVAportePagtoCond_Atualiza(ByVal lComando1 As Long, ByVal lComando2 As Long, ByVal objTRVAportePagtoCond As ClassTRVAportePagtoCond, Optional ByVal objAporte As ClassTRVAportes) As Long

Dim lErro As Long
Dim tPagto As typeTRVAportePagtoCond
Dim lNumIntDoc As Long
Dim iStatus As Integer

On Error GoTo Erro_TRVAportePagtoCond_Atualiza

    'Le a tabelaTRVAportePagtoCond
    lErro = Comando_ExecutarPos(lComando1, "SELECT NumIntDoc, Status FROM TRVAportePagtoCond WHERE NumIntDoc = ? ", 0, lNumIntDoc, iStatus, objTRVAportePagtoCond.lNumIntDoc)
    If lErro <> AD_SQL_SUCESSO Then gError 190385

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(lComando1)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 190386

    If lErro <> AD_SQL_SUCESSO Then gError 190387
    
    'If iStatus <> STATUS_TRV_OCR_BLOQUEADO Then gError 190563
    
    If iStatus = STATUS_TRV_OCR_BLOQUEADO Then
    
        lErro = Comando_ExecutarPos(lComando2, "UPDATE TRVAportePagtoCond SET NumIntDocAporte= ? , Base= ? , DataPagto= ? , " & _
                "NumIntDocDestino= ? , FormaPagto= ? , TipoDocDestino= ? , Percentual= ?, Seq = ? ", lComando1, _
                objTRVAportePagtoCond.lNumIntDocAporte, objTRVAportePagtoCond.iBase, objTRVAportePagtoCond.dtDataPagto, _
                objTRVAportePagtoCond.lNumIntDocDestino, objTRVAportePagtoCond.iFormaPagto, objTRVAportePagtoCond.iTipoDocDestino, objTRVAportePagtoCond.dPercentual, objTRVAportePagtoCond.iSeq)
        
    Else
        'Se já estiver liberado só deixa apontar para o documento de destino
        lErro = Comando_ExecutarPos(lComando2, "UPDATE TRVAportePagtoCond SET NumIntDocDestino= ? , TipoDocDestino= ? ", lComando1, _
                objTRVAportePagtoCond.lNumIntDocDestino, objTRVAportePagtoCond.iTipoDocDestino)
    
    End If
    If lErro <> AD_SQL_SUCESSO Then gError 190388

    TRVAportePagtoCond_Atualiza = SUCESSO

    Exit Function

Erro_TRVAportePagtoCond_Atualiza:

    TRVAportePagtoCond_Atualiza = gErr

    Select Case gErr

        Case 190385, 190386
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVAPORTEPAGTOCOND", gErr)
            
        Case 190387
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVAPORTEPAGTOCOND_NAO_CADASTRADO", gErr, objTRVAportePagtoCond.lNumIntDoc)

        Case 190388
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVAPORTEPAGTOCOND", gErr)
            
        Case 190563
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVAPORTEPAGTOCOND_STATUS_DIF_BLOQUEADO", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 190389)

    End Select


    Exit Function

End Function

Public Function TRVAportePagtoCond_Insere(ByVal lComando As Long, ByVal objTRVAportePagtoCond As ClassTRVAportePagtoCond, ByVal objAporte As ClassTRVAportes) As Long

Dim lErro As Long
Dim lNumIntDoc As Long

On Error GoTo Erro_TRVAportePagtoCond_Insere

    'Obter NumIntDoc
    lErro = CF("Config_ObterNumInt", "FATConfig", "NUM_INT_PROX_TRVAPORTEPAGTOCOND", lNumIntDoc)
    If lErro <> SUCESSO Then gError 190382

    objTRVAportePagtoCond.lNumIntDoc = lNumIntDoc
        
    lErro = Comando_Executar(lComando, "INSERT INTO TRVAportePagtoCond( NumIntDoc, NumIntDocAporte, Base, Status, " & _
            "DataPagto, NumIntDocDestino, FormaPagto, TipoDocDestino, Percentual, Valor, Seq) VALUES (?,?,?,?,?,?,?,?,?,?,?)", _
            objTRVAportePagtoCond.lNumIntDoc, objTRVAportePagtoCond.lNumIntDocAporte, objTRVAportePagtoCond.iBase, STATUS_TRV_OCR_BLOQUEADO, _
            objTRVAportePagtoCond.dtDataPagto, objTRVAportePagtoCond.lNumIntDocDestino, objTRVAportePagtoCond.iFormaPagto, objTRVAportePagtoCond.iTipoDocDestino, objTRVAportePagtoCond.dPercentual, objTRVAportePagtoCond.dValor, objTRVAportePagtoCond.iSeq)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 190383


    TRVAportePagtoCond_Insere = SUCESSO

    Exit Function

Erro_TRVAportePagtoCond_Insere:

    TRVAportePagtoCond_Insere = gErr

    Select Case gErr
    
        Case 190382

        Case 190383
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_TRVAPORTEPAGTOCOND", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 190384)

    End Select

    Exit Function

End Function

Public Function TRVAportePagtoCond_Exclui(ByVal lComando1 As Long, ByVal lComando2 As Long, ByVal objTRVAportePagtoCond As ClassTRVAportePagtoCond) As Long

Dim lErro As Long
Dim lNumIntDoc As Long
Dim iTipoDestino As Integer
Dim lNumIntDocDestino As Long

On Error GoTo Erro_TRVAportePagtoCond_Exclui

    'Le a tabelaTRVAportePagtoCond
    lErro = Comando_ExecutarPos(lComando1, "SELECT NumIntDoc, TipoDocDestino, NumIntDocDestino FROM TRVAportePagtoCond WHERE NumIntDoc = ? ", 0, lNumIntDoc, iTipoDestino, lNumIntDocDestino, objTRVAportePagtoCond.lNumIntDoc)
    If lErro <> AD_SQL_SUCESSO Then gError 190390

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(lComando1)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 190391

    'Se não existir => ERRO
    If lErro <> AD_SQL_SUCESSO Then gError 190392
    
    lErro = Comando_ExecutarPos(lComando2, "DELETE FROM TRVAportePagtoCond ", lComando1)
    If lErro <> AD_SQL_SUCESSO Then gError 190393
    
    lErro = Item_Exclui_Com_Destino(iTipoDestino, lNumIntDocDestino)
    If lErro <> SUCESSO Then gError 192063

    TRVAportePagtoCond_Exclui = SUCESSO

    Exit Function

Erro_TRVAportePagtoCond_Exclui:

    TRVAportePagtoCond_Exclui = gErr

    Select Case gErr

        Case 190390, 190391
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVAPORTEPAGTOCOND", gErr)
            
        Case 190392
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVAPORTEPAGTOCOND_NAO_CADASTRADO", gErr, objTRVAportePagtoCond.lNumIntDoc)

        Case 190393
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_TRVAPORTEPAGTOCOND", gErr)
            
        Case 192063

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 190394)

    End Select


    Exit Function

End Function

Public Function TRVAportePagtoDireto_Exclui(ByVal lComando1 As Long, ByVal lComando2 As Long, ByVal objTRVAportePagtoDireto As ClassTRVAportePagtoDireto) As Long

Dim lErro As Long
Dim lNumIntDoc As Long
Dim iTipoDestino As Integer
Dim lNumIntDocDestino As Long

On Error GoTo Erro_TRVAportePagtoDireto_Exclui

    'Le a tabelaTRVAportePagtoDireto
    lErro = Comando_ExecutarPos(lComando1, "SELECT NumIntDoc, TipoDocDestino, NumIntDocDestino FROM TRVAportePagtoDireto WHERE NumIntDoc= ? ", _
                0, lNumIntDoc, iTipoDestino, lNumIntDocDestino, objTRVAportePagtoDireto.lNumIntDoc)
    If lErro <> AD_SQL_SUCESSO Then gError 190403

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(lComando1)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 190404

    'Se não existir => ERRO
    If lErro <> AD_SQL_SUCESSO Then gError 190405

    lErro = Comando_ExecutarPos(lComando2, "DELETE FROM TRVAportePagtoDireto  ", lComando1)
    If lErro <> AD_SQL_SUCESSO Then gError 190406
    
    lErro = Item_Exclui_Com_Destino(iTipoDestino, lNumIntDocDestino)
    If lErro <> SUCESSO Then gError 192065

    TRVAportePagtoDireto_Exclui = SUCESSO

    Exit Function

Erro_TRVAportePagtoDireto_Exclui:

    TRVAportePagtoDireto_Exclui = gErr

    Select Case gErr

        Case 190403, 190404
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVAPORTEPAGTODIRETO", gErr)

        Case 190405
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVAPORTEPAGTODIRETO_NAO_CADASTRADO", gErr, objTRVAportePagtoDireto.lNumIntDoc)
        
        Case 190406
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_TRVAPORTEPAGTODIRETO", gErr)
            
        Case 192065

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 190407)

    End Select

    Exit Function

End Function

Public Function TRVAportePagtoDireto_Atualiza(ByVal lComando1 As Long, ByVal lComando2 As Long, ByVal objTRVAportePagtoDireto As ClassTRVAportePagtoDireto, Optional ByVal objAporte As ClassTRVAportes, Optional ByVal bAtualizaDestino As Boolean = False) As Long

Dim lErro As Long
Dim lNumIntDoc As Long
Dim lNumIntDocDestino As Long
Dim objDebitoRecCli As New ClassDebitoRecCli
Dim colInfoComissao As New colInfoComissao
Dim objContabil As ClassContabil
Dim lCodigoAuto As Long
Dim sFiltro As String
Dim iTipoDocDestino As Integer

On Error GoTo Erro_TRVAportePagtoDireto_Atualiza

    'Le a tabelaTRVAportePagtoDireto
    lErro = Comando_ExecutarPos(lComando1, "SELECT NumIntDoc, NumIntDocDestino, TipoDocDestino FROM TRVAportePagtoDireto WHERE NumIntDoc= ? ", _
                0, lNumIntDoc, lNumIntDocDestino, iTipoDocDestino, objTRVAportePagtoDireto.lNumIntDoc)
    If lErro <> AD_SQL_SUCESSO Then gError 190398

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(lComando1)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 190399

    'Se existir => UPDATE, senão => INSERT
    If lErro <> AD_SQL_SUCESSO Then gError 190400
    
    If objTRVAportePagtoDireto.iFormaPagto = FORMAPAGTO_TRV_OCR_CRED And lNumIntDocDestino = 0 Then
        'Gera o crédito e informa o número do numintdoc
          
        lErro = CF("Config_ObterAutomatico2", TRV_TIPO_DOC_DESTINO_DEBCLI_TABELA, "NumTitulo", lCodigoAuto, sFiltro)
        If lErro <> SUCESSO Then gError 190751
           
        objDebitoRecCli.iFilialEmpresa = giFilialEmpresa
        objDebitoRecCli.lCliente = objAporte.lCliente
        objDebitoRecCli.iFilial = objAporte.iFilialCliente
        objDebitoRecCli.sSiglaDocumento = "NCR" 'Nota de crédito
        objDebitoRecCli.lNumTitulo = lCodigoAuto
        objDebitoRecCli.dtDataEmissao = gdtDataAtual
        objDebitoRecCli.dValorTotal = objTRVAportePagtoDireto.dValor
        objDebitoRecCli.dValorProdutos = objTRVAportePagtoDireto.dValor
        
        lErro = CF("DebitoRecCli_Grava_EmTrans", objDebitoRecCli, colInfoComissao, objContabil)
        If lErro <> SUCESSO Then gError 190752
        
        lNumIntDocDestino = objDebitoRecCli.lNumIntDoc
        iTipoDocDestino = TRV_TIPO_DOC_DESTINO_DEBCLI

    End If

    If bAtualizaDestino Then
        lErro = Comando_ExecutarPos(lComando2, "UPDATE TRVAportePagtoDireto SET NumIntDocDestino= ?, TipoDocDestino= ? ", lComando1, _
                objTRVAportePagtoDireto.lNumIntDocDestino, objTRVAportePagtoDireto.iTipoDocDestino)
    Else
    
        objTRVAportePagtoDireto.lNumIntDocDestino = lNumIntDocDestino
        objTRVAportePagtoDireto.iTipoDocDestino = iTipoDocDestino

        lErro = Comando_ExecutarPos(lComando2, "UPDATE TRVAportePagtoDireto SET Valor= ? , Vencimento= ? , NumIntDocDestino= ? , FormaPagto= ? , " & _
                "TipoDocDestino= ?, Seq = ?  ", lComando1, _
                objTRVAportePagtoDireto.dValor, objTRVAportePagtoDireto.dtVencimento, objTRVAportePagtoDireto.lNumIntDocDestino, objTRVAportePagtoDireto.iFormaPagto, _
                objTRVAportePagtoDireto.iTipoDocDestino, objTRVAportePagtoDireto.iSeq)
    End If
    If lErro <> AD_SQL_SUCESSO Then gError 190401

    TRVAportePagtoDireto_Atualiza = SUCESSO

    Exit Function

Erro_TRVAportePagtoDireto_Atualiza:

    TRVAportePagtoDireto_Atualiza = gErr

    Select Case gErr

        Case 190398, 190399
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVAPORTEPAGTODIRETO", gErr)

        Case 190400
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVAPORTEPAGTODIRETO_NAO_CADASTRADO", gErr, objTRVAportePagtoDireto.lNumIntDoc)
        
        Case 190401
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVAPORTEPAGTODIRETO", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 190402)

    End Select

    Exit Function

End Function

Public Function TRVAportePagtoDireto_Insere(ByVal lComando As Long, ByVal objTRVAportePagtoDireto As ClassTRVAportePagtoDireto, ByVal objAporte As ClassTRVAportes) As Long

Dim lErro As Long
Dim lNumIntDoc As Long
Dim objDebitoRecCli As New ClassDebitoRecCli
Dim colInfoComissao As New colInfoComissao
Dim objContabil As ClassContabil
Dim lCodigoAuto As Long
Dim sFiltro As String

On Error GoTo Erro_TRVAportePagtoDireto_Insere

    'Obter NumIntDoc
    lErro = CF("Config_ObterNumInt", "FATConfig", "NUM_INT_PROX_TRVAPORTEPAGTODIRETO", lNumIntDoc)
    If lErro <> SUCESSO Then gError 190395

    objTRVAportePagtoDireto.lNumIntDoc = lNumIntDoc
    
    If objTRVAportePagtoDireto.iFormaPagto = FORMAPAGTO_TRV_OCR_FAT Then
        'Não precisa fazer nada => O Tratamento é dado quando chegar a nota
    Else
        'Gera o crédito e informa o número do numintdoc
          
        lErro = CF("Config_ObterAutomatico2", TRV_TIPO_DOC_DESTINO_DEBCLI_TABELA, "NumTitulo", lCodigoAuto, sFiltro)
        If lErro <> SUCESSO Then gError 190751
           
        objDebitoRecCli.iFilialEmpresa = giFilialEmpresa
        objDebitoRecCli.lCliente = objAporte.lCliente
        objDebitoRecCli.iFilial = objAporte.iFilialCliente
        objDebitoRecCli.sSiglaDocumento = "NCR" 'Nota de crédito
        objDebitoRecCli.lNumTitulo = lCodigoAuto
        objDebitoRecCli.dtDataEmissao = gdtDataAtual
        objDebitoRecCli.dValorTotal = objTRVAportePagtoDireto.dValor
        objDebitoRecCli.dValorProdutos = objTRVAportePagtoDireto.dValor
        
        lErro = CF("DebitoRecCli_Grava_EmTrans", objDebitoRecCli, colInfoComissao, objContabil)
        If lErro <> SUCESSO Then gError 190752
        
        objTRVAportePagtoDireto.lNumIntDocDestino = objDebitoRecCli.lNumIntDoc
        objTRVAportePagtoDireto.iTipoDocDestino = TRV_TIPO_DOC_DESTINO_DEBCLI
    
    End If

    lErro = Comando_Executar(lComando, "INSERT INTO TRVAportePagtoDireto( NumIntDoc, NumIntDocAporte, Valor, Vencimento, " & _
            "NumIntDocDestino, FormaPagto, TipoDocDestino, Seq) VALUES (?,?,?,?,?,?,?,?)", _
            objTRVAportePagtoDireto.lNumIntDoc, objTRVAportePagtoDireto.lNumIntDocAporte, objTRVAportePagtoDireto.dValor, objTRVAportePagtoDireto.dtVencimento, _
            objTRVAportePagtoDireto.lNumIntDocDestino, objTRVAportePagtoDireto.iFormaPagto, objTRVAportePagtoDireto.iTipoDocDestino, objTRVAportePagtoDireto.iSeq)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 190396

    TRVAportePagtoDireto_Insere = SUCESSO

    Exit Function

Erro_TRVAportePagtoDireto_Insere:

    TRVAportePagtoDireto_Insere = gErr

    Select Case gErr

        Case 190395, 190751, 190752

        Case 190396
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_TRVAPORTEPAGTODIRETO", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 190397)

    End Select


    Exit Function

End Function

Public Function TRVAportePagtoFat_Exclui(ByVal lComando1 As Long, ByVal lComando2 As Long, ByVal objTRVAportePagtoFat As ClassTRVAportePagtoFat) As Long

Dim lErro As Long
Dim lNumIntDoc As Long

On Error GoTo Erro_TRVAportePagtoFat_Exclui

    'Le a tabelaTRVAportePagtoFat
    lErro = Comando_ExecutarPos(lComando1, "SELECT NumIntDoc FROM TRVAportePagtoFat WHERE NumIntDoc= ? ", _
                0, lNumIntDoc, objTRVAportePagtoFat.lNumIntDoc)
    If lErro <> AD_SQL_SUCESSO Then gError 190416

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(lComando1)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 190417

    'Se não existir => ERRO
    If lErro <> AD_SQL_SUCESSO Then gError 190418

    lErro = Comando_ExecutarPos(lComando2, "DELETE FROM TRVAportePagtoFat ", lComando1)
    If lErro <> AD_SQL_SUCESSO Then gError 190419
    
    TRVAportePagtoFat_Exclui = SUCESSO

    Exit Function

Erro_TRVAportePagtoFat_Exclui:

    TRVAportePagtoFat_Exclui = gErr

    Select Case gErr

        Case 190416, 190417
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVAPORTEPAGTOFAT", gErr)

        Case 190418
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVAPORTEPAGTOFAT_NAO_CADASTRADO", gErr, objTRVAportePagtoFat.lNumIntDoc)
        
        Case 190419
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVAPORTEPAGTOFAT", gErr)
        
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 190420)

    End Select

    Exit Function

End Function

Public Function TRVAportePagtoFat_Atualiza(ByVal lComando1 As Long, ByVal lComando2 As Long, ByVal objTRVAportePagtoFat As ClassTRVAportePagtoFat, Optional ByVal objAporte As ClassTRVAportes) As Long

Dim lErro As Long
Dim lNumIntDoc As Long

On Error GoTo Erro_TRVAportePagtoFat_Atualiza

    'Le a tabelaTRVAportePagtoFat
    lErro = Comando_ExecutarPos(lComando1, "SELECT NumIntDoc FROM TRVAportePagtoFat WHERE NumIntDoc= ? ", _
                0, lNumIntDoc, objTRVAportePagtoFat.lNumIntDoc)
    If lErro <> AD_SQL_SUCESSO Then gError 190411

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(lComando1)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 190412

    'Se não existir => ERRO
    If lErro <> AD_SQL_SUCESSO Then gError 190413

    lErro = Comando_ExecutarPos(lComando2, "UPDATE TRVAportePagtoFat SET Valor= ? , ValidadeDe= ? , ValidadeAte= ? , Saldo= ? , " & _
            "Percentual= ?, Seq = ? ", lComando1, _
            objTRVAportePagtoFat.dValor, objTRVAportePagtoFat.dtValidadeDe, objTRVAportePagtoFat.dtValidadeAte, objTRVAportePagtoFat.dSaldo, _
            objTRVAportePagtoFat.dPercentual, objTRVAportePagtoFat.iSeq)
    If lErro <> AD_SQL_SUCESSO Then gError 190414
    
    TRVAportePagtoFat_Atualiza = SUCESSO

    Exit Function

Erro_TRVAportePagtoFat_Atualiza:

    TRVAportePagtoFat_Atualiza = gErr

    Select Case gErr

        Case 190411, 190412
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVAPORTEPAGTOFAT", gErr)

        Case 190413
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVAPORTEPAGTOFAT_NAO_CADASTRADO", gErr, objTRVAportePagtoFat.lNumIntDoc)
        
        Case 190414
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVAPORTEPAGTOFAT", gErr)
        
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 190415)

    End Select

    Exit Function

End Function

Public Function TRVAportePagtoFat_Insere(ByVal lComando As Long, ByVal objTRVAportePagtoFat As ClassTRVAportePagtoFat, ByVal objAporte As ClassTRVAportes) As Long

Dim lErro As Long
Dim lNumIntDoc As Long

On Error GoTo Erro_TRVAportePagtoFat_Insere

    'Obter NumIntDoc
    lErro = CF("Config_ObterNumInt", "FATConfig", "NUM_INT_PROX_TRVAPORTEPAGTOFAT", lNumIntDoc)
    If lErro <> SUCESSO Then gError 190408

    objTRVAportePagtoFat.lNumIntDoc = lNumIntDoc

    lErro = Comando_Executar(lComando, "INSERT INTO TRVAportePagtoFat( NumIntDoc, NumIntDocAporte, Valor, ValidadeDe, " & _
            "ValidadeAte, Saldo, Percentual, Seq) VALUES (?,?,?,?,?,?,?,?)", _
            objTRVAportePagtoFat.lNumIntDoc, objTRVAportePagtoFat.lNumIntDocAporte, objTRVAportePagtoFat.dValor, objTRVAportePagtoFat.dtValidadeDe, _
            objTRVAportePagtoFat.dtValidadeAte, objTRVAportePagtoFat.dSaldo, objTRVAportePagtoFat.dPercentual, objTRVAportePagtoFat.iSeq)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 190409

    TRVAportePagtoFat_Insere = SUCESSO

    Exit Function

Erro_TRVAportePagtoFat_Insere:

    TRVAportePagtoFat_Insere = gErr

    Select Case gErr

        Case 190408

        Case 190409
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_TRVAPORTEPAGTOFAT", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 190410)

    End Select

    Exit Function

End Function

'ROTINAS CRIADAS AUTOMATICAMENTE PELA TELA BROWSECRIA
'EXCLUSÃO
Public Function TRVAportes_Exclui(ByVal objTRVAportes As ClassTRVAportes) As Long

Dim lErro As Long
Dim lTransacao As Long

On Error GoTo Erro_TRVAportes_Exclui

    'Abertura de transação
    lTransacao = Transacao_Abrir()
    If lTransacao = 0 Then gError 190421

    lErro = CF("TRVAportes_Exclui_EmTrans", objTRVAportes)
    If lErro <> SUCESSO Then gError 190422

    'Confirma a transação
    lErro = Transacao_Commit()
    If lErro <> AD_SQL_SUCESSO Then gError 190423

    TRVAportes_Exclui = SUCESSO

    Exit Function

Erro_TRVAportes_Exclui:

    TRVAportes_Exclui = gErr

    Select Case gErr

        Case 190421
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_TRANSACAO", gErr)

        Case 190422

        Case 190423
            Call Rotina_Erro(vbOKOnly, "ERRO_COMMIT", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 190424)

    End Select

    'Desfaz Transação
    Call Transacao_Rollback

    Exit Function

End Function

Public Function TRVAportes_Exclui_EmTrans(ByVal objTRVAportes As ClassTRVAportes) As Long

Dim lErro As Long
Dim alComando(0 To 1) As Long
Dim iIndice As Integer
Dim lNumIntDoc As Long

On Error GoTo Erro_TRVAportes_Exclui_EmTrans

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 190425
    Next

    'Le a tabelaTRVAportes
    lErro = Comando_ExecutarPos(alComando(0), "SELECT NumIntDoc FROM TRVAportes WHERE Codigo= ? ", _
                0, lNumIntDoc, objTRVAportes.lCodigo)
    If lErro <> AD_SQL_SUCESSO Then gError 190426

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(0))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 190427

    'Se não existir => ERRO
    If lErro = AD_SQL_SEM_DADOS Then gError 190428
    
    objTRVAportes.lNumIntDoc = lNumIntDoc

    'Trava registro contra alterações/Leituras
    lErro = Comando_LockExclusive(alComando(0))
    If lErro <> SUCESSO Then gError 190429

    lErro = Comando_ExecutarPos(alComando(1), "DELETE FROM TRVAportes", alComando(0))
    If lErro <> AD_SQL_SUCESSO Then gError 190430
    
    lErro = CF("TRVAportePagtoCond_Exclui_Aporte", objTRVAportes)
    If lErro <> SUCESSO Then gError 190431

    lErro = CF("TRVAportePagtoFat_Exclui_Aporte", objTRVAportes)
    If lErro <> SUCESSO Then gError 190432

    lErro = CF("TRVAportePagtoDireto_Exclui_Aporte", objTRVAportes)
    If lErro <> SUCESSO Then gError 190433

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVAportes_Exclui_EmTrans = SUCESSO

    Exit Function

Erro_TRVAportes_Exclui_EmTrans:

    TRVAportes_Exclui_EmTrans = gErr

    Select Case gErr

        Case 190425
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 190426, 190427
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVAPORTES", gErr)

        Case 190428
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVAPORTES_NAO_CADASTRADO", gErr, objTRVAportes.lCodigo)

        Case 190429
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVAPORTES", gErr)

        Case 190430
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_TRVAPORTES", gErr)
            
        Case 190431 To 190433

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 190434)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Public Function TRVAportePagtoCond_Exclui_Aporte(ByVal objAporte As ClassTRVAportes) As Long

Dim lErro As Long
Dim alComando(0 To 1) As Long
Dim iIndice As Integer
Dim lNumIntDoc As Integer
Dim iTipoDestino As Integer
Dim lNumIntDocDestino As Long

On Error GoTo Erro_TRVAportePagtoCond_Exclui_Aporte

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 190435
    Next

    'Le a tabelaTRVAportePagtoCond
    lErro = Comando_ExecutarPos(alComando(0), "SELECT NumIntDoc, TipoDocDestino, NumIntDocDestino FROM TRVAportePagtoCond WHERE NumIntDocAporte = ? ", _
                0, lNumIntDoc, iTipoDestino, lNumIntDocDestino, objAporte.lNumIntDoc)
    If lErro <> AD_SQL_SUCESSO Then gError 190436

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(0))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 190437

    Do While lErro <> AD_SQL_SEM_DADOS

        'Trava registro contra alterações/Leituras
        lErro = Comando_LockExclusive(alComando(0))
        If lErro <> SUCESSO Then gError 190438
    
        lErro = Comando_ExecutarPos(alComando(1), "DELETE FROM TRVAportePagtoCond", alComando(0))
        If lErro <> AD_SQL_SUCESSO Then gError 190439
        
        lErro = Item_Exclui_Com_Destino(iTipoDestino, lNumIntDocDestino)
        If lErro <> SUCESSO Then gError 192064

        'Busca Proximo
        lErro = Comando_BuscarProximo(alComando(0))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 190440

    Loop

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVAportePagtoCond_Exclui_Aporte = SUCESSO

    Exit Function

Erro_TRVAportePagtoCond_Exclui_Aporte:

    TRVAportePagtoCond_Exclui_Aporte = gErr

    Select Case gErr

        Case 190435
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 190436, 190437, 190440
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVAPORTEPAGTOCOND", gErr)

        Case 190438
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVAPORTEPAGTOCOND", gErr)

        Case 190439
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_TRVAPORTEPAGTOCOND", gErr)
            
        Case 192064

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 190441)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Public Function TRVAportePagtoDireto_Exclui_Aporte(ByVal objAporte As ClassTRVAportes) As Long

Dim lErro As Long
Dim alComando(0 To 1) As Long
Dim iIndice As Integer
Dim lNumIntDoc As Integer
Dim iTipoDestino As Integer
Dim lNumIntDocDestino As Long

On Error GoTo Erro_TRVAportePagtoDireto_Exclui_Aporte

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 190442
    Next

    'Le a tabelaTRVAportePagtoDireto
    lErro = Comando_ExecutarPos(alComando(0), "SELECT NumIntDoc, TipoDocDestino, NumIntDocDestino FROM TRVAportePagtoDireto WHERE NumIntDocAporte = ? ", _
                0, lNumIntDoc, iTipoDestino, lNumIntDocDestino, objAporte.lNumIntDoc)
    If lErro <> AD_SQL_SUCESSO Then gError 190443

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(0))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 190444

    Do While lErro <> AD_SQL_SEM_DADOS

        'Trava registro contra alterações/Leituras
        lErro = Comando_LockExclusive(alComando(0))
        If lErro <> SUCESSO Then gError 190445
    
        lErro = Comando_ExecutarPos(alComando(1), "DELETE FROM TRVAportePagtoDireto", alComando(0))
        If lErro <> AD_SQL_SUCESSO Then gError 190446
        
        lErro = Item_Exclui_Com_Destino(iTipoDestino, lNumIntDocDestino)
        If lErro <> SUCESSO Then gError 192066

        'Busca Proximo
        lErro = Comando_BuscarProximo(alComando(0))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 190447

    Loop

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVAportePagtoDireto_Exclui_Aporte = SUCESSO

    Exit Function

Erro_TRVAportePagtoDireto_Exclui_Aporte:

    TRVAportePagtoDireto_Exclui_Aporte = gErr

    Select Case gErr

        Case 190442
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 190443, 190444, 190447
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVAPORTEPAGTODIRETO", gErr)

        Case 190445
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVAPORTEPAGTODIRETO", gErr)

        Case 190446
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_TRVAPORTEPAGTODIRETO", gErr)
            
        Case 192066

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 190448)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Public Function TRVAportePagtoFat_Exclui_Aporte(ByVal objAporte As ClassTRVAportes) As Long

Dim lErro As Long
Dim alComando(0 To 1) As Long
Dim iIndice As Integer
Dim lNumIntDoc As Integer
Dim dValor As Double
Dim dSaldo As Double

On Error GoTo Erro_TRVAportePagtoFat_Exclui_Aporte

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 190449
    Next

    'Le a tabelaTRVAportePagtoFat
    lErro = Comando_ExecutarPos(alComando(0), "SELECT NumIntDoc, Valor, Saldo FROM TRVAportePagtoFat WHERE NumIntDocAporte = ? ", _
                0, lNumIntDoc, objAporte.lNumIntDoc)
    If lErro <> AD_SQL_SUCESSO Then gError 190450

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(0))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 190451

    Do While lErro <> AD_SQL_SEM_DADOS

        'Trava registro contra alterações/Leituras
        lErro = Comando_LockExclusive(alComando(0))
        If lErro <> SUCESSO Then gError 190452
    
        If Abs(dValor - dSaldo) > DELTA_VALORMONETARIO Then gError 190692
    
        lErro = Comando_ExecutarPos(alComando(1), "DELETE FROM TRVAportePagtoFat", alComando(0))
        If lErro <> AD_SQL_SUCESSO Then gError 190453

        'Busca Proximo
        lErro = Comando_BuscarProximo(alComando(0))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 190454

    Loop

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVAportePagtoFat_Exclui_Aporte = SUCESSO

    Exit Function

Erro_TRVAportePagtoFat_Exclui_Aporte:

    TRVAportePagtoFat_Exclui_Aporte = gErr

    Select Case gErr

        Case 190449
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 190450, 190451, 190454
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVAPORTEPAGTOFAT", gErr)

        Case 190452
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVAPORTEPAGTOFAT", gErr)

        Case 190453
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_TRVAPORTEPAGTOFAT", gErr)

        Case 190692
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_PAGTO_SALDO_DIF_VALOR", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 190455)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Public Function RelOpAcomInadTRV_Prepara(ByVal objRelAcomInadTRV As ClassRelAcomInadTRV, lNumIntRel As Long) As Long
 
Dim lErro As Long
Dim lTransacao As Long
Dim alComando(0 To 5) As Long
Dim iIndice As Integer
Dim iIdxData As Integer
Dim iIdxFilial As Integer
Dim dValorVencimentos As Double
Dim dValorAbertoData As Double
Dim dValorBaixadoData As Double
Dim dValorAtrasadoData As Double
Dim dValorAux As Double
Dim dValorBaixaAux As Double
Dim dValorTBaixaAux As Double
Dim dValorTAux As Double
Dim lNumIntParcela As Long
 
On Error GoTo Erro_RelOpAcomInadTRV_Prepara
 
    'Abertura de transação
    lTransacao = Transacao_Abrir()
    If lTransacao = 0 Then gError 190533
 
    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 190534
    Next
    
    'Obter NumIntRel
    lErro = CF("Config_ObterNumInt", "FATConfig", "NUM_INT_REL_INADTRV", lNumIntRel)
    If lErro <> SUCESSO Then gError 190535
    
    For iIdxFilial = 1 To objRelAcomInadTRV.iNumFiliais
    
        If objRelAcomInadTRV.aiFiliais(iIdxFilial) <> 0 Then
    
            lErro = Comando_Executar(alComando(0), "SELECT SUM(P.Valor)FROM ParcelasRecTodas AS P, TitulosRecTodos as T WHERE P.NumIntTitulo = T.NumIntDoc AND P.Status <> ? AND T.FilialEmpresa = ? AND (T.SiglaDocumento = ? OR ? = ?) AND (P.DataVencimentoReal >= ? OR ? = ?) AND (P.DataVencimentoReal <= ? OR ? = ?) ", _
            dValorVencimentos, STATUS_EXCLUIDO, objRelAcomInadTRV.aiFiliais(iIdxFilial), objRelAcomInadTRV.sTipoDoc, objRelAcomInadTRV.sTipoDoc, "", objRelAcomInadTRV.dtDataVencDe, objRelAcomInadTRV.dtDataVencDe, DATA_NULA, objRelAcomInadTRV.dtDataVencAte, objRelAcomInadTRV.dtDataVencAte, DATA_NULA)
            If lErro <> AD_SQL_SUCESSO Then gError 190536
        
            'Busca Primeiro
            lErro = Comando_BuscarPrimeiro(alComando(0))
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 190537
        
            lErro = Comando_Executar(alComando(1), "INSERT INTO RelInadTRVCab (NumIntRel, FilialEmpresa, ValorVencimentos,DataVencDe,DataVencAte,TipoDoc) VALUES (?,?,?,?,?,?) ", lNumIntRel, objRelAcomInadTRV.aiFiliais(iIdxFilial), dValorVencimentos, objRelAcomInadTRV.dtDataVencDe, objRelAcomInadTRV.dtDataVencAte, objRelAcomInadTRV.sTipoDoc)
            If lErro <> AD_SQL_SUCESSO Then gError 190538
        
            For iIdxData = 1 To objRelAcomInadTRV.iNumDatas
            
                dValorTAux = 0
                dValorTBaixaAux = 0
            
                lErro = Comando_Executar(alComando(2), "SELECT P.NumIntDoc, P.Valor FROM ParcelasRecTodas AS P, TitulosRecTodos as T WHERE P.NumIntTitulo = T.NumIntDoc AND P.Status <> ? AND T.FilialEmpresa = ? AND (T.SiglaDocumento = ? OR ? = ?) AND (P.DataVencimentoReal >= ? OR ? = ?) AND (P.DataVencimentoReal <= ? OR ? = ?) AND T.DataEmissao < ? AND P.DataVencimentoReal < ? ", _
                lNumIntParcela, dValorAux, STATUS_EXCLUIDO, objRelAcomInadTRV.aiFiliais(iIdxFilial), objRelAcomInadTRV.sTipoDoc, objRelAcomInadTRV.sTipoDoc, "", objRelAcomInadTRV.dtDataVencDe, objRelAcomInadTRV.dtDataVencDe, DATA_NULA, objRelAcomInadTRV.dtDataVencAte, objRelAcomInadTRV.dtDataVencAte, DATA_NULA, objRelAcomInadTRV.adtDatasRef(iIdxData), objRelAcomInadTRV.adtDatasRef(iIdxData))
                If lErro <> AD_SQL_SUCESSO Then gError 190539

                'Busca Primeiro
                lErro = Comando_BuscarPrimeiro(alComando(2))
                If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 190540
                
                Do While lErro <> AD_SQL_SEM_DADOS
                
                    'Total de títulos que estavam vencidos na época
                    dValorTAux = dValorTAux + dValorAux

                    'Le as baixas para tirar os que já estavam pagos (na época)
                    lErro = Comando_Executar(alComando(3), "SELECT SUM(BP.ValorBaixado)FROM BaixasParcRec AS BP, BaixasRec AS B WHERE B.NumIntBaixa = BP.NumIntBaixa AND BP.Status <> ? AND BP.NumIntParcela = ? AND B.Data < ? ", dValorBaixaAux, STATUS_EXCLUIDO, lNumIntParcela, objRelAcomInadTRV.adtDatasRef(iIdxData))
                    If lErro <> AD_SQL_SUCESSO Then gError 190541
    
                    'Busca Primeiro
                    lErro = Comando_BuscarPrimeiro(alComando(3))
                    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 190542
                    
                    dValorTBaixaAux = dValorTBaixaAux + dValorBaixaAux
                    
                    'Busca Próximo
                    lErro = Comando_BuscarProximo(alComando(2))
                    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 190540
                    
                Loop
                
                dValorAtrasadoData = dValorTAux - dValorTBaixaAux
                
                lErro = Comando_Executar(alComando(4), "SELECT SUM(BP.ValorBaixado)FROM ParcelasRecTodas AS P, TitulosRecTodos as T , BaixasRec as B, BaixasParcRec as BP WHERE P.NumIntTitulo = T.NumIntDoc AND BP.NumIntParcela = P.NumIntDoc AND B.NumIntBaixa = BP.NUmIntBaixa AND P.Status <> ? AND Bp.Status <> ? AND T.FilialEmpresa = ? AND (T.SiglaDocumento = ? OR ? = ?) AND (P.DataVencimentoReal >= ? OR ? = ?) AND (P.DataVencimentoReal <= ? OR ? = ?) AND T.DataEmissao < ? AND B.Data < ? ", _
                dValorBaixadoData, STATUS_EXCLUIDO, STATUS_EXCLUIDO, objRelAcomInadTRV.aiFiliais(iIdxFilial), objRelAcomInadTRV.sTipoDoc, objRelAcomInadTRV.sTipoDoc, "", objRelAcomInadTRV.dtDataVencDe, objRelAcomInadTRV.dtDataVencDe, DATA_NULA, objRelAcomInadTRV.dtDataVencAte, objRelAcomInadTRV.dtDataVencAte, DATA_NULA, objRelAcomInadTRV.adtDatasRef(iIdxData), objRelAcomInadTRV.adtDatasRef(iIdxData))
                If lErro <> AD_SQL_SUCESSO Then gError 190543
                           
                'Busca Primeiro
                lErro = Comando_BuscarPrimeiro(alComando(4))
                If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 190544

                dValorAbertoData = dValorVencimentos - dValorBaixadoData

                lErro = Comando_Executar(alComando(5), "INSERT INTO RelInadTRVDet (NumIntRel, FilialEmpresa, DataReferencia, ValorAbertoData, ValorBaixadoData, ValorAtrasadoData) VALUES (?,?,?,?,?,?) ", lNumIntRel, objRelAcomInadTRV.aiFiliais(iIdxFilial), objRelAcomInadTRV.adtDatasRef(iIdxData), dValorAbertoData, dValorBaixadoData, dValorAtrasadoData)
                If lErro <> AD_SQL_SUCESSO Then gError 190545
            
            Next
        
        End If
    
    Next

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next
    
    'Confirma a transação
    lErro = Transacao_Commit()
    If lErro <> AD_SQL_SUCESSO Then gError 190546
 
    RelOpAcomInadTRV_Prepara = SUCESSO
 
    Exit Function
 
Erro_RelOpAcomInadTRV_Prepara:
 
    RelOpAcomInadTRV_Prepara = gErr
 
    Select Case gErr
 
        Case 190533
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_TRANSACAO", gErr)
 
        Case 190534
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)
 
        Case 190535
        
        Case 190536, 190537, 190539 To 190544
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_PARCELASREC", gErr)
            
        Case 190538
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_RELINDCAB", gErr)
 
        Case 190545
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_RELINDDET", gErr)
 
        Case 190546
            Call Rotina_Erro(vbOKOnly, "ERRO_COMMIT", gErr)
 
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 190547)
 
    End Select
    
    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next
    
    Call Transacao_Rollback
 
    Exit Function
 
End Function

Public Function TRVAportes_Libera(ByVal colAportePagtos As Collection) As Long

Dim lErro As Long
Dim lTransacao As Long
Dim objTRVAportePagtos As ClassTRVAportePagtoCond
Dim alComando(0 To 4) As Long
Dim iIndice As Integer

On Error GoTo Erro_TRVAportes_Libera

    'Abertura de transação
    lTransacao = Transacao_Abrir()
    If lTransacao = 0 Then gError 190746
    
    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 190747
    Next
    
    For Each objTRVAportePagtos In colAportePagtos

        lErro = TRVAportes_Libera_EmTrans(alComando, objTRVAportePagtos)
        If lErro <> SUCESSO Then gError 190748
        
    Next
    
    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    'Confirma a transação
    lErro = Transacao_Commit()
    If lErro <> AD_SQL_SUCESSO Then gError 190749

    TRVAportes_Libera = SUCESSO

    Exit Function

Erro_TRVAportes_Libera:

    TRVAportes_Libera = gErr

    Select Case gErr

        Case 190746
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_TRANSACAO", gErr)
        
        Case 190747
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 190748

        Case 190749
            Call Rotina_Erro(vbOKOnly, "ERRO_COMMIT", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 190750)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next
    
    'Desfaz Transação
    Call Transacao_Rollback

    Exit Function

End Function

Public Function TRVAportes_Libera_EmTrans(alComando() As Long, ByVal objTRVAportePagto As ClassTRVAportePagtoCond) As Long

Dim lErro As Long
Dim lNumIntDoc As Long
Dim objDebitoRecCli As New ClassDebitoRecCli
Dim colInfoComissao As New colInfoComissao
Dim objContabil As ClassContabil
Dim objAporte As New ClassTRVAportes
Dim lCodigoAuto As Long
Dim sFiltro As String
Dim objTRVAportePagtoBD As New ClassTRVAportePagtoCond

On Error GoTo Erro_TRVAportes_Libera_EmTrans

    objTRVAportePagto.iStatus = STATUS_TRV_OCR_LIBERADO

    objAporte.lNumIntDoc = objTRVAportePagto.lNumIntDocAporte
    
    lErro = CF("TRVAportes_Le", objAporte)
    If lErro <> SUCESSO And lErro <> ERRO_LEITURA_SEM_DADOS Then gError 190753

    If objTRVAportePagto.iFormaPagto = FORMAPAGTO_TRV_OCR_FAT Then
        'Não precisa fazer nada => O Tratamento é dado quando chegar a nota
    Else
        'Gera o crédito e informa o número do numintdoc do débito
          
        lErro = CF("Config_ObterAutomatico2", TRV_TIPO_DOC_DESTINO_DEBCLI_TABELA, "NumTitulo", lCodigoAuto, sFiltro)
        If lErro <> SUCESSO Then gError 190754
           
        objDebitoRecCli.iFilialEmpresa = giFilialEmpresa
        objDebitoRecCli.lCliente = objAporte.lCliente
        objDebitoRecCli.iFilial = objAporte.iFilialCliente
        objDebitoRecCli.sSiglaDocumento = "NCR" 'Nota de crédito
        objDebitoRecCli.lNumTitulo = lCodigoAuto
        objDebitoRecCli.dtDataEmissao = gdtDataAtual
        objDebitoRecCli.dValorTotal = objTRVAportePagto.dValor
        objDebitoRecCli.dValorProdutos = objTRVAportePagto.dValor
        
        lErro = CF("DebitoRecCli_Grava_EmTrans", objDebitoRecCli, colInfoComissao, objContabil)
        If lErro <> SUCESSO Then gError 190755
        
        objTRVAportePagto.lNumIntDocDestino = objDebitoRecCli.lNumIntDoc
        objTRVAportePagto.iTipoDocDestino = TRV_TIPO_DOC_DESTINO_DEBCLI
    
    End If
    
    objTRVAportePagtoBD.lNumIntDoc = objTRVAportePagto.lNumIntDoc
    
    lErro = CF("TRVAportePagtoCond_Le_NumIntDoc", alComando(0), objTRVAportePagtoBD, True)
    If lErro <> SUCESSO And lErro <> ERRO_LEITURA_SEM_DADOS Then gError 190756

    'Se não existir => erro
    If lErro <> SUCESSO Then gError 190318

    'Altera o Status da Aporte e a forma de pagamento
    lErro = Comando_ExecutarPos(alComando(1), "UPDATE TRVAportePagtoCond SET Status= ? , FormaPagto= ?, NumIntDocDestino = ?, DataLiberacao = ? , Usuario = ?, TipoDocDestino = ?, Valor = ? ", alComando(0), objTRVAportePagto.iStatus, objTRVAportePagto.iFormaPagto, objTRVAportePagto.lNumIntDocDestino, Date, gsUsuario, objTRVAportePagto.iTipoDocDestino, objTRVAportePagto.dValor)
    If lErro <> AD_SQL_SUCESSO Then gError 190759

    TRVAportes_Libera_EmTrans = SUCESSO

    Exit Function

Erro_TRVAportes_Libera_EmTrans:

    TRVAportes_Libera_EmTrans = gErr

    Select Case gErr
    
        Case 190753 To 190756
         
        Case 190758
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVAPORTEPAGTOCOND_NAO_CADASTRADO", gErr, objTRVAportePagto.lNumIntDoc)

        Case 190759
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVAPORTEPAGTOCOND", gErr)
        
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 190760)

    End Select

    Exit Function

End Function

Public Function TRVVouchers_Grava(ByVal objTRVVouchers As ClassTRVVouchers, Optional ByVal iExtraiInfoSigav As Integer = 0, Optional ByVal bExtraiuInfoSigavNovo As Boolean = False, Optional ByVal iTipoGravacao As Integer = TRV_TIPO_GRAVACAO_VOU_IMPORTACAO, Optional ByVal bGravaVend As Boolean = True, Optional ByVal lConexaoTVA_P As Long = 0, Optional ByVal bIgnoraVouExp As Boolean = False) As Long

Dim lErro As Long
Dim alComando(0 To 15) As Long
Dim alComandoX(1 To 4) As Long 'Tem que ler algumas informações da TVA, mesmo estando na TVI
Dim iIndice As Integer
Dim lNumFat As Long
Dim dValor As Double
Dim iCartao As Integer
Dim objVoucherInfo As New ClassTRVVoucherInfo
Dim dValorBruto As Double
Dim dPercAg As Double
Dim iStatus As Integer
Dim sDestino As String
Dim idiasantc As Integer
Dim sProduto As String
Dim lEmissor As Long
Dim lCorrentista As Long
Dim lRepresentante As Long
Dim lClienteComissao As Long
Dim dComissaoRep As Double
Dim dComissaoCorr As Double
Dim dComissaoAg As Double
Dim dComissaoEmissor As Double
Dim lClienteVou As Long
Dim sProdutoFormatado As String
Dim iProdutoPreenchido As Integer
Dim objVouExp As New ClassTRVVouExp
Dim iPromotor As Integer
Dim lEmissorAux As Long
Dim iCartaoAux As Integer
Dim bIgnoraComissao As Boolean
Dim bTrocaInf As Boolean
Dim sDSN As String
Dim iLenDSN As Integer
Dim sParamOut As String
Dim iLenParamOut As Integer
Dim lConexaoTVA As Long
Dim objEmpresa As New ClassDicEmpresa
Dim objVouBD As New ClassTRVVouchers
Dim dBrutoReal As Double
Dim dCMAReal As Double
Dim dCMCReal As Double
Dim dCMCCReal As Double
Dim dCMRReal As Double
Dim dCMEReal As Double
Dim objVouInfo As ClassTRVVoucherInfoN
Dim bTesteExisteAltComis As Boolean
Dim dValorBaseComis As Double
Dim dValorAux As Double
Dim iForcaCTB As Integer
Dim lNumBoleto As Long, iTipoDocDestino As Integer, lNumIntDocDestino As Long, iTrataBoleto As Integer

On Error GoTo Erro_TRVVouchers_Grava

    If lConexaoTVA_P = 0 And iTipoGravacao <> TRV_TIPO_GRAVACAO_ACERTO_VALOR_LIQ Then

        objEmpresa.lCodigo = 1 'TVA'
    
        lErro = Empresa_Le(objEmpresa)
        If lErro <> SUCESSO Then gError 189756
    
        sDSN = objEmpresa.sStringConexao
        iLenDSN = Len(sDSN)
        sParamOut = String(1024, 0)
        iLenParamOut = 1024
    
        lConexaoTVA = Conexao_AbrirExt(AD_SQL_DRIVER_ODBC, sDSN, iLenDSN, sParamOut, iLenParamOut)
        If lConexaoTVA = 0 Then gError 197890
    Else
        lConexaoTVA = lConexaoTVA_P
    End If

    If iTipoGravacao <> TRV_TIPO_GRAVACAO_ACERTO_VALOR_LIQ Then
        For iIndice = LBound(alComandoX) To UBound(alComandoX)
            alComandoX(iIndice) = Comando_AbrirExt(lConexaoTVA)
            If alComandoX(iIndice) = 0 Then gError 190857
        Next
    End If

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 190857
    Next
            
    lErro = CF("Produto_Formata", objTRVVouchers.sProduto, sProdutoFormatado, iProdutoPreenchido)
    If lErro <> SUCESSO Then gError 196314
    
    objTRVVouchers.sProduto = sProdutoFormatado
    
    sDestino = String(STRING_TRV_VOU_DESTINO, 0)
    sProduto = String(STRING_PRODUTO, 0)
    
    'Le a tabelaTRVVouchers
    lErro = Comando_ExecutarPos(alComando(0), "SELECT NumFatCoinfo, Valor, ValorBruto, Cartao, ComissaoAg, Status, Destino, DiasAntc, Produto, Emissor, Correntista, Representante,ClienteVou, ClienteComissao,ComissaoRep,ComissaoCorr,ComissaoAg,ComissaoEmissor, ValorBaseComis, NumBoleto, TipoDocDestino,NumIntDocDestino, TrataBoleto FROM TRVVouchers WHERE TipVou= ? AND TipoDoc = ? AND NumVou = ? AND Serie = ?", 0, _
    lNumFat, dValor, dValorBruto, iCartao, dPercAg, iStatus, sDestino, idiasantc, sProduto, lEmissor, lCorrentista, lRepresentante, lClienteVou, lClienteComissao, dComissaoRep, dComissaoCorr, dComissaoAg, dComissaoEmissor, dValorBaseComis, lNumBoleto, iTipoDocDestino, lNumIntDocDestino, iTrataBoleto, objTRVVouchers.sTipVou, objTRVVouchers.sTipoDoc, objTRVVouchers.lNumVou, objTRVVouchers.sSerie)
    If lErro <> AD_SQL_SUCESSO Then gError 190858

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(0))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 190859
    
    If lClienteComissao = 0 Then lClienteComissao = lClienteVou

    'Se existir => UPDATE, senão => INSERT
    If lErro = AD_SQL_SUCESSO Then

        'Trava registro contra alterações/Leituras
        lErro = Comando_LockExclusive(alComando(0))
        If lErro <> SUCESSO Then gError 190860
        
        'Se já foi faturado tem que ignorar a alteração
        'Se não foi faturado e está vindo via importação grava completo
        If (lNumFat = 0 Or (lNumBoleto <> 0 And objTRVVouchers.lNumBoleto <> lNumBoleto)) And iTipoGravacao = TRV_TIPO_GRAVACAO_VOU_IMPORTACAO Then 'Importação de um voucher já faturado são desconsideradas
        
            'Só extrai as informações do Sigav novamente se alterou o valor ou passou a ser título
            'de cartão ou a integração é com a Kogut
            If iExtraiInfoSigav = MARCADO Then
                If ((iSistemaIntegrado = SISTEMA_INTEGRADO_SIGAV) And (Abs(dValor - objTRVVouchers.dValor) < DELTA_VALORMONETARIO And iCartao = objTRVVouchers.iCartao And idiasantc <> objTRVVouchers.idiasantc)) Then
                    iExtraiInfoSigav = DESMARCADO
                End If
            End If
            
            'Se está reativando exclui o InfoSigav para poder relançar a comissão
            If iStatus = STATUS_TRV_VOU_CANCELADO And objTRVVouchers.sTipoDoc = TRV_TIPODOC_VOU_TEXTO Then
                lErro = Comando_Executar(alComando(12), "DELETE TRVVoucherInfoSigav WHERE Tipo = ? and Serie = ? AND NumVou = ?", objTRVVouchers.sTipVou, objTRVVouchers.sSerie, objTRVVouchers.lNumVou)
                If lErro <> AD_SQL_SUCESSO Then gError 190860
            
                lErro = Comando_Executar(alComando(15), "DELETE TRVVouVendedores WHERE TipVou = ? and Serie = ? AND NumVou = ?", objTRVVouchers.sTipVou, objTRVVouchers.sSerie, objTRVVouchers.lNumVou)
                If lErro <> AD_SQL_SUCESSO Then gError 190860
            End If
            
            If lNumFat <> 0 Then
                'Se entrou aqui e porque está faturado e foi gerado um novo boleto por fora mudando o número, logo tem que excluir o anterior para poder gerar o novo
                lErro = TRVVou_Trata_Boletos_Exclusao(iTipoDocDestino, lNumIntDocDestino, lNumFat, "Bol. " & CStr(lNumFat) & " reg. " & CStr(objTRVVouchers.lNumBoleto) & " inf. Vou:" & objTRVVouchers.sTipVou & objTRVVouchers.sSerie & CStr(objTRVVouchers.lNumVou))
                If lErro <> SUCESSO Then gError 200399
                
                objTRVVouchers.iTrataBoleto = MARCADO
            End If
            If iTrataBoleto = MARCADO Then objTRVVouchers.iTrataBoleto = MARCADO 'Para manter a marcação de vouchers que tiveram o boleto excluído anteriormente
            
            If iSistemaIntegrado = SISTEMA_INTEGRADO_SIGAV Then
                lErro = Comando_ExecutarPos(alComando(1), "UPDATE TRVVouchers SET NumIntArq= ? , NumRegArqTexto= ? ,Cliente = ?, Recnsica = ?, Valor= ? , Data= ? , " & _
                        "CondPagto= ? , TipVou= ? , CodGrupo= ? , NumFatCoinfo= ? , " & _
                        "Cartao= ?, Pax = ?, Moeda = ?, Controle = ?, CiaCart = ?,NumCCred = ?,NumAuto = ?,QuantParc = ?,DiasAntc = ?,Kit = ?, ExtraiInfoSigav = ? ,  TarifaUNNormal = ?, Status = ?, DataCanc = ?, HoraCanc = ?, UsuarioCanc = ?, TrataBoleto = ?, NumBoleto = ?, ValorBoleto =?, DataVencBoleto = ? ", alComando(0), _
                        objTRVVouchers.lNumIntArq, objTRVVouchers.lNumRegArqTexto, objTRVVouchers.lCliente, objTRVVouchers.lrecnsica, objTRVVouchers.dValor, objTRVVouchers.dtData, _
                        objTRVVouchers.iCondPagto, objTRVVouchers.sTipVou, objTRVVouchers.sCodGrupo, objTRVVouchers.lNumFatCoinfo, _
                        objTRVVouchers.iCartao, objTRVVouchers.iPax, objTRVVouchers.sMoeda, objTRVVouchers.sControle, objTRVVouchers.sCiaCart, objTRVVouchers.sNumCCred, objTRVVouchers.sNumAuto, objTRVVouchers.iQuantParc, objTRVVouchers.idiasantc, objTRVVouchers.iKit, iExtraiInfoSigav, objTRVVouchers.dTarifaUNNormal, STATUS_TRV_VOU_ABERTO, DATA_NULA, 0, "", objTRVVouchers.iTrataBoleto, objTRVVouchers.lNumBoleto, objTRVVouchers.dValorBoleto, objTRVVouchers.dtDataVencBoleto)
            Else 'SisWeb -> Atual
                lErro = Comando_ExecutarPos(alComando(1), "UPDATE TRVVouchers SET NumIntArq= ? , NumRegArqTexto= ? ,Cliente = ?, Recnsica = ?, Data= ? , " & _
                        "CondPagto= ? , TipVou= ? , CodGrupo= ? , NumFatCoinfo= ? , " & _
                        "Cartao= ?, Pax = ?, Moeda = ?, Controle = ?, CiaCart = ?,NumCCred = ?,NumAuto = ?,QuantParc = ?,DiasAntc = ?,Kit = ?, ExtraiInfoSigav = ? , TarifaUNNormal = ?, Sistema = ? , Status = ?, DataCanc = ?, HoraCanc = ?, UsuarioCanc = ?, TrataBoleto = ?, NumBoleto = ?, ValorBoleto =?, DataVencBoleto = ?", alComando(0), _
                        objTRVVouchers.lNumIntArq, objTRVVouchers.lNumRegArqTexto, objTRVVouchers.lCliente, objTRVVouchers.lrecnsica, objTRVVouchers.dtData, _
                        objTRVVouchers.iCondPagto, objTRVVouchers.sTipVou, objTRVVouchers.sCodGrupo, objTRVVouchers.lNumFatCoinfo, _
                        objTRVVouchers.iCartao, objTRVVouchers.iPax, objTRVVouchers.sMoeda, objTRVVouchers.sControle, objTRVVouchers.sCiaCart, objTRVVouchers.sNumCCred, objTRVVouchers.sNumAuto, objTRVVouchers.iQuantParc, objTRVVouchers.idiasantc, objTRVVouchers.iKit, iExtraiInfoSigav, objTRVVouchers.dTarifaUNNormal, iSistemaIntegrado, STATUS_TRV_VOU_ABERTO, DATA_NULA, 0, "", objTRVVouchers.iTrataBoleto, objTRVVouchers.lNumBoleto, objTRVVouchers.dValorBoleto, objTRVVouchers.dtDataVencBoleto)
            End If
                    
        ElseIf iTipoGravacao = TRV_TIPO_GRAVACAO_VOU_EXTRACAO Then
        
            If bExtraiuInfoSigavNovo Or dValorBruto = 0 Then
                
                If bExtraiuInfoSigavNovo Then
                    lErro = TRVVouVendedores_Grava(objTRVVouchers, alComandoX(1), alComandoX(2), alComandoX(3), alComando(10), alComandoX(4))
                    If lErro <> SUCESSO Then gError 200399
                End If
                
                If lNumBoleto <> 0 And iTrataBoleto = MARCADO Then
                    objTRVVouchers.iTrataBoleto = MARCADO
                Else
                    objTRVVouchers.iTrataBoleto = DESMARCADO
                End If
            
                If iSistemaIntegrado = SISTEMA_INTEGRADO_SIGAV Then
                    lErro = Comando_ExecutarPos(alComando(1), "UPDATE TRVVouchers SET Titular = ?, Cambio = ?, ValorCambio = ?, ExtraiInfoSigav = ?, PassageiroNome = ?, PassageiroSobreNome = ?, Emissor = ?, ClienteVou = ?, CliPassageiro = ?, ValorBruto = ?, Destino = ?, TitularCPF = ?, TarifaUnitaria = ?, Vigencia = ?, Promotor = ?, Moeda = ?, Produto = ?, ValidadeCC = ?, TrataBoleto = ? ", alComando(0), _
                            objTRVVouchers.sTitular, objTRVVouchers.dCambio, objTRVVouchers.dValorCambio, iExtraiInfoSigav, objTRVVouchers.sPassageiroNome, objTRVVouchers.sPassageiroSobreNome, objTRVVouchers.lEmissor, objTRVVouchers.lClienteVou, objTRVVouchers.lCliPassageiro, objTRVVouchers.dValorBruto, objTRVVouchers.sDestino, objTRVVouchers.sTitularCPF, objTRVVouchers.dTarifaUnitaria, objTRVVouchers.iVigencia, objTRVVouchers.lPromotor, objTRVVouchers.sMoeda, objTRVVouchers.sProduto, objTRVVouchers.sValidadeCC, objTRVVouchers.iTrataBoleto)
                Else
                    lErro = Comando_ExecutarPos(alComando(1), "UPDATE TRVVouchers SET Titular = ?, Cambio = ?, ValorCambio = ?, ExtraiInfoSigav = ?, PassageiroNome = ?, PassageiroSobreNome = ?, Emissor = ?, ClienteVou = ?, CliPassageiro = ?, ValorBruto = ?, Destino = ?, TitularCPF = ?, TarifaUnitaria = ?, Vigencia = ?, Promotor = ?, Moeda = ?, Valor = ?, ValorComissao = ?, Produto = ?, ValorBaseComis = ?, ValidadeCC = ? , TrataBoleto = ?", alComando(0), _
                            objTRVVouchers.sTitular, objTRVVouchers.dCambio, objTRVVouchers.dValorCambio, iExtraiInfoSigav, objTRVVouchers.sPassageiroNome, objTRVVouchers.sPassageiroSobreNome, objTRVVouchers.lEmissor, objTRVVouchers.lClienteVou, objTRVVouchers.lCliPassageiro, objTRVVouchers.dValorBruto, objTRVVouchers.sDestino, objTRVVouchers.sTitularCPF, objTRVVouchers.dTarifaUnitaria, objTRVVouchers.iVigencia, objTRVVouchers.lPromotor, objTRVVouchers.sMoeda, Arredonda_Moeda(objTRVVouchers.dValorBruto * (1 - IIf(objTRVVouchers.iCartao = DESMARCADO, dComissaoAg, 0))), Arredonda_Moeda(objTRVVouchers.dValorBruto * dComissaoAg), objTRVVouchers.sProduto, objTRVVouchers.dValorBaseComis, objTRVVouchers.sValidadeCC, objTRVVouchers.iTrataBoleto)
                End If
            Else
                
                If lNumBoleto <> 0 And iTrataBoleto = MARCADO Then
                    objTRVVouchers.iTrataBoleto = MARCADO
                Else
                    objTRVVouchers.iTrataBoleto = DESMARCADO
                End If
                
                If iSistemaIntegrado = SISTEMA_INTEGRADO_SIGAV Then
                    lErro = Comando_ExecutarPos(alComando(1), "UPDATE TRVVouchers SET Titular = ?, Cambio = ?, ValorCambio = ?, ExtraiInfoSigav = ?, PassageiroNome = ?, PassageiroSobreNome = ?, CliPassageiro = ?, ValorBruto = ?, Destino = ?, TitularCPF = ?, TarifaUnitaria = ?, Vigencia = ?, Moeda = ?, Produto = ?, ValidadeCC = ?, TrataBoleto = ?  ", alComando(0), _
                            objTRVVouchers.sTitular, objTRVVouchers.dCambio, objTRVVouchers.dValorCambio, iExtraiInfoSigav, objTRVVouchers.sPassageiroNome, objTRVVouchers.sPassageiroSobreNome, objTRVVouchers.lCliPassageiro, objTRVVouchers.dValorBruto, objTRVVouchers.sDestino, objTRVVouchers.sTitularCPF, objTRVVouchers.dTarifaUnitaria, objTRVVouchers.iVigencia, objTRVVouchers.sMoeda, objTRVVouchers.sProduto, objTRVVouchers.sValidadeCC, objTRVVouchers.iTrataBoleto)
                Else
                    lErro = Comando_ExecutarPos(alComando(1), "UPDATE TRVVouchers SET Titular = ?, Cambio = ?, ValorCambio = ?, ExtraiInfoSigav = ?, PassageiroNome = ?, PassageiroSobreNome = ?, CliPassageiro = ?, ValorBruto = ?, Destino = ?, TitularCPF = ?, TarifaUnitaria = ?, Vigencia = ?, Moeda = ?, Valor = ?, ValorComissao = ?, Produto = ?, ValorBaseComis = ?, ValidadeCC = ?, TrataBoleto = ?  ", alComando(0), _
                            objTRVVouchers.sTitular, objTRVVouchers.dCambio, objTRVVouchers.dValorCambio, iExtraiInfoSigav, objTRVVouchers.sPassageiroNome, objTRVVouchers.sPassageiroSobreNome, objTRVVouchers.lCliPassageiro, objTRVVouchers.dValorBruto, objTRVVouchers.sDestino, objTRVVouchers.sTitularCPF, objTRVVouchers.dTarifaUnitaria, objTRVVouchers.iVigencia, objTRVVouchers.sMoeda, Arredonda_Moeda(objTRVVouchers.dValorBruto * (1 - IIf(objTRVVouchers.iCartao = DESMARCADO, dComissaoAg, 0))), Arredonda_Moeda(objTRVVouchers.dValorBruto * dComissaoAg), objTRVVouchers.sProduto, objTRVVouchers.dValorBaseComis, objTRVVouchers.sValidadeCC, objTRVVouchers.iTrataBoleto)
                End If
            End If
    
        ElseIf iTipoGravacao = TRV_TIPO_GRAVACAO_VOU_TELA Then
        
                If bGravaVend Then
                    lErro = TRVVouVendedores_Exclui(alComando(13), alComando(14), objTRVVouchers)
                    If lErro <> SUCESSO Then gError 200399
            
                    lErro = TRVVouVendedores_Grava(objTRVVouchers, alComandoX(1), alComandoX(2), alComandoX(3), alComando(10), alComandoX(4), True)
                    If lErro <> SUCESSO Then gError 200399
                End If
                iForcaCTB = DESMARCADO
                
                'Vai ver os dados atuais de CI e os gravados e fazer os ajustes em comissões além de mexer na própria tabela
                lErro = TRVVouEmiCI_Acerta(objTRVVouchers)
                If lErro <> SUCESSO Then gError 200399
        
                If Abs(dComissaoAg - objTRVVouchers.dComissaoAg) > DELTA_VALORMONETARIO2 And iCartao = DESMARCADO Then
                    If lNumFat <> 0 Then gError 200276
                    iForcaCTB = MARCADO
                End If
                If objTRVVouchers.dComissaoEmissor > DELTA_VALORMONETARIO And objTRVVouchers.idiasantc = MARCADO Then gError 200277
                If gdtDataInicioComisCorp > objTRVVouchers.dtData Then
                    bTesteExisteAltComis = objTRVVouchers.lEmissor <> lEmissor Or objTRVVouchers.lRepresentante <> lRepresentante Or Abs(dComissaoRep - objTRVVouchers.dComissaoRep) > DELTA_VALORMONETARIO2 Or objTRVVouchers.lCorrentista <> lCorrentista Or Abs(dComissaoCorr - objTRVVouchers.dComissaoCorr) > DELTA_VALORMONETARIO2 Or Abs(dComissaoAg - objTRVVouchers.dComissaoAg) > DELTA_VALORMONETARIO2 Or Abs(dComissaoEmissor - objTRVVouchers.dComissaoEmissor) > DELTA_VALORMONETARIO2
                    If bTesteExisteAltComis Then gError 200278
                End If
        
                lErro = Comando_ExecutarPos(alComando(1), "UPDATE TRVVouchers SET Emissor = ?, Promotor = ?, Representante = ?, ComissaoRep = ?, Correntista = ?, ComissaoCorr = ?, ComissaoAg = ?, ComissaoEmissor = ?, ClienteComissao = ?, ClienteVou = ?, ForcaCTB = ?  ", alComando(0), _
                        objTRVVouchers.lEmissor, objTRVVouchers.lPromotor, objTRVVouchers.lRepresentante, objTRVVouchers.dComissaoRep, objTRVVouchers.lCorrentista, objTRVVouchers.dComissaoCorr, objTRVVouchers.dComissaoAg, objTRVVouchers.dComissaoEmissor, objTRVVouchers.lClienteComissao, objTRVVouchers.lClienteVou, iForcaCTB)
    
        ElseIf iTipoGravacao = TRV_TIPO_GRAVACAO_ACERTO_VALOR_LIQ Then
            
                objTRVVouchers.dValorComissao = Arredonda_Moeda(objTRVVouchers.dValorBaseComis * objTRVVouchers.dComissaoAg)
                If objTRVVouchers.lClienteComissao = 0 Then objTRVVouchers.lClienteComissao = objTRVVouchers.lClienteVou
                
                If objTRVVouchers.iCartao = MARCADO Then
                    objTRVVouchers.dValor = objTRVVouchers.dValorBruto
                Else
                    objTRVVouchers.dValor = Arredonda_Moeda(objTRVVouchers.dValorBruto - objTRVVouchers.dValorComissao)
                End If
                
                Set objVouBD = New ClassTRVVouchers
            
                objVouBD.sTipoDoc = objTRVVouchers.sTipoDoc
                objVouBD.sSerie = objTRVVouchers.sSerie
                objVouBD.sTipVou = objTRVVouchers.sTipVou
                objVouBD.lNumVou = objTRVVouchers.lNumVou
               
                lErro = CF("TRVVoucherInfo_Le", objVouBD)
                If lErro <> SUCESSO Then gError 200269
                                
                dBrutoReal = 0
                dCMAReal = 0
                dCMCReal = 0
                dCMCCReal = 0
                dCMRReal = 0
                dCMEReal = 0
                For Each objVouInfo In objVouBD.colTRVVoucherInfo
                    If objVouInfo.sTipoDoc = TRV_TIPODOC_CMCC_TEXTO Then
                        dCMCCReal = dCMCCReal + objVouInfo.dValor
                    End If
                    If objVouInfo.sTipoDoc = TRV_TIPODOC_CMA_TEXTO Then
                        dCMAReal = dCMAReal + objVouInfo.dValor
                    End If
                    If objVouInfo.sTipoDoc = TRV_TIPODOC_BRUTO_TEXTO Then
                        dBrutoReal = dBrutoReal + objVouInfo.dValor
                    End If
                    If objVouInfo.sTipoDoc = TRV_TIPODOC_CMC_TEXTO Then
                        dCMCReal = dCMCReal + objVouInfo.dValor
                    End If
                    If objVouInfo.sTipoDoc = TRV_TIPODOC_CMR_TEXTO Then
                        dCMRReal = dCMRReal + objVouInfo.dValor
                    End If
                    If objVouInfo.sTipoDoc = TRV_TIPODOC_OVER_TEXTO Then
                        dCMEReal = dCMEReal + objVouInfo.dValor
                    End If
                Next
        
                lErro = Comando_ExecutarPos(alComando(1), "UPDATE TRVVouchers SET Valor = ?, ValorComissao = ?,  ValorBrutoComOCR = ?, ValorCMAComOCR = ?, ValorCMC = ?, ValorCMR = ?, ValorCMCC = ?, ValorCME = ?", alComando(0), _
                        objTRVVouchers.dValor, objTRVVouchers.dValorComissao, Arredonda_Moeda(dBrutoReal), Arredonda_Moeda(dCMAReal), Arredonda_Moeda(dCMCReal), Arredonda_Moeda(dCMRReal), Arredonda_Moeda(dCMCCReal), Arredonda_Moeda(dCMEReal))
        
        End If
        If lErro <> AD_SQL_SUCESSO Then gError 190861

    Else
        
        If iSistemaIntegrado = SISTEMA_INTEGRADO_SIGAV Then
            lErro = Comando_Executar(alComando(1), "INSERT INTO TRVVouchers( NumVou, TipoDoc, Serie, NumIntArq, " & _
                    "NumRegArqTexto, Cliente, Recnsica, Valor, Data, " & _
                    "CondPagto, TipVou, CodGrupo, NumFatCoinfo, TipoDocDestino, " & _
                    "NumIntDocDestino, Cartao, Status,Pax,Produto,Moeda,Controle, CiaCart,NumCCred,NumAuto,QuantParc,DiasAntc,Kit,ExtraiInfoSigav, Sistema, TarifaUNNormal, Promotor, UsuarioWeb, TrataBoleto, NumBoleto, ValorBoleto, DataVencBoleto) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)", _
                    objTRVVouchers.lNumVou, objTRVVouchers.sTipoDoc, objTRVVouchers.sSerie, objTRVVouchers.lNumIntArq, _
                    objTRVVouchers.lNumRegArqTexto, objTRVVouchers.lCliente, objTRVVouchers.lrecnsica, objTRVVouchers.dValor, objTRVVouchers.dtData, _
                    objTRVVouchers.iCondPagto, objTRVVouchers.sTipVou, objTRVVouchers.sCodGrupo, objTRVVouchers.lNumFatCoinfo, objTRVVouchers.iTipoDocDestino, _
                    objTRVVouchers.lNumIntDocDestino, objTRVVouchers.iCartao, STATUS_TRV_VOU_ABERTO, objTRVVouchers.iPax, objTRVVouchers.sProduto, objTRVVouchers.sMoeda, objTRVVouchers.sControle, objTRVVouchers.sCiaCart, objTRVVouchers.sNumCCred, objTRVVouchers.sNumAuto, objTRVVouchers.iQuantParc, objTRVVouchers.idiasantc, objTRVVouchers.iKit, iExtraiInfoSigav, iSistemaIntegrado, objTRVVouchers.dTarifaUNNormal, objTRVVouchers.lPromotor, objTRVVouchers.sUsuarioWeb, objTRVVouchers.iTrataBoleto, objTRVVouchers.lNumBoleto, objTRVVouchers.dValorBoleto, objTRVVouchers.dtDataVencBoleto)
            If lErro <> AD_SQL_SUCESSO Then gError 190862
        Else
            lErro = Comando_Executar(alComando(1), "INSERT INTO TRVVouchers( NumVou, TipoDoc, Serie, NumIntArq, " & _
                    "NumRegArqTexto, Cliente, Recnsica, Data, " & _
                    "CondPagto, TipVou, CodGrupo, NumFatCoinfo, TipoDocDestino, " & _
                    "NumIntDocDestino, Cartao, Status,Pax,Produto,Moeda,Controle, CiaCart,NumCCred,NumAuto,QuantParc,DiasAntc,Kit,ExtraiInfoSigav, Sistema, TarifaUNNormal, Promotor, UsuarioWeb, TrataBoleto, NumBoleto, ValorBoleto, DataVencBoleto) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)", _
                    objTRVVouchers.lNumVou, objTRVVouchers.sTipoDoc, objTRVVouchers.sSerie, objTRVVouchers.lNumIntArq, _
                    objTRVVouchers.lNumRegArqTexto, objTRVVouchers.lCliente, objTRVVouchers.lrecnsica, objTRVVouchers.dtData, _
                    objTRVVouchers.iCondPagto, objTRVVouchers.sTipVou, objTRVVouchers.sCodGrupo, objTRVVouchers.lNumFatCoinfo, objTRVVouchers.iTipoDocDestino, _
                    objTRVVouchers.lNumIntDocDestino, objTRVVouchers.iCartao, STATUS_TRV_VOU_ABERTO, objTRVVouchers.iPax, objTRVVouchers.sProduto, objTRVVouchers.sMoeda, objTRVVouchers.sControle, objTRVVouchers.sCiaCart, objTRVVouchers.sNumCCred, objTRVVouchers.sNumAuto, objTRVVouchers.iQuantParc, objTRVVouchers.idiasantc, objTRVVouchers.iKit, iExtraiInfoSigav, iSistemaIntegrado, objTRVVouchers.dTarifaUNNormal, objTRVVouchers.lPromotor, objTRVVouchers.sUsuarioWeb, objTRVVouchers.iTrataBoleto, objTRVVouchers.lNumBoleto, objTRVVouchers.dValorBoleto, objTRVVouchers.dtDataVencBoleto)
            If lErro <> AD_SQL_SUCESSO Then gError 190862
        End If

    End If
    
    If iTipoGravacao = TRV_TIPO_GRAVACAO_ACERTO_VALOR_LIQ And Not bIgnoraVouExp Then
        objVouExp.sSerie = objTRVVouchers.sSerie
        objVouExp.sTipVou = objTRVVouchers.sTipVou
        objVouExp.lNumVou = objTRVVouchers.lNumVou
        objVouExp.lCliente = lClienteVou
        objVouExp.iTransacao = TRV_EXPORT_VOU_TRANS_ALT_COMI
        lErro = TRVVouExp_Insere(alComando(2), alComando(3), alComando(4), alComando(5), alComando(6), alComando(7), objVouExp)
        If lErro <> SUCESSO Then gError 196314
    End If
    
    If iTipoGravacao = TRV_TIPO_GRAVACAO_VOU_EXTRACAO Or iTipoGravacao = TRV_TIPO_GRAVACAO_VOU_TELA Or ((objTRVVouchers.sTipoDoc = TRV_TIPODOC_CMR_TEXTO Or objTRVVouchers.sTipoDoc = TRV_TIPODOC_CMC_TEXTO) And Abs(dValor - objTRVVouchers.dValor) > DELTA_VALORMONETARIO) Then
    
        'Se já está com a versão de comissionamento e a alteração é em voucher antigo acerta a importação inicial
        If giVersaoTRV >= TRV_VERSAO_COMISSIONAMENTO And gdtDataInicioComisCorp > objTRVVouchers.dtData Then
            lErro = TRVVou_Acerta_Comis_Ant(objTRVVouchers)
            If lErro <> SUCESSO Then gError 196314
        End If
        
    End If
    
    If iTipoGravacao = TRV_TIPO_GRAVACAO_VOU_IMPORTACAO Then
        'Mudou para pagto com cartão ou deixou de ser pagto com cartão
        If iCartao <> objTRVVouchers.iCartao Then
            lErro = TRVVou_Gera_Comis(objTRVVouchers, 0, 0, TRV_TIPO_VALOR_BASE_BRU, Date, "Alteração no tipo de pagamento do voucher. Cartão Ant.: " & IIf(iCartao = MARCADO, "SIM", "NÃO") & " , Cartão Atual: " & IIf(objTRVVouchers.iCartao = MARCADO, "SIM", "NÃO") & ".", TRV_TIPO_TRATAMENTO_COMI_VOU_TRANSF_CARTAO)
            If lErro <> SUCESSO Then gError 196316
        End If
        
        'Mudou para pagto antecipado ou deixou de ser pagto antecipado
        If idiasantc <> objTRVVouchers.idiasantc Then
            If objTRVVouchers.idiasantc = MARCADO Then
                'Se passou a ser dia anteciado tem que estornar a comissão do emissor
                lErro = TRVVou_Gera_Comis(objTRVVouchers, 0, 0, TRV_TIPO_VALOR_BASE_PER, Date, "Alteração no tipo de pagamento do voucher. DiasAntc Ant.: " & IIf(idiasantc = MARCADO, "SIM", "NÃO") & " , DiasAntc Atual: " & IIf(objTRVVouchers.idiasantc = MARCADO, "SIM", "NÃO") & ".", TRV_TIPO_TRATAMENTO_COMI_VOU_TRANSF_EMI)
                If lErro <> SUCESSO Then gError 196316
            Else
                'Se passou deixou de ser dia anteciado tem que lançar a comissão do emissor
                lErro = TRVVou_Gera_Comis(objTRVVouchers, objTRVVouchers.dComissaoEmissor, 0, TRV_TIPO_VALOR_BASE_PER, Date, "Alteração no tipo de pagamento do voucher. DiasAntc Ant.: " & IIf(idiasantc = MARCADO, "SIM", "NÃO") & " , DiasAntc Atual: " & IIf(objTRVVouchers.idiasantc = MARCADO, "SIM", "NÃO") & ".", TRV_TIPO_TRATAMENTO_COMI_OVER_ALT_PERCCOMI)
                If lErro <> SUCESSO Then gError 196316
            End If
        End If
    End If
                    
'    If objTRVVouchers.lNumVou = 782626 Then
'        Call MsgBox("A: iTipoGravacao = " & CStr(iTipoGravacao) & " objTRVVouchers.lClienteVou = " & CStr(objTRVVouchers.lClienteVou) & " objTRVVouchers.lClienteComissao = " & CStr(objTRVVouchers.lClienteComissao) & " lClienteVou = " & CStr(lClienteVou) & " lClienteComissao = " & CStr(lClienteComissao))
'    End If
                    
    If (iTipoGravacao = TRV_TIPO_GRAVACAO_VOU_EXTRACAO Or iTipoGravacao = TRV_TIPO_GRAVACAO_VOU_TELA) And gdtDataInicioComisCorp <= objTRVVouchers.dtData Then
        
        If objTRVVouchers.lClienteComissao = 0 Then objTRVVouchers.lClienteComissao = objTRVVouchers.lClienteVou
        
        '########################################################
        'GERAR AS COMISSÕES OVER, CMR E CMC Bloqueadas tanto na inclusão como na alteração
        'na alteração de vouchers
        If objTRVVouchers.sTipoDoc = TRV_TIPODOC_VOU_TEXTO Then
            
            'Se é novo ou descancelou um voucher
            If bExtraiuInfoSigavNovo Or dValorBruto = 0 Then
                If objTRVVouchers.dValorBruto <> 0 Or objTRVVouchers.dValorBaseComis <> 0 Then
                    lErro = TRVVou_Gera_Comis(objTRVVouchers, objTRVVouchers.dValorBruto, objTRVVouchers.dValorBaseComis, TRV_TIPO_VALOR_BASE_BRU, objTRVVouchers.dtData, "Voucher emitido", TRV_TIPO_TRATAMENTO_COMI_VOU_NOVO)
                    If lErro <> SUCESSO Then gError 196314
                End If
            Else
            
                objVoucherInfo.lNumVou = objTRVVouchers.lNumVou
                objVoucherInfo.sSerie = objTRVVouchers.sSerie
                objVoucherInfo.sTipo = objTRVVouchers.sTipVou
                
                lErro = CF("TRVVoucherInfoSigav_Le", objVoucherInfo)
                If lErro <> SUCESSO And lErro <> ERRO_LEITURA_SEM_DADOS Then gError 196315
            
                'Se as informações do voucher estão completas
                If lErro = SUCESSO Then
                                                                          
                    'Mudou para pagto com cartão ou deixou de ser pagto com cartão
                    If iCartao <> objTRVVouchers.iCartao Then
                        lErro = TRVVou_Gera_Comis(objTRVVouchers, 0, 0, TRV_TIPO_VALOR_BASE_BRU, Date, "Alteração no tipo de pagamento do voucher. Cartão Ant.: " & IIf(iCartao = MARCADO, "SIM", "NÃO") & " , Cartão Atual: " & IIf(objTRVVouchers.iCartao = MARCADO, "SIM", "NÃO") & ".", TRV_TIPO_TRATAMENTO_COMI_VOU_TRANSF_CARTAO)
                        If lErro <> SUCESSO Then gError 196316
                    End If
                    
                    'Mudou para pagto antecipado ou deixou de ser pagto antecipado
                    If idiasantc <> objTRVVouchers.idiasantc Then
                        If objTRVVouchers.idiasantc = MARCADO Then
                            'Se passou a ser dia anteciado tem que estornar a comissão do emissor
                            lErro = TRVVou_Gera_Comis(objTRVVouchers, 0, 0, TRV_TIPO_VALOR_BASE_PER, Date, "Alteração no tipo de pagamento do voucher. DiasAntc Ant.: " & IIf(idiasantc = MARCADO, "SIM", "NÃO") & " , DiasAntc Atual: " & IIf(objTRVVouchers.idiasantc = MARCADO, "SIM", "NÃO") & ".", TRV_TIPO_TRATAMENTO_COMI_VOU_TRANSF_EMI)
                            If lErro <> SUCESSO Then gError 196316
                        Else
                            'Se passou deixou de ser dia anteciado tem que lançar a comissão do emissor
                            lErro = TRVVou_Gera_Comis(objTRVVouchers, objTRVVouchers.dComissaoEmissor, 0, TRV_TIPO_VALOR_BASE_PER, Date, "Alteração no tipo de pagamento do voucher. DiasAntc Ant.: " & IIf(idiasantc = MARCADO, "SIM", "NÃO") & " , DiasAntc Atual: " & IIf(objTRVVouchers.idiasantc = MARCADO, "SIM", "NÃO") & ".", TRV_TIPO_TRATAMENTO_COMI_OVER_ALT_PERCCOMI)
                            If lErro <> SUCESSO Then gError 196316
                        End If
                    End If
                    
                    'Mudou o valor do voucher
                    If (Abs(dValorBruto - objTRVVouchers.dValorBruto) > DELTA_VALORMONETARIO) Or (Abs(dValorBaseComis - objTRVVouchers.dValorBaseComis) > DELTA_VALORMONETARIO) Then
                        
                        lEmissorAux = objTRVVouchers.lEmissor
                        iCartaoAux = objTRVVouchers.iCartao
                        lErro = TRVVou_Gera_Comis(objTRVVouchers, objTRVVouchers.dValorBruto - dValorBruto, objTRVVouchers.dValorBaseComis - dValorBaseComis, TRV_TIPO_VALOR_BASE_BRU, Date, "Alteração no valor do voucher Valor Ant.: " & Format(dValorBruto, "STANDARD") & " Valor Atual: " & Format(objTRVVouchers.dValorBruto, "STANDARD") & ".", TRV_TIPO_TRATAMENTO_COMI_VOU_VLR_ALTERADO)
                        objTRVVouchers.lEmissor = lEmissorAux
                        objTRVVouchers.iCartao = iCartaoAux
                        If lErro <> SUCESSO Then gError 196316
                        
                    End If
                    
                    bIgnoraComissao = False
                
                    If iTipoGravacao <> TRV_TIPO_GRAVACAO_VOU_TELA Then
                                                            
                        'Se mudou ou o produto ou o destino ou o cliente ou a base para comissão quando for cartão e exitir no atual ou novo uma diferença de valores
                        '=> verifica se isso causou a alteração do voucher
                        bTrocaInf = UCase(sProduto) <> UCase(objTRVVouchers.sProduto) Or UCase(sDestino) <> UCase(objTRVVouchers.sDestino) Or lClienteVou <> objTRVVouchers.lClienteVou Or ((Abs(dValorBaseComis - dValorBruto) > DELTA_VALORMONETARIO) Or (Abs(objTRVVouchers.dValorBaseComis - objTRVVouchers.dValorBruto) > DELTA_VALORMONETARIO))
                        If lEmissor <> objTRVVouchers.lEmissor Then
                        
                            bIgnoraComissao = True
                            
                            If bTrocaInf Then
                                'Le as informações pertinentes a comissão para ver se teve alguma alteração
                                lErro = CF("TRVVou_Le_Dados_Comis_Cliente", objTRVVouchers)
                                If lErro <> SUCESSO Then gError 196315
                            End If
                                                   
                            lErro = TRVVouchers_Grava(objTRVVouchers, , , TRV_TIPO_GRAVACAO_VOU_TELA, False, lConexaoTVA)
                            If lErro <> SUCESSO Then gError 198213
                        
                        End If
                        
                        'Se mudou ou o produto ou o destino do voucher verifica se isso
                        'causou a alteração do voucher
                        bTrocaInf = UCase(sProduto) <> UCase(objTRVVouchers.sProduto) Or UCase(sDestino) <> UCase(objTRVVouchers.sDestino) Or lClienteVou <> objTRVVouchers.lClienteVou Or ((Abs(dValorBaseComis - dValorBruto) > DELTA_VALORMONETARIO) Or (Abs(objTRVVouchers.dValorBaseComis - objTRVVouchers.dValorBruto) > DELTA_VALORMONETARIO)) Or (iTrataBoleto = MARCADO)
                        If bTrocaInf And Not bIgnoraComissao Then
                    
                            bIgnoraComissao = True
                    
                            'Le as informações pertinentes a comissão para ver se teve alguma alteração
                            lErro = CF("TRVVou_Le_Dados_Comis_Cliente", objTRVVouchers)
                            If lErro <> SUCESSO Then gError 196315
                            
                            lErro = TRVVouchers_Grava(objTRVVouchers, , , TRV_TIPO_GRAVACAO_VOU_TELA, False, lConexaoTVA)
                            If lErro <> SUCESSO Then gError 198213
    
                        End If
                        
                    End If
                    
'    If objTRVVouchers.lNumVou = 782626 Then
'        Call MsgBox("B: bIgnoraComissao = " & IIf(bIgnoraComissao, "V", "F") & " iTipoGravacao = " & CStr(iTipoGravacao) & " objTRVVouchers.lClienteVou = " & CStr(objTRVVouchers.lClienteVou) & " objTRVVouchers.lClienteComissao = " & CStr(objTRVVouchers.lClienteComissao) & " lClienteVou = " & CStr(lClienteVou) & " lClienteComissao = " & CStr(lClienteComissao))
'    End If
    
                    If Not bIgnoraComissao Then
                    
                        Set objVouBD = New ClassTRVVouchers
                    
                        objVouBD.sTipoDoc = objTRVVouchers.sTipoDoc
                        objVouBD.sSerie = objTRVVouchers.sSerie
                        objVouBD.sTipVou = objTRVVouchers.sTipVou
                        objVouBD.lNumVou = objTRVVouchers.lNumVou

                        lErro = CF("TRVVouchers_Le", objVouBD)
                        If lErro <> SUCESSO And lErro <> ERRO_LEITURA_SEM_DADOS Then gError 190860
                        
                        lErro = CF("TRVVoucherInfo_Le", objVouBD)
                        If lErro <> SUCESSO Then gError 200269
                        
                        dBrutoReal = 0
                        dCMAReal = 0
                        dCMCReal = 0
                        dCMCCReal = 0
                        dCMRReal = 0
                        dCMEReal = 0
                        For Each objVouInfo In objVouBD.colTRVVoucherInfo
                            If objVouInfo.sTipoDoc = TRV_TIPODOC_CMCC_TEXTO Then
                                dCMCCReal = dCMCCReal + objVouInfo.dValor
                            End If
                            If objVouInfo.sTipoDoc = TRV_TIPODOC_CMA_TEXTO Then
                                dCMAReal = dCMAReal + objVouInfo.dValor
                            End If
                            If objVouInfo.sTipoDoc = TRV_TIPODOC_BRUTO_TEXTO Then
                                dBrutoReal = dBrutoReal + objVouInfo.dValor
                            End If
                            If objVouInfo.sTipoDoc = TRV_TIPODOC_CMC_TEXTO Then
                                dCMCReal = dCMCReal + objVouInfo.dValor
                            End If
                            If objVouInfo.sTipoDoc = TRV_TIPODOC_CMR_TEXTO Then
                                dCMRReal = dCMRReal + objVouInfo.dValor
                            End If
                            If objVouInfo.sTipoDoc = TRV_TIPODOC_OVER_TEXTO Then
                                dCMEReal = dCMEReal + objVouInfo.dValor
                            End If
                        Next
    
'    If objTRVVouchers.lNumVou = 782626 Then
'        Call MsgBox("C: bIgnoraComissao = " & IIf(bIgnoraComissao, "V", "F") & " iTipoGravacao = " & CStr(iTipoGravacao) & " objTRVVouchers.lClienteVou = " & CStr(objTRVVouchers.lClienteVou) & " objTRVVouchers.lClienteComissao = " & CStr(objTRVVouchers.lClienteComissao) & " lClienteVou = " & CStr(lClienteVou) & " lClienteComissao = " & CStr(lClienteComissao))
'    End If
    
                        'Mudou o cliente
                        If (lClienteComissao <> objTRVVouchers.lClienteComissao Or lClienteVou <> objTRVVouchers.lClienteVou) And dComissaoAg = 0 Then
                            
'    If objTRVVouchers.lNumVou = 782626 Then
'        Call MsgBox("E: bIgnoraComissao = " & IIf(bIgnoraComissao, "V", "F") & " iTipoGravacao = " & CStr(iTipoGravacao) & " objTRVVouchers.lClienteVou = " & CStr(objTRVVouchers.lClienteVou) & " objTRVVouchers.lClienteComissao = " & CStr(objTRVVouchers.lClienteComissao) & " lClienteVou = " & CStr(lClienteVou) & " lClienteComissao = " & CStr(lClienteComissao))
'    End If
                            lErro = TRVVou_Gera_Comis(objTRVVouchers, 0, 0, TRV_TIPO_VALOR_BASE_PER, Date, "Trocou o cliente. Cliente Ant.: " & CStr(lClienteVou) & " , Cliente Atual: " & CStr(objTRVVouchers.lClienteVou) & ".", TRV_TIPO_TRATAMENTO_COMI_VOU_TRANSF_CLI)
                            If lErro <> SUCESSO Then gError 196316
                        End If
                        If (lClienteComissao <> objTRVVouchers.lClienteComissao Or lClienteVou <> objTRVVouchers.lClienteVou) And dComissaoAg <> 0 Then
                            
'    If objTRVVouchers.lNumVou = 782626 Then
'        Call MsgBox("D: bIgnoraComissao = " & IIf(bIgnoraComissao, "V", "F") & " iTipoGravacao = " & CStr(iTipoGravacao) & " objTRVVouchers.lClienteVou = " & CStr(objTRVVouchers.lClienteVou) & " objTRVVouchers.lClienteComissao = " & CStr(objTRVVouchers.lClienteComissao) & " lClienteVou = " & CStr(lClienteVou) & " lClienteComissao = " & CStr(lClienteComissao))
'    End If
                            lErro = TRVVou_Gera_Comis(objTRVVouchers, objTRVVouchers.dComissaoAg / dComissaoAg, 0, TRV_TIPO_VALOR_BASE_PER, Date, "Trocou o cliente. Cliente Ant.: " & CStr(lClienteVou) & " , Cliente Atual: " & CStr(objTRVVouchers.lClienteVou) & ".", TRV_TIPO_TRATAMENTO_COMI_VOU_TRANSF_CLI)
                            If lErro <> SUCESSO Then gError 196316
                        End If
                        
                        'Mudou de emissor
                        If lEmissor <> objTRVVouchers.lEmissor And dComissaoEmissor <> 0 Then
                            lErro = TRVVou_Gera_Comis(objTRVVouchers, objTRVVouchers.dComissaoEmissor / dComissaoEmissor, 0, TRV_TIPO_VALOR_BASE_PER, Date, "Trocou o emissor. Emissor Ant.: " & CStr(lEmissor) & " , Emissor Atual: " & CStr(objTRVVouchers.lEmissor) & ".", TRV_TIPO_TRATAMENTO_COMI_VOU_TRANSF_EMI)
                            If lErro <> SUCESSO Then gError 196316
                        End If
                                                               
                        'Mudou de Representante
                        If lRepresentante <> objTRVVouchers.lRepresentante And dComissaoRep <> 0 Then
                            lErro = TRVVou_Gera_Comis(objTRVVouchers, objTRVVouchers.dComissaoRep / dComissaoRep, 0, TRV_TIPO_VALOR_BASE_PER, Date, "Trocou o representante. Representante Ant.: " & CStr(lRepresentante) & " , Representante Atual: " & CStr(objTRVVouchers.lRepresentante) & ".", TRV_TIPO_TRATAMENTO_COMI_VOU_TRANSF_REP)
                            If lErro <> SUCESSO Then gError 196316
                        End If
                        
                        'Mudou o correntista
                        If lCorrentista <> objTRVVouchers.lCorrentista And dComissaoCorr <> 0 Then
                            lErro = TRVVou_Gera_Comis(objTRVVouchers, objTRVVouchers.dComissaoCorr / dComissaoCorr, 0, TRV_TIPO_VALOR_BASE_PER, Date, "Trocou o correntista. Correntista Ant.: " & CStr(lCorrentista) & " , Correntista Atual: " & CStr(objTRVVouchers.lCorrentista) & ".", TRV_TIPO_TRATAMENTO_COMI_VOU_TRANSF_COR)
                            If lErro <> SUCESSO Then gError 196316
                        End If
                        
                        'Verifica qual é a base para comissão considerando as ocorrências
                        'Se for cartão é a Base vezes o % de Ocorrência, por exemplo se o Bruto Real é 100 e o Bruto é 200 Significa que tem um acerto de 50% via ocorrência
                        If objTRVVouchers.dValorBruto <> 0 Then
                            dValorAux = IIf(objTRVVouchers.iCartao = MARCADO, objTRVVouchers.dValorBaseComis * (dBrutoReal / objTRVVouchers.dValorBruto), dBrutoReal)
                        Else
                            dValorAux = 0
                        End If
                                               
                        'Mudou o % de comissão do Representante
                        If Abs(dComissaoRep - objTRVVouchers.dComissaoRep) > DELTA_VALORMONETARIO2 And (lRepresentante = objTRVVouchers.lRepresentante Or dComissaoRep = 0) Then
                            lErro = TRVVou_Gera_Comis(objTRVVouchers, (dValorAux * objTRVVouchers.dComissaoRep) - dCMRReal, 0, TRV_TIPO_VALOR_BASE_LIQ, Date, "Alteração no % de comissão do representante. % Ant.: " & Format(dComissaoRep, "PERCENT") & " , % Atual: " & Format(objTRVVouchers.dComissaoRep, "PERCENT") & ".", TRV_TIPO_TRATAMENTO_COMI_CMR_ALT_PERCCOMI)
                            If lErro <> SUCESSO Then gError 196316
                        End If
                        
                        'Mudou o % de comissão do correntista
                        If Abs(dComissaoCorr - objTRVVouchers.dComissaoCorr) > DELTA_VALORMONETARIO2 And (lCorrentista = objTRVVouchers.lCorrentista Or dComissaoCorr = 0) Then
                            lErro = TRVVou_Gera_Comis(objTRVVouchers, (dValorAux * objTRVVouchers.dComissaoCorr) - dCMCReal, 0, TRV_TIPO_VALOR_BASE_LIQ, Date, "Alteração no % de comissão do correntista. % Ant.: " & Format(dComissaoCorr, "PERCENT") & " , % Atual: " & Format(objTRVVouchers.dComissaoCorr, "PERCENT") & ".", TRV_TIPO_TRATAMENTO_COMI_CMC_ALT_PERCCOMI)
                            If lErro <> SUCESSO Then gError 196316
                        End If
                        
                        'Mudou o % de comissão do emissor
                        If Abs(dComissaoEmissor - objTRVVouchers.dComissaoEmissor) > DELTA_VALORMONETARIO2 And (lEmissor = objTRVVouchers.lEmissor Or dComissaoEmissor = 0) Then
                            lErro = TRVVou_Gera_Comis(objTRVVouchers, (dValorAux * objTRVVouchers.dComissaoEmissor) - dCMEReal, 0, TRV_TIPO_VALOR_BASE_LIQ, Date, "Alteração no % de comissão do emissor. % Ant.: " & Format(dComissaoEmissor, "PERCENT") & " , % Atual: " & Format(objTRVVouchers.dComissaoEmissor, "PERCENT") & ".", TRV_TIPO_TRATAMENTO_COMI_OVER_ALT_PERCCOMI)
                            If lErro <> SUCESSO Then gError 196316
                        End If
                        
                        'Mudou o % de comissão do agência
                        If Abs(dComissaoAg - objTRVVouchers.dComissaoAg) > DELTA_VALORMONETARIO2 And (lClienteComissao = objTRVVouchers.lClienteComissao Or dComissaoAg = 0) Then
                            lErro = TRVVou_Gera_Comis(objTRVVouchers, (dValorAux * objTRVVouchers.dComissaoAg) - (dCMAReal + dCMCCReal), 0, TRV_TIPO_VALOR_BASE_LIQ, Date, "Alteração no % de comissão da agência. % Ant.: " & Format(dComissaoAg, "PERCENT") & " , % Atual: " & Format(objTRVVouchers.dComissaoAg, "PERCENT") & ".", TRV_TIPO_TRATAMENTO_COMI_CMA_CMCC_ALT_PERCCOMI)
                            If lErro <> SUCESSO Then gError 196316
                        End If
                        
                    End If
                                   
                End If
            
            End If
        End If
    End If
    '########################################################

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next
    
    If iTipoGravacao <> TRV_TIPO_GRAVACAO_ACERTO_VALOR_LIQ Then
        'Fecha Comando
        For iIndice = LBound(alComandoX) To UBound(alComandoX)
            Call Comando_Fechar(alComandoX(iIndice))
        Next
    End If
    
    If lConexaoTVA_P = 0 Then Call Conexao_FecharExt(lConexaoTVA)

    TRVVouchers_Grava = SUCESSO

    Exit Function

Erro_TRVVouchers_Grava:

    TRVVouchers_Grava = gErr

    Select Case gErr

        Case 190857
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 190858, 190859
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVVOUCHERS", gErr)

        Case 190860
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVVOUCHERS", gErr)

        Case 190861
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVVOUCHERS", gErr)

        Case 190862
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_TRVVOUCHERS", gErr)
            
        Case 196314, 196315, 196316, 200399
        
        Case 200276
            Call Rotina_Erro(vbOKOnly, "ERRO_TRV_CMA_NAO_ALT_VOU_FAT", gErr)
            
        Case 200277
            Call Rotina_Erro(vbOKOnly, "ERRO_TRV_OVER_NAO_ALT_VOU_ANTC", gErr)
            
        Case 200278
            Call Rotina_Erro(vbOKOnly, "ERRO_TRV_COMISSAO_NAO_ALTERAVEL_DATA", gErr, gdtDataInicioComisCorp)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 190856)

    End Select
    
    Call Rotina_Erro(vbOKOnly, "Erro na função TRVVouchers_Grava Tipo Gravação: " & CStr(iTipoGravacao) & " Vou: " & objTRVVouchers.sTipVou & objTRVVouchers.sSerie & CStr(objTRVVouchers.lNumVou) & " CliVou: " & CStr(objTRVVouchers.lClienteVou), gErr)

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next
    
    If iTipoGravacao <> TRV_TIPO_GRAVACAO_ACERTO_VALOR_LIQ Then
        'Fecha Comando
        For iIndice = LBound(alComandoX) To UBound(alComandoX)
            Call Comando_Fechar(alComandoX(iIndice))
        Next
    End If
    
    Call Transacao_Rollback
    
    If lConexaoTVA_P = 0 Then Call Conexao_FecharExt(lConexaoTVA)

    Exit Function

End Function

Public Function TRVVouchers_Cancela(ByVal objTRVVouchers As ClassTRVVouchers, Optional ByVal bImportacao As Boolean = False, Optional ByVal dValorNVL As Double = 0, Optional ByVal dtDataNVL As Date = DATA_NULA, Optional ByRef lNumIntDocOCR As Long) As Long

Dim lErro As Long
Dim alComando(0 To 13) As Long
Dim iIndice As Integer
Dim lNumFat As Long
Dim iStatus As Integer
Dim lNumIntDocTitRec As Long
Dim lNumIntDocDestino As Long
Dim iTipoDocDestino As Integer
Dim sTipoDoc As String
Dim objOcorrencia As ClassTRVOcorrencias
Dim objOcorrenciaDet As ClassTRVOcorrenciaDet
Dim dValor As Double
Dim lCliente As Long
Dim iFilialEmpresa As Integer
Dim sSiglaDocumento As String
Dim lNumVou As Long
Dim sSerie As String
Dim sTipVou As String
Dim lCodigo As Long
Dim iCartao As Integer
Dim objVoucherInfo As New ClassTRVVoucherInfo
Dim lNumIntDocNVL As Long
Dim dValorOcr As Double
Dim lLeituraVou As Long
Dim bCriaNVL As Boolean
Dim bMarcarCancelado As Boolean
Dim bNVLCartao As Boolean
Dim dValorComissao As Double
Dim bComissaoCorp As Boolean
Dim lNumIntComi As Long
Dim dValorBruto As Double
Dim sTipoDocAux As String
Dim objVouExp As New ClassTRVVouExp
Dim lClienteVou As Long
Dim dValorBaseComis As Double

On Error GoTo Erro_TRVVouchers_Cancela

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 190848
    Next
    
    sTipoDoc = String(STRING_TRV_OCR_TIPODOC, 0)
    sSerie = String(STRING_TRV_OCR_SERIE, 0)
    sTipVou = String(STRING_TRV_OCR_TIPOVOU, 0)

    'Le o(s) documento(s) a ser(em) cancelado(s)
    'Se é um DOC NVL (Importação) tenta localizar o documento no cliente (CMC, CMR ou VOU) ... se
    'não localizar é um reembolso de comissão de cartão de crédito
    If objTRVVouchers.sTipoDoc = TRV_TIPODOC_NVL_TEXTO Then
        lErro = Comando_ExecutarPos(alComando(0), "SELECT NumFatCoinfo, Status, NumIntDocDestino,TipoDocDestino, TipoDoc, Valor, Cliente, NumVou, Serie, TipVou, Cartao, NumIntDocNVL, ValorOCR FROM TRVVouchers WHERE TipVou= ? AND NumVou = ? AND Serie = ? AND Cliente = ?", _
                    0, lNumFat, iStatus, lNumIntDocDestino, iTipoDocDestino, sTipoDoc, dValor, lCliente, lNumVou, sSerie, sTipVou, iCartao, lNumIntDocNVL, dValorOcr, objTRVVouchers.sTipVou, objTRVVouchers.lNumVou, objTRVVouchers.sSerie, objTRVVouchers.lCliente)
    Else
        'Se o cancelamento é manual cancela todos os documentos associados ao voucher (VOU, CMC e CMR),
        'Senão cancela o DOC importado
        If Not bImportacao Then
            lErro = Comando_ExecutarPos(alComando(0), "SELECT NumFatCoinfo, Status, NumIntDocDestino,TipoDocDestino, TipoDoc, Valor, Cliente, NumVou, Serie, TipVou, Cartao, NumIntDocNVL, ValorOCR, ValorBruto, ClienteVou,ValorBaseComis FROM TRVVouchers WHERE TipVou= ? AND NumVou = ? AND Serie = ? ORDER BY TipoDoc DESC", _
                        0, lNumFat, iStatus, lNumIntDocDestino, iTipoDocDestino, sTipoDoc, dValor, lCliente, lNumVou, sSerie, sTipVou, iCartao, lNumIntDocNVL, dValorOcr, dValorBruto, lClienteVou, dValorBaseComis, objTRVVouchers.sTipVou, objTRVVouchers.lNumVou, objTRVVouchers.sSerie)
        Else
            lErro = Comando_ExecutarPos(alComando(0), "SELECT NumFatCoinfo, Status, NumIntDocDestino,TipoDocDestino, TipoDoc, Valor, Cliente, NumVou, Serie, TipVou, Cartao, NumIntDocNVL, ValorOCR, ValorBruto, ValorBaseComis FROM TRVVouchers WHERE TipVou= ? AND NumVou = ? AND Serie = ? AND TipoDoc = ?", _
                        0, lNumFat, iStatus, lNumIntDocDestino, iTipoDocDestino, sTipoDoc, dValor, lCliente, lNumVou, sSerie, sTipVou, iCartao, lNumIntDocNVL, dValorOcr, dValorBruto, dValorBaseComis, objTRVVouchers.sTipVou, objTRVVouchers.lNumVou, objTRVVouchers.sSerie, objTRVVouchers.sTipoDoc)
        End If
    End If
    If lErro <> AD_SQL_SUCESSO Then gError 190849

    'Busca Primeiro documento
    lLeituraVou = Comando_BuscarPrimeiro(alComando(0))
    If lLeituraVou <> AD_SQL_SUCESSO And lLeituraVou <> AD_SQL_SEM_DADOS Then gError 190850
    
    bNVLCartao = False
    
    If sTipoDoc = TRV_TIPODOC_VOU_TEXTO And iCartao = MARCADO Then bNVLCartao = True
    
    'Se for comissão de cartão a agência não vai encontrar o documento original
    '(tem que cancelar o voucher (NVL ao passageiro) e gerar o NVL da comissão)
    If lLeituraVou = AD_SQL_SEM_DADOS Then
       
        'Le o voucher
        lErro = Comando_ExecutarPos(alComando(0), "SELECT NumFatCoinfo, Status, NumIntDocDestino,TipoDocDestino, TipoDoc, Valor, Cliente, NumVou, Serie, TipVou, Cartao, NumIntDocNVL, ValorOCR FROM TRVVouchers WHERE TipVou= ? AND NumVou = ? AND Serie = ? AND TipoDoc = ?", _
                    0, lNumFat, iStatus, lNumIntDocDestino, iTipoDocDestino, sTipoDoc, dValor, lCliente, lNumVou, sSerie, sTipVou, iCartao, lNumIntDocNVL, dValorOcr, objTRVVouchers.sTipVou, objTRVVouchers.lNumVou, objTRVVouchers.sSerie, TRV_TIPODOC_VOU_TEXTO)
        If lErro <> AD_SQL_SUCESSO Then gError 190849
     
        'Busca Primeiro documento
        lLeituraVou = Comando_BuscarPrimeiro(alComando(0))
        If lLeituraVou <> AD_SQL_SUCESSO And lLeituraVou <> AD_SQL_SEM_DADOS Then gError 190850
        
        If iCartao = MARCADO Then bNVLCartao = True
       
    End If
       
    'Enquanto existir
    Do While lLeituraVou <> AD_SQL_SEM_DADOS
    
        If sTipoDoc = TRV_TIPODOC_VOU_TEXTO And lNumFat = 0 And Not bImportacao Then gError 200419
    
        'Após a versão de comissionamento não vai existir mais cancelamento de CMR e CMC, já está na alteração de comissão
        'do vouchers
        If giVersaoTRV < TRV_VERSAO_COMISSIONAMENTO Or sTipoDoc = TRV_TIPODOC_VOU_TEXTO Then
    
            bCriaNVL = False
            bMarcarCancelado = True
    
            'Trava registro contra alterações/Leituras
            lErro = Comando_LockExclusive(alComando(0))
            If lErro <> SUCESSO Then gError 190852
                       
            'Se já estiver cancelado dá erro se for cancelamento manual,
            'na importação é só ignorar
            If iStatus = STATUS_TRV_VOU_CANCELADO Then
                If Not bImportacao Then gError 192760
            End If
       
            'Se ainda não foi inativado
            If lNumIntDocNVL = 0 Then
       
                'Se for inativação de um voucher já Faturado com a fatura baixada cria o NVL
                If lNumIntDocDestino <> 0 And iTipoDocDestino = TRV_TIPO_DOC_DESTINO_TITREC And sTipoDoc = TRV_TIPODOC_VOU_TEXTO Then
                
                    sSiglaDocumento = String(STRING_SIGLA_DOCUMENTO, 0)
                
                    'Verifica se o título a receber já foi baixado
                    lErro = Comando_Executar(alComando(2), "SELECT NumIntDoc, SiglaDocumento, FilialEmpresa FROM TitulosRecTodos WHERE NumIntDoc = ? AND Valor > Saldo + 0.001", _
                                lNumIntDocTitRec, sSiglaDocumento, iFilialEmpresa, lNumIntDocDestino)
                    If lErro <> AD_SQL_SUCESSO Then gError 192762
                
                    'Busca Primeiro
                    lErro = Comando_BuscarPrimeiro(alComando(2))
                    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192763
                    
                    If lErro = AD_SQL_SUCESSO Then bCriaNVL = True
                    
                ElseIf lNumIntDocDestino <> 0 And iTipoDocDestino <> TRV_TIPO_DOC_DESTINO_TITREC And sTipoDoc = TRV_TIPODOC_VOU_TEXTO Then
                    'Se for um voucher faturado e não ligado a um receber também cria o NVL
                    bCriaNVL = True
                End If
                
                'Se for inativação de comissão cria o NVL se for importacao de NVL ou manual,
                'só não cria para comissão em caso de exclusão, senão vai faturar só
                'o NVL e não a Comissão (O NVL vem em outro registro)
                If (sTipoDoc = TRV_TIPODOC_CMC_TEXTO Or sTipoDoc = TRV_TIPODOC_CMR_TEXTO) Then
                    If objTRVVouchers.sTipoDoc = TRV_TIPODOC_NVL_TEXTO Or Not bImportacao Then
                        bCriaNVL = True
                        bMarcarCancelado = False
                    End If
                End If
                
                'Criação do documento NVL
                If bCriaNVL Then
                
                    Set objOcorrencia = New ClassTRVOcorrencias
                    Set objOcorrenciaDet = New ClassTRVOcorrenciaDet
                    
                    If dtDataNVL = DATA_NULA Then
                        objOcorrencia.dtDataEmissao = gdtDataAtual
                    Else
                        objOcorrencia.dtDataEmissao = dtDataNVL
                    End If
                    
                    If dValorNVL = 0 Or bNVLCartao Then
                        objOcorrencia.dValorTotal = -dValor
                    Else
                        objOcorrencia.dValorTotal = dValorNVL
                    End If
                    
                    objOcorrencia.iFilialCliente = FILIAL_MATRIZ
                    objOcorrencia.iFormaPagto = FORMAPAGTO_TRV_OCR_FAT
                    objOcorrencia.iOrigem = INATIVACAO_AUTOMATICA_CODIGO
                    objOcorrencia.iStatus = STATUS_TRV_OCR_LIBERADO
                    
                    'Tem que pegar o passageiro
                    If bNVLCartao Then
                    
                        objOcorrencia.iStatus = STATUS_TRV_OCR_BLOQUEADO
                    
                        objVoucherInfo.lNumVou = lNumVou
                        objVoucherInfo.sSerie = sSerie
                        objVoucherInfo.sTipo = sTipVou
                        
                        lErro = CF("TRVVoucherInfoSigav_Le", objVoucherInfo)
                        If lErro <> SUCESSO And lErro <> ERRO_LEITURA_SEM_DADOS Then gError 192823
            
                        'VERIFICAR SE O PASSAGEIRO ESTÁ PREENCHIDO
                        If objVoucherInfo.lCliPassageiro = 0 Then
                        
                            'CADASTRAR O PASSAGEIRO E ACERTA A INFORMAÇÃO EM VOUCHERINFO
                            lErro = TRV_VoucherInfo_Cadastra_Cliente_EmTrans(objVoucherInfo)
                            If lErro <> SUCESSO Then gError 192824
                
                        End If
                        
                        lCliente = objVoucherInfo.lCliPassageiro
                    
                    End If
    
                    If Not bImportacao Or bNVLCartao Then
                        objOcorrencia.lCliente = lCliente
                    Else
                        objOcorrencia.lCliente = objTRVVouchers.lCliente
                    End If
                    
                    lErro = CF("Config_ObterAutomatico_EmTrans", "FATConfig", "NUM_PROX_TRVOCORRENCIAS", "TRVOcorrencias", "Codigo", lCodigo)
                    If lErro <> SUCESSO Then gError 192764
            
                    objOcorrencia.lCodigo = lCodigo
                    objOcorrencia.lNumVou = lNumVou
                    objOcorrencia.sHistorico = "Reembolso com base no pagto do título " & CStr(lNumFat) & " filial empresa " & CStr(iFilialEmpresa) & " e tipo de documento " & sSiglaDocumento
                    objOcorrencia.sSerie = sSerie
                    objOcorrencia.sTipoDoc = sTipVou
                    objOcorrencia.sObservacao = ""
                    
                    objOcorrenciaDet.iTipo = INATIVACAO_AUTOMATICA_TIPO_NVL_CODIGO
                    objOcorrenciaDet.iSeq = 1
                    objOcorrenciaDet.dValor = objOcorrencia.dValorTotal
                    
                    objOcorrencia.colDetalhamento.Add objOcorrenciaDet
                    
                    If bImportacao Then
                        lErro = TRVOcorrencias_Grava_EmTrans(objOcorrencia, False)
                    Else
                        lErro = TRVOcorrencias_Grava_EmTrans(objOcorrencia)
                    End If
                    If lErro <> SUCESSO Then gError 192765
                    
                    lNumIntDocOCR = objOcorrencia.lNumIntDoc
                                    
                    lErro = Comando_ExecutarPos(alComando(3), "UPDATE TRVVouchers SET NumIntDocNVL = ?", alComando(0), lNumIntDocOCR)
                    If lErro <> AD_SQL_SUCESSO Then gError 192766
    
                    'Se for inativação de cartão tem que gerar o NVL para a comissão também
                    If bNVLCartao And giVersaoTRV < TRV_VERSAO_COMISSIONAMENTO Then
                    
                        dValorComissao = 0
                        
                         'Verifica se o título a receber foi Faturado pelo Corporator
                        lErro = Comando_Executar(alComando(4), "SELECT NumIntDocNFPagComi,ValorComissao FROM TitulosRecTRV WHERE NumIntDocTitRec = ?", _
                                    lNumIntComi, dValorComissao, lNumIntDocDestino)
                        If lErro <> AD_SQL_SUCESSO Then gError 196270
                    
                        'Busca Primeiro
                        lErro = Comando_BuscarPrimeiro(alComando(4))
                        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196271
                        
                        If lErro = AD_SQL_SEM_DADOS Then
                        
                            'buscar a fatura como NFPagar aberto
                            lErro = Comando_Executar(alComando(5), "SELECT  NumIntDoc, ValorTotal FROM NFsPag WHERE FilialEmpresa = ? AND NumNotaFiscal = ? AND Status <> ?", _
                                 lNumIntComi, dValorComissao, FILIAL_MATRIZ, lNumFat, STATUS_EXCLUIDO)
                            If lErro <> AD_SQL_SUCESSO Then gError 196272
                            
                            'Busca o primeiro
                            lErro = Comando_BuscarProximo(alComando(5))
                            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196273
                        
                            If lErro <> AD_SQL_SUCESSO Then
                            
                                'buscar a fatura como titulo a Pagar baixado
                                lErro = Comando_Executar(alComando(6), "SELECT  NumIntDoc, ValorTotal FROM NFsPagBaixadas WHERE FilialEmpresa = ? AND NumNotaFiscal = ? AND Status <> ? ", _
                                     lNumIntComi, dValorComissao, FILIAL_MATRIZ, lNumFat, STATUS_EXCLUIDO)
                                If lErro <> AD_SQL_SUCESSO Then gError 196274
                                
                                'Busca o primeiro
                                lErro = Comando_BuscarProximo(alComando(6))
                                If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196275
                                
                            End If
    
                        End If
                        
                        'Se achou o NFsPag
                        If lErro = AD_SQL_SUCESSO Then
                        
                            'Le as comissões associadas a esse item de fatura que não foram geradas
                            lErro = Comando_Executar(alComando(7), "SELECT C1.ValComi FROM CoinfoComissao AS C1 WHERE NumVou = ? AND Serie = ? AND TipVou = ? AND NumIntDocCorporator = ? ORDER BY C1.NumIntArq DESC, C1.NumRegArqTexto DESC", dValorComissao, lNumVou, sSerie, TRV_TIPODOC_VOU_TEXTO, lNumIntComi)
                            If lErro <> AD_SQL_SUCESSO Then gError 196278
                            
                            'Busca a primeira
                            lErro = Comando_BuscarProximo(alComando(7))
                            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196279
                        
                        End If
        
                        If dValorComissao <> 0 Or dValorNVL <> 0 Then
                            
                            Set objOcorrencia = New ClassTRVOcorrencias
                            Set objOcorrenciaDet = New ClassTRVOcorrenciaDet
                            
                            If bImportacao Then
                                objOcorrencia.dtDataEmissao = dtDataNVL
                            Else
                                objOcorrencia.dtDataEmissao = gdtDataAtual
                            End If
                            
                            If Not bComissaoCorp Then
                                objOcorrencia.dValorTotal = dValorNVL
                            Else
                                objOcorrencia.dValorTotal = dValorComissao
                            End If
                            objOcorrencia.iFilialCliente = FILIAL_MATRIZ
                            objOcorrencia.iFormaPagto = FORMAPAGTO_TRV_OCR_FAT
                            objOcorrencia.iOrigem = INATIVACAO_AUTOMATICA_CODIGO
                            objOcorrencia.iStatus = STATUS_TRV_OCR_LIBERADO
                            objOcorrencia.lCliente = objTRVVouchers.lCliente
                            
                            lErro = CF("Config_ObterAutomatico_EmTrans", "FATConfig", "NUM_PROX_TRVOCORRENCIAS", "TRVOcorrencias", "Codigo", lCodigo)
                            If lErro <> SUCESSO Then gError 196276
                    
                            objOcorrencia.lCodigo = lCodigo
                            objOcorrencia.lNumVou = lNumVou
                            objOcorrencia.sHistorico = "Reembolso de comissão de cartão de crédito número " & CStr(lNumFat) & ", Filial Empresa " & CStr(iFilialEmpresa) & "."
                            objOcorrencia.sSerie = sSerie
                            objOcorrencia.sTipoDoc = sTipVou
                            objOcorrencia.sObservacao = ""
                            
                            objOcorrenciaDet.iTipo = INATIVACAO_AUTOMATICA_TIPO_NVL_CODIGO
                            objOcorrenciaDet.iSeq = 1
                            
                            objOcorrenciaDet.dValor = objOcorrencia.dValorTotal
                            
                            objOcorrencia.colDetalhamento.Add objOcorrenciaDet
                            
                            If bImportacao Then
                                lErro = TRVOcorrencias_Grava_EmTrans(objOcorrencia, False)
                            Else
                                If bComissaoCorp Then
                                    lErro = TRVOcorrencias_Grava_EmTrans(objOcorrencia)
                                End If
                            End If
                            If lErro <> SUCESSO Then gError 196277
                            
                            lNumIntDocOCR = objOcorrencia.lNumIntDoc
                            
                        End If
                    End If
                    
                'Se não está criando o NVL e for voucher (voucher excluído) => Estorna as comissões
                Else
                
                    If sTipoDoc = TRV_TIPODOC_VOU_TEXTO Then
                    
                        sTipoDocAux = objTRVVouchers.sTipoDoc
                        objTRVVouchers.sTipoDoc = sTipoDoc
                        
                        If dValorBruto <> 0 And iStatus <> STATUS_TRV_VOU_CANCELADO And lNumIntDocDestino = 0 Then
                        
                            'Cancelou o voucher sem gerar o NVL
                            lErro = TRVVou_Gera_Comis(objTRVVouchers, -dValorBruto, -dValorBaseComis, TRV_TIPO_VALOR_BASE_BRU, Date, "Cancelamento de voucher não faturado.", TRV_TIPO_TRATAMENTO_COMI_VOU_VLR_ALTERADO)
                            objTRVVouchers.sTipoDoc = sTipoDocAux
                            If lErro <> SUCESSO Then gError 196277
                            
                        End If
                        
                    End If
                
                End If
                
                'Se não foi forçado (não existe documento associado) e tem que marcar como cancelado, exceto se já está
                'Marca o item como cancelado
                If bMarcarCancelado And iStatus <> STATUS_TRV_VOU_CANCELADO Then
                    lErro = Comando_ExecutarPos(alComando(1), "UPDATE TRVVouchers SET Status = ?, DataCanc  = ?, HoraCanc = ?, UsuarioCanc = ?", alComando(0), STATUS_TRV_VOU_CANCELADO, Date, CDbl(Time), gsUsuario)
                    If lErro <> AD_SQL_SUCESSO Then gError 190846
                End If
                
            End If
        
        End If
        
        'Busca Próximo
        lLeituraVou = Comando_BuscarProximo(alComando(0))
        If lLeituraVou <> AD_SQL_SUCESSO And lLeituraVou <> AD_SQL_SEM_DADOS Then gError 192761
    
        'Se o cancelamento é de um voucher pela tela (feito diretamente no Corporator)
        If objTRVVouchers.sTipoDoc = TRV_TIPODOC_VOU_TEXTO Then
            objVouExp.sSerie = objTRVVouchers.sSerie
            objVouExp.sTipVou = objTRVVouchers.sTipVou
            objVouExp.lNumVou = objTRVVouchers.lNumVou
            objVouExp.lCliente = lClienteVou
            objVouExp.dtDataCanc = Date
            objVouExp.iTransacao = TRV_EXPORT_VOU_TRANS_CANC_VOU
            lErro = TRVVouExp_Insere(alComando(8), alComando(9), alComando(10), alComando(11), alComando(12), alComando(13), objVouExp)
            If lErro <> SUCESSO Then gError 200195
        End If
        
    Loop
    
    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVVouchers_Cancela = SUCESSO

    Exit Function

Erro_TRVVouchers_Cancela:

    TRVVouchers_Cancela = gErr

    Select Case gErr

        Case 190846, 192766
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVVOUCHERS", gErr)

        Case 190848
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 190849, 190850, 192761
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVVOUCHERS", gErr)

        Case 190852
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVVOUCHERS", gErr)

        Case 190853
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_TRVVOUCHERS", gErr)
            
        Case 192760
            Call Rotina_Erro(vbOKOnly, "ERRO_VOUCHER_JA_CANCELADO", gErr)
            
        Case 192762, 192763
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TITULOSRECBAIXADOS", gErr)
            
        Case 192764, 192765, 192823, 192824, 200195
        
        Case 196270, 196271
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TITULOSRECTRV", gErr)
        
        Case 196272, 196273
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_NFSPAG", gErr)
        
        Case 196274, 196275
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_NFSPAGBAIXADAS", gErr)
            
        Case 196276, 196277

        Case 196278, 196279
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_COINFOCOMISSAO", gErr)

        Case 200419
            Call Rotina_Erro(vbOKOnly, "ERRO_USE_SW_CANC_VOU_NAO_FAT", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 190847)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Public Function TRVFaturamento_Gera(ByVal objFaturamento As ClassTRVFaturamento, ByVal colArquivosHtml As Collection) As Long

Dim lErro As Long
Dim lTransacao As Long
Dim alComando(0 To 45) As Long
Dim iIndice As Integer
Dim colParcelas As New Collection
Dim lFatIni As Long
Dim lFatFim As Long
Dim colNFsPag As New Collection

On Error GoTo Erro_TRVFaturamento_Gera

    'Abertura de transação
    lTransacao = Transacao_Abrir()
    If lTransacao = 0 Then gError 190986
        
    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 190987
    Next
    
'    'desativa os locks dos comandos a seguir
'    lErro = Conexao_DesativarLocks(DESATIVAR_LOCKS)
'    If lErro <> SUCESSO Then gError 190988

    lErro = TRVFaturamento_Gera_EmTrans(alComando, objFaturamento, colParcelas, colArquivosHtml, lFatIni, lFatFim, colNFsPag)
    If lErro <> SUCESSO Then gError 190988
    
'    'reativa os locks
'    lErro = Conexao_DesativarLocks(REATIVAR_LOCKS)
'    If lErro <> SUCESSO Then gError 190988
    
    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next
    
    'Confirma a transação
    lErro = Transacao_Commit()
    If lErro <> AD_SQL_SUCESSO Then gError 190989
  
    Call Rotina_Aviso(vbOKOnly, "AVISO_FAT_TRV_SUCESSO", CStr(lFatIni), CStr(lFatFim))
  
    If objFaturamento.iEnviarPorEmail = MARCADO Then
        
        If colParcelas.Count > 0 Then
            Call TRVFaturamento_Envia_PorEmail(objFaturamento, colParcelas)
        End If
        
        If colNFsPag.Count > 0 Then
            Call TRVFaturamento_Envia_PorEmail_CP(objFaturamento, colNFsPag)
        End If
    End If
    
    If iSistemaIntegrado = SISTEMA_INTEGRADO_SIGAV Then
        Call CF("TRVTitulos_Exporta_Sigav")
    End If
    
    If iSistemaIntegrado = SISTEMA_INTEGRADO_KOGUT Then
        Call CF("TRVVouchers_Exporta_Sigav")
    End If
    
    TRVFaturamento_Gera = SUCESSO

    Exit Function

Erro_TRVFaturamento_Gera:

    TRVFaturamento_Gera = gErr

    Select Case gErr
        
        Case 190986
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)
        
        Case 190987
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_TRANSACAO", gErr)

        Case 190988, 192211

        Case 190989
            Call Rotina_Erro(vbOKOnly, "ERRO_COMMIT", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 190990)

    End Select
    
    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

'    'reativa os locks
'    Call Conexao_DesativarLocks(REATIVAR_LOCKS)

    'Desfaz Transação
    Call Transacao_Rollback

    Exit Function

End Function

Private Function TRVFaturamento_Gera_EmTrans(alComando() As Long, ByVal objFaturamento As ClassTRVFaturamento, ByVal colParcelas As Collection, ByVal colArquivosHtml As Collection, lFatIni As Long, lFatFim As Long, ByVal colNFsPag As Collection) As Long

Dim lErro As Long
Dim objTitRec As ClassTituloReceber
Dim objTitPag As ClassTituloPagar
Dim objNFsPag As ClassNFsPag
Dim objInfoFatura As ClassTRVFATInfoFatura
Dim objInfoVoucher As ClassTRVFATInfoVoucher
Dim iTipoDestino As Integer
Dim lNumIntDocDestino As Long
Dim lNumIntDocAux As Long
Dim dSaldo As Double
Dim lProxCR As Long
Dim sConteudo As String
Dim objTRVConfig As ClassTRVConfig
Dim colConfig As New Collection
Dim sArquivo As String
Dim sConteudoHtml As String
Dim iFaturaAtual As Integer
Dim objCliente As ClassCliente
Dim objForn As ClassFornecedor
Dim objFilialEmpresa As AdmFiliais
Dim objEndereco As ClassEndereco
Dim objFilialCliente As ClassFilialCliente
Dim objFilialForn As ClassFilialFornecedor
Dim bAchou As Boolean
Dim lLinha As Long, iStatusAux As Integer
Dim objParcelaRec As ClassParcelaReceber
Dim bAtualizaProxParcela As Boolean
Dim iParcela As Integer
Dim objTRVTitulosExp As ClassTRVTitulosExp
Dim sModeloCP As String
Dim objVouAporte As ClassTRVVoucherAporte
Dim objOCRAporte As ClassTRVOcorrenciaAporte
Dim objFatAporte As ClassTRVFatAporte
Dim objFaturaAporte As ClassTRVFaturaAporte
Dim colParcRecDataVencReal As New Collection
Dim objFrmAguarde As New ClassFrmAguarde
Dim objFrmAguardeTela As New FrmAguarde
Dim sItem As String
Dim objVouExp As ClassTRVVouExp
Dim sTipoDoc As String
Dim colTipos As Collection
Dim vValor As Variant
Dim colCampos As Collection
Dim colSaida As Collection
Dim objTRVTitulos As ClassTRVTitulos
Dim dValorAux As Double
Dim sDocAux As String
Dim iCartaoAux As Integer
Dim lNumFatAux As Long
Dim objOCR As ClassTRVOcorrencias
Dim iIndiceLib As Integer
Dim sTipoDocLib As String
Dim iNumFatMarcadas As Integer, iTipoLiberacao As Integer, dPercAporteCred As Double
Dim bArq1Aberto As Boolean, bGeraLog As Boolean, sDirLog As String, bSoOCR As Boolean
Dim bLiberaCMC As Boolean, lRepresentante As Long

On Error GoTo Erro_TRVFaturamento_Gera_EmTrans

    bArq1Aberto = False

    lErro = CF("TRVConfig_Le", TRVCONFIG_GERA_LOG, EMPRESA_TODA, sConteudo)
    If lErro <> SUCESSO Then gError 192082
    
    If StrParaInt(sConteudo) = MARCADO Then
        bGeraLog = True
    
        lErro = CF("TRVConfig_Le", TRVCONFIG_DIR_LOG, EMPRESA_TODA, sDirLog)
        If lErro <> SUCESSO Then gError 192082
    
        Open sDirLog & "FAT_" & gsUsuario & "_" & Format(Date, "yyyymmdd") & "_" & Format(Now, "hhmmss") & ".txt" For Output As #1
        bArq1Aberto = True
    Else
        bGeraLog = False
    End If
       
If bGeraLog Then Print #1, "1 - INICIANDO O PROCESSO " & CStr(Now)
        
    Set objTRVConfig = New ClassTRVConfig
    
    objTRVConfig.sCodigo = TRVCONFIG_PROX_NUM_TITREC
        
    iNumFatMarcadas = 0
    For Each objInfoFatura In objFaturamento.colInfoFaturas
        If objInfoFatura.iMarcado = MARCADO Then
            iNumFatMarcadas = iNumFatMarcadas + 1
        End If
    Next
        
    lErro = CF("TRVConfig_Le", TRVCONFIG_DIRETORIO_MODELO_FAT_HTML_CARTAO, EMPRESA_TODA, sModeloCP)
    If lErro <> SUCESSO Then gError 192082

If bGeraLog Then Print #1, "2 - INICIANDO O PROCESSO " & CStr(Now)

    lErro = CF("TRVConfig_Le_Lockado", alComando(6), TRVCONFIG_PROX_NUM_TITREC, EMPRESA_TODA, sConteudo)
    If lErro <> SUCESSO Then gError 192082
    
If bGeraLog Then Print #1, "3 - INICIANDO O PROCESSO " & CStr(Now)
    
    lProxCR = StrParaLong(sConteudo)
    lFatIni = lProxCR
    lFatFim = lProxCR + iNumFatMarcadas - 1
   
    objTRVConfig.sConteudo = CStr(lFatFim + 1)
    
    lErro = CF("TRVConfig_Grava_Lockado", alComando(6), alComando(7), objTRVConfig)
    If lErro <> SUCESSO Then gError 192084
    
    'desativa os locks dos comandos a seguir
    lErro = Conexao_DesativarLocks(DESATIVAR_LOCKS)
    If lErro <> SUCESSO Then gError 192084
    
If bGeraLog Then Print #1, "4 - INICIANDO O PROCESSO " & CStr(Now)
    
    objFrmAguarde.iTotalItens = iNumFatMarcadas
    Call objFrmAguardeTela.Inicializa_Progressao(objFrmAguarde)
    
If bGeraLog Then Print #1, "5 - OBTENDO OS DADOS PARA O HTML " & CStr(Now)
    
    iFaturaAtual = 0
    For Each objInfoFatura In objFaturamento.colInfoFaturas
    
        bLiberaCMC = False
       
        Set objInfoFatura.colFatAporte = New Collection
    
        bAtualizaProxParcela = True
    
        iFaturaAtual = iFaturaAtual + 1
        
If bGeraLog Then Print #1, "5." & CStr(iFaturaAtual) & ".01 - TRATANDO FATURA " & CStr(iFaturaAtual) & " " & CStr(Now)
    
        If objInfoFatura.iMarcado = MARCADO Then
        
            objFaturamento.iIndiceFaturaAtual = iFaturaAtual
            
            'Tem que ler as informações de cliente, filial e endereço e preencher na coleção
            'do objFaturamento e informar o indice no objInfoFatura, isso para otimizar
            'o código de geração do arquivo html que precisará dessas informações
            'objInfoFatura.lLinhaFatCliente
            'objInfoFatura.lLinhaFatEnderecoCli
            'objInfoFatura.lLinhaFatEnderecoEmp
            'objInfoFatura.lLinhaFatFilial
            'objInfoFatura.lLinhaFatFilialCliente
            
If bGeraLog Then Print #1, "5." & CStr(iFaturaAtual) & ".02 - PROCURANDO O CLIENTE NA COLEÇÃO " & CStr(iFaturaAtual) & " " & CStr(Now)
            
            bAchou = False
            lLinha = 0
            For Each objCliente In objFaturamento.colFatClientes
                lLinha = lLinha + 1
                If objCliente.lCodigo = objInfoFatura.lCliente Then
                    objInfoFatura.lLinhaFatCliente = lLinha
                    objInfoFatura.lLinhaFatFilialCliente = lLinha
                    Set objFilialCliente = objFaturamento.colFatFiliaisCliente.Item(lLinha)
                    lLinha = 0
                    For Each objEndereco In objFaturamento.colFatEnderecos
                        lLinha = lLinha + 1
                        If objEndereco.lCodigo = objFilialCliente.lEndereco Then
                            objInfoFatura.lLinhaFatEnderecoCli = lLinha
                            Exit For
                        End If
                    Next
                    bAchou = True
                    Exit For
                End If
            Next
            If Not bAchou Then
            
                Set objCliente = New ClassCliente
                Set objFilialCliente = New ClassFilialCliente
                Set objEndereco = New ClassEndereco
            
                objCliente.lCodigo = objInfoFatura.lCliente
                objFilialCliente.lCodCliente = objInfoFatura.lCliente
                objFilialCliente.iCodFilial = FILIAL_MATRIZ
                
If bGeraLog Then Print #1, "5." & CStr(iFaturaAtual) & ".03 - LENDO O CLIENTE " & CStr(iFaturaAtual) & " " & CStr(Now)
                
                lErro = CF("Cliente_Le", objCliente, alComando(14), alComando(15))
                If lErro <> SUCESSO And lErro <> 12293 Then gError 192197
                
                If lErro = SUCESSO Then
                
If bGeraLog Then Print #1, "5." & CStr(iFaturaAtual) & ".04 - LENDO O CLIENTE - DADOS CUSTOMIZADOS " & CStr(iFaturaAtual) & " " & CStr(Now)
                
                    lErro = CF("Cliente_Le_Customizado", objCliente, False, alComando(43), alComando(44), alComando(45))
                    If lErro <> SUCESSO Then gError 192199
                
If bGeraLog Then Print #1, "5." & CStr(iFaturaAtual) & ".05 - LENDO A FILIAL DO CLIENTE " & CStr(iFaturaAtual) & " " & CStr(Now)
                
                    lErro = CF("FilialCliente_Le", objFilialCliente, alComando(16))
                    If lErro <> SUCESSO And lErro <> 12567 Then gError 192199
                    
If bGeraLog Then Print #1, "5." & CStr(iFaturaAtual) & ".06 - TODAS LEITURAS DO CLIENTE FEITAS " & CStr(iFaturaAtual) & " " & CStr(Now)

                    If objCliente.lCodigo = objCliente.objInfoUsu.lCodCorrentista Then
                        bLiberaCMC = True
                    End If
                    
                Else
                    
                    Set objForn = New ClassFornecedor
                    Set objFilialForn = New ClassFilialFornecedor
                    
                    objForn.lCodigo = objInfoFatura.lCliente
                    objFilialForn.lCodFornecedor = objInfoFatura.lCliente
                    objFilialForn.iCodFilial = FILIAL_MATRIZ

If bGeraLog Then Print #1, "5." & CStr(iFaturaAtual) & ".07 - LENDO O FORNECEDOR " & CStr(iFaturaAtual) & " " & CStr(Now)
                    
                    lErro = CF("Fornecedor_Le", objForn)
                    If lErro <> SUCESSO And lErro <> 12729 Then gError 192197

If bGeraLog Then Print #1, "5." & CStr(iFaturaAtual) & ".08 - LENDO A FILIAL DO FORNECEDOR " & CStr(iFaturaAtual) & " " & CStr(Now)

                    lErro = CF("FilialFornecedor_Le", objFilialForn)
                    If lErro <> SUCESSO And lErro <> 12929 Then gError 192199
                    
If bGeraLog Then Print #1, "5." & CStr(iFaturaAtual) & ".09 - TODAS LEITURAS DO FORNECEDOR FEITAS " & CStr(iFaturaAtual) & " " & CStr(Now)
                    
                    objCliente.sNomeReduzido = objForn.sNomeReduzido
                    objCliente.sRazaoSocial = objForn.sRazaoSocial
                    
                    objFilialCliente.lEndereco = objFilialForn.lEndereco
                    objFilialCliente.sCgc = objFilialForn.sCgc
                    objFilialCliente.sInscricaoEstadual = objFilialForn.sInscricaoEstadual
                    objFilialCliente.sInscricaoMunicipal = objFilialForn.sInscricaoMunicipal
                    objFilialCliente.sNome = objFilialForn.sNome

                End If

                objFaturamento.colFatClientes.Add objCliente
                objFaturamento.colFatFiliaisCliente.Add objFilialCliente
                
                objInfoFatura.lLinhaFatCliente = objFaturamento.colFatClientes.Count
                objInfoFatura.lLinhaFatFilialCliente = objFaturamento.colFatFiliaisCliente.Count
                
                objEndereco.lCodigo = objFilialCliente.lEndereco
                
If bGeraLog Then Print #1, "5." & CStr(iFaturaAtual) & ".10 - LENDO O ENDERECO " & CStr(iFaturaAtual) & " " & CStr(Now)
                
                lErro = CF("Endereco_Le", objEndereco, alComando(17))
                If lErro <> SUCESSO Then gError 192200
                
If bGeraLog Then Print #1, "5." & CStr(iFaturaAtual) & ".11 - ENDERECO LIDO " & CStr(iFaturaAtual) & " " & CStr(Now)
                
                objFaturamento.colFatEnderecos.Add objEndereco
                
                objInfoFatura.lLinhaFatEnderecoCli = objFaturamento.colFatEnderecos.Count
            
            End If
            
            bAchou = False
            lLinha = 0
            For Each objFilialEmpresa In objFaturamento.colFatFiliais
                lLinha = lLinha + 1
                If objFilialEmpresa.iCodFilial = objInfoFatura.iFilialEmpresa Then
                    objInfoFatura.lLinhaFatFilial = lLinha
                    lLinha = 0
                    For Each objEndereco In objFaturamento.colFatEnderecos
                        lLinha = lLinha + 1
                        If objEndereco.lCodigo = objFilialEmpresa.objEndereco.lCodigo Then
                            objInfoFatura.lLinhaFatEnderecoEmp = lLinha
                            Exit For
                        End If
                    Next
                    bAchou = True
                    Exit For
                End If
            Next
            If Not bAchou Then
            
                Set objFilialEmpresa = New AdmFiliais
            
                objFilialEmpresa.iCodFilial = objInfoFatura.iFilialEmpresa
                
If bGeraLog Then Print #1, "5." & CStr(iFaturaAtual) & ".12 - LENDO A FILIAL EMPRESA " & CStr(iFaturaAtual) & " " & CStr(Now)
                
                lErro = CF("FilialEmpresa_Le", objFilialEmpresa)
                If lErro <> SUCESSO Then gError 192198

If bGeraLog Then Print #1, "5." & CStr(iFaturaAtual) & ".13 - FILIAL EMPRESA LIDA " & CStr(iFaturaAtual) & " " & CStr(Now)

                objFaturamento.colFatFiliais.Add objFilialEmpresa
                
                objInfoFatura.lLinhaFatFilial = objFaturamento.colFatFiliais.Count
            
                objFaturamento.colFatEnderecos.Add objFilialEmpresa.objEndereco
                
                objInfoFatura.lLinhaFatEnderecoEmp = objFaturamento.colFatEnderecos.Count
            
            End If
            
If bGeraLog Then Print #1, "5." & CStr(iFaturaAtual) & ".14 - FINALIZOU AS LEITURAS " & CStr(iFaturaAtual) & " " & CStr(Now)
            
If bGeraLog Then Print #1, "5." & CStr(iFaturaAtual) & ".15 - CRIANDO O TIPODOC " & CStr(iFaturaAtual) & " " & CStr(Now)
            
            sTipoDoc = ""
            bSoOCR = True
            Set colTipos = New Collection
            For Each objInfoVoucher In objInfoFatura.colInfoVouchers
                If objInfoVoucher.iMarcado = MARCADO Then
                    bAchou = False
                    For Each objTRVTitulos In colTipos
                        If objInfoVoucher.sTipoDoc = objTRVTitulos.sTipoDoc Then
                            bAchou = True
                            Exit For
                        End If
                    Next
                    If Not bAchou Then
                        Set objTRVTitulos = New ClassTRVTitulos
                        objTRVTitulos.sTipoDoc = objInfoVoucher.sTipoDoc
                        colTipos.Add objTRVTitulos
                    End If
                    If objInfoVoucher.sTipoDoc <> TRV_TIPODOC_OCR_TEXTO And objInfoVoucher.sTipoDoc <> TRV_TIPODOC_NVL_TEXTO Then
                        bSoOCR = False
                    End If
                End If
            Next
            Set colCampos = New Collection
            Set colSaida = New Collection
            
            colCampos.Add "sTipoDoc"
            
            lErro = Ordena_Colecao(colTipos, colSaida, colCampos)
            If lErro <> SUCESSO Then gError 200226
            
            For Each objTRVTitulos In colTipos
                If Len(Trim(sTipoDoc)) > 0 Then sTipoDoc = sTipoDoc & SEPARADOR
                sTipoDoc = sTipoDoc & objTRVTitulos.sTipoDoc
            Next
            
If bGeraLog Then Print #1, "5." & CStr(iFaturaAtual) & ".16 - TIPODOC CRIADO " & CStr(iFaturaAtual) & " " & CStr(Now)

            If objInfoFatura.dValor > 0 Then
                
                Set objTitRec = New ClassTituloReceber
                
                iTipoDestino = TRV_TIPO_DOC_DESTINO_TITREC
                
If bGeraLog Then Print #1, "5." & CStr(iFaturaAtual) & ".17 - GERANDO O A RECEBER " & CStr(iFaturaAtual) & " " & CStr(Now)
                
                lErro = TRVFaturamento_Gera_TitRec(alComando(21), alComando(22), alComando(23), alComando(24), alComando(25), alComando(26), alComando(27), alComando(28), alComando(29), alComando(30), objInfoFatura, objTitRec, lProxCR, colParcRecDataVencReal)
                If lErro <> SUCESSO Then gError 192001
                
If bGeraLog Then Print #1, "5." & CStr(iFaturaAtual) & ".18 - A RECEBER GERADO " & CStr(iFaturaAtual) & " " & CStr(Now)
                
                For Each objParcelaRec In objTitRec.colParcelaReceber
                    colParcelas.Add objParcelaRec
                Next
                
                objInfoFatura.lNumeroFaturaReal = objTitRec.lNumTitulo
                
                lProxCR = lProxCR + 1
                
                lNumIntDocDestino = objTitRec.lNumIntDoc
    
            Else
            
                'Ocorrências
                'If objInfoFatura.iPF = MARCADO And bSoOCR Then
                If bSoOCR Then
            
                    Set objTitPag = New ClassTituloPagar
                    
                    iTipoDestino = TRV_TIPO_DOC_DESTINO_TITPAG
                    
If bGeraLog Then Print #1, "5." & CStr(iFaturaAtual) & ".19 - GERANDO O A PAGAR " & CStr(iFaturaAtual) & " " & CStr(Now)
                    
                    lErro = TRVFaturamento_Gera_TitPag(objInfoFatura, objTitPag, lProxCR, objCliente, objFaturamento.colFatEnderecos.Item(objInfoFatura.lLinhaFatEnderecoCli), colParcRecDataVencReal)
                    If lErro <> SUCESSO Then gError 192002
                    
If bGeraLog Then Print #1, "5." & CStr(iFaturaAtual) & ".20 - A PAGAR GERADO " & CStr(iFaturaAtual) & " " & CStr(Now)
                    
                    objInfoFatura.lNumeroFaturaReal = objTitPag.lNumTitulo
                    
                    lProxCR = lProxCR + 1
                    
                    lNumIntDocDestino = objTitPag.lNumIntDoc
                
                'Comissão
                Else
                
                    Set objNFsPag = New ClassNFsPag
                    
                    iTipoDestino = TRV_TIPO_DOC_DESTINO_NFSPAG
                    
If bGeraLog Then Print #1, "5." & CStr(iFaturaAtual) & ".21 - GERANDO O A NFPAGAR " & CStr(iFaturaAtual) & " " & CStr(Now)
                    
                    lErro = TRVFaturamento_Gera_NFPag(objInfoFatura, objNFsPag, lProxCR)
                    If lErro <> SUCESSO Then gError 194202
                    
If bGeraLog Then Print #1, "5." & CStr(iFaturaAtual) & ".22 - A NFPAGAR GERADA " & CStr(iFaturaAtual) & " " & CStr(Now)
                    
                    objInfoFatura.lNumeroFaturaReal = objNFsPag.lNumNotaFiscal
                    
                    colNFsPag.Add objNFsPag
                    
                    lProxCR = lProxCR + 1
                    
                    lNumIntDocDestino = objNFsPag.lNumIntDoc
                    
                    If objInfoFatura.iTipoDoc = TRV_TIPODOC_FAT_OVER Then
                    
If bGeraLog Then Print #1, "5." & CStr(iFaturaAtual) & ".23 - GERANDO O XLS DO OVER " & CStr(iFaturaAtual) & " " & CStr(Now)
                    
                        lErro = TRVFaturamento_Gera_Excel(objInfoFatura)
                        If lErro <> SUCESSO Then gError 194202
                    
If bGeraLog Then Print #1, "5." & CStr(iFaturaAtual) & ".24 - XLS DO OVER GERADO " & CStr(iFaturaAtual) & " " & CStr(Now)
                    
                    End If
                
                End If
            
            End If
            
If bGeraLog Then Print #1, "5." & CStr(iFaturaAtual) & ".25 - GRAVANDO O TRVTITULOSEXP " & CStr(iFaturaAtual) & " " & CStr(Now)
            
            Set objTRVTitulosExp = New ClassTRVTitulosExp
            
            objTRVTitulosExp.iExcluido = DESMARCADO
            objTRVTitulosExp.iExportado = DESMARCADO
            objTRVTitulosExp.iTipoDocOrigem = iTipoDestino
            objTRVTitulosExp.lNumIntDocOrigem = lNumIntDocDestino
            objTRVTitulosExp.lNumTitulo = objInfoFatura.lNumeroFaturaReal
            objTRVTitulosExp.iTemQueContabilizar = MARCADO
            If objInfoFatura.iTipoDoc = TRV_TIPODOC_FAT_OVER Then objTRVTitulosExp.iTemQueContabilizar = DESMARCADO
            objTRVTitulosExp.dValorAporte = objInfoFatura.dValorAporte
            objTRVTitulosExp.dValorAporteCred = objInfoFatura.dValorAporteCred
            objTRVTitulosExp.dValorComissao = objInfoFatura.dValorComissao
            objTRVTitulosExp.dValorCreditos = objInfoFatura.dValorCreditos
            objTRVTitulosExp.dValorDebitos = objInfoFatura.dValorDebitos
            objTRVTitulosExp.dValorDeducoes = objInfoFatura.dValorDeducoes
            objTRVTitulosExp.dValorTarifa = objInfoFatura.dValorTarifa
            
            For Each objFaturaAporte In objInfoFatura.colFatAporteCred
                objTRVTitulosExp.colFatAporteCred.Add objFaturaAporte
            Next
            
            lErro = CF("TRVTitulosExp_Insere", objTRVTitulosExp, alComando(18), alComando(19))
            If lErro <> SUCESSO Then gError 196240
            
If bGeraLog Then Print #1, "5." & CStr(iFaturaAtual) & ".26 - TRVTITULOSEXP GRAVADO " & CStr(iFaturaAtual) & " " & CStr(Now)
            
If bGeraLog Then Print #1, "5." & CStr(iFaturaAtual) & ".27 - GRAVANDO TRVTITULOS " & CStr(iFaturaAtual) & " " & CStr(Now)
            
            Set objTRVTitulos = New ClassTRVTitulos

            objTRVTitulos.iTipoDocOrigem = iTipoDestino
            objTRVTitulos.lNumIntDocOrigem = lNumIntDocDestino
            objTRVTitulos.sTipoDoc = sTipoDoc
            
            lErro = CF("TRVTitulos_Insere", objTRVTitulos, alComando(41))
            If lErro <> SUCESSO Then gError 196240
            
If bGeraLog Then Print #1, "5." & CStr(iFaturaAtual) & ".28 - TRVTITULOS GRAVADO " & CStr(iFaturaAtual) & " " & CStr(Now)
            
            If objInfoFatura.dValor - objInfoFatura.dValorCreditos - objInfoFatura.dValorDebitos > 0 Then
                dPercAporteCred = objInfoFatura.dValorAporteCred / (objInfoFatura.dValor - objInfoFatura.dValorCreditos - objInfoFatura.dValorDebitos)
            Else
                dPercAporteCred = 0
            End If
            
If bGeraLog Then Print #1, "5." & CStr(iFaturaAtual) & ".29 - INÍCIO DO PROCESSAMENTO DOS VOUCHER " & CStr(iFaturaAtual) & " " & CStr(Now)
            
            For Each objInfoVoucher In objInfoFatura.colInfoVouchers
            
                If objInfoVoucher.iMarcado = MARCADO Then
            
                    'Se é um voucher ou uma comissão
                    If objInfoVoucher.sTipoDoc = TRV_TIPODOC_VOU_TEXTO Or ((objInfoVoucher.sTipoDoc = TRV_TIPODOC_CMR_TEXTO Or objInfoVoucher.sTipoDoc = TRV_TIPODOC_CMC_TEXTO) And giVersaoTRV < TRV_VERSAO_COMISSIONAMENTO) Then
    
                        lErro = Comando_ExecutarPos(alComando(0), "SELECT Recnsica, Valor, Cartao, NumFatCoinfo, Status, Representante FROM TRVVouchers WHERE NumVou= ? AND TipoDoc = ? AND Serie = ? AND TipVou = ? ", _
                                    0, lNumIntDocAux, dValorAux, iCartaoAux, lNumFatAux, iStatusAux, lRepresentante, objInfoVoucher.lNumVou, objInfoVoucher.sTipoDoc, objInfoVoucher.sSerie, objInfoVoucher.sTipoVou)
                        If lErro <> AD_SQL_SUCESSO Then gError 192003
                    
                        'Busca Primeiro
                        lErro = Comando_BuscarPrimeiro(alComando(0))
                        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192004
                        
                        If lErro = AD_SQL_SEM_DADOS Then gError 192016
                                            
                        If Abs(dValorAux - objInfoVoucher.dValor) > DELTA_VALORMONETARIO Then
                            sDocAux = "VOU " & objInfoVoucher.sTipoVou & " " & objInfoVoucher.sSerie & " " & CStr(objInfoVoucher.lNumVou) & " Vlr.Ant: " & Format(objInfoVoucher.dValor, "STANDARD") & " " & " Vlr.Atual: " & Format(dValorAux, "STANDARD")
                            gError 200382
                        End If
                         If iCartaoAux = MARCADO Then
                            sDocAux = "VOU " & objInfoVoucher.sTipoVou & " " & objInfoVoucher.sSerie & " " & CStr(objInfoVoucher.lNumVou) & " Cartão: Sim"
                            gError 200382
                        End If
                        If lNumFatAux <> 0 Then
                            sDocAux = "VOU " & objInfoVoucher.sTipoVou & " " & objInfoVoucher.sSerie & " " & CStr(objInfoVoucher.lNumVou) & " Fatura: " & CStr(lNumFatAux)
                            gError 200382
                        End If
                        If iStatusAux = STATUS_CANCELADO Then
                            sDocAux = "VOU " & objInfoVoucher.sTipoVou & " " & objInfoVoucher.sSerie & " " & CStr(objInfoVoucher.lNumVou) & " Cancelado: Sim"
                            gError 200382
                        End If
                        
                        lErro = Comando_ExecutarPos(alComando(1), "UPDATE TRVVouchers SET TipoDocDestino= ?, NumIntDocDestino=?, ValorAporte = ?, NumFatCoinfo = ?, ValorAporteCred = ? ", alComando(0), _
                        iTipoDestino, lNumIntDocDestino, objInfoVoucher.dValorAporte, objInfoFatura.lNumeroFaturaReal, Arredonda_Moeda(objInfoVoucher.dValor * dPercAporteCred))
                        If lErro <> AD_SQL_SUCESSO Then gError 192006
                        
                        If objInfoVoucher.sTipoDoc = TRV_TIPODOC_VOU_TEXTO Then
                            Set objVouExp = New ClassTRVVouExp
                            objVouExp.sSerie = objInfoVoucher.sSerie
                            objVouExp.sTipVou = objInfoVoucher.sTipoVou
                            objVouExp.lNumVou = objInfoVoucher.lNumVou
                            objVouExp.lNumFat = objInfoFatura.lNumeroFaturaReal
                            objVouExp.dtDataFat = objInfoFatura.dtDataEmissao
                            objVouExp.dValorFat = objInfoFatura.dValor
                            objVouExp.iTransacao = TRV_EXPORT_VOU_TRANS_FATURAMENTO
                            objVouExp.lCliente = objInfoFatura.lCliente
                            lErro = TRVVouExp_Insere(alComando(36), alComando(37), alComando(38), alComando(39), alComando(40), alComando(42), objVouExp)
                            If lErro <> SUCESSO Then gError 200196
                        End If
                        
                        'Se é um voucher e a versão é a partir da de comissionamento verifica se
                        'não tem que liberar o OVER (liberação na emissão)
                        If objInfoVoucher.sTipoDoc = TRV_TIPODOC_VOU_TEXTO And giVersaoTRV >= TRV_VERSAO_COMISSIONAMENTO Then
                        
                            sItem = String(255, 0)
                            
                            'Verifica o tipo de tratamento (Se o pagamento é na baixa ou na emissão)
                            lErro = Comando_Executar(alComando(33), "SELECT Item FROM FilialFornecedorCategorias WHERE Fornecedor = ? AND Filial = ? AND Categoria = ? ", sItem, objInfoVoucher.lCliVou, FILIAL_MATRIZ, "OVER")
                            If lErro <> AD_SQL_SUCESSO Then gError 182532
                            
                            'Busca a primeira
                            lErro = Comando_BuscarProximo(alComando(33))
                            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 182533
                            
                            For iIndiceLib = 1 To 4
                                
                                Select Case iIndiceLib
                                    Case 1
                                        sTipoDocLib = TRV_TIPODOC_OVER_TEXTO
                                    Case 2
                                        sTipoDocLib = TRV_TIPODOC_CMCC_TEXTO
                                    Case 3
                                        sTipoDocLib = TRV_TIPODOC_CMC_TEXTO
                                    Case 4
                                        sTipoDocLib = TRV_TIPODOC_CMR_TEXTO
                                End Select
                
                                'Se não for na baixa libera o over para pagamento, libera o CMCC e todas as comissões se o voucher estiver um a pagar e o CMR da TREVISA
                                If (sTipoDocLib = TRV_TIPODOC_OVER_TEXTO And InStr(1, UCase(sItem), "FATURAMENTO") <> 0) Or sTipoDocLib = TRV_TIPODOC_CMCC_TEXTO Or iTipoDestino <> TRV_TIPO_DOC_DESTINO_TITREC Or (bLiberaCMC And sTipoDocLib = TRV_TIPODOC_CMC_TEXTO) Or (lRepresentante = 146052 And sTipoDocLib = TRV_TIPODOC_CMR_TEXTO) Then
                                
                                    'Le as comissões over bloqueadas para esse voucher
'                                    lErro = Comando_ExecutarPos(alComando(34), "SELECT NumIntDoc FROM TRVVoucherInfo WHERE NumVou= ? AND NumIntDocDestino = ? AND TipoDoc = ? AND Serie = ? AND TipVou = ? AND Status <> ? ", _
'                                    0, lNumIntDocAux, objInfoVoucher.lNumVou, 0, sTipoDocLib, objInfoVoucher.sSerie, objInfoVoucher.sTipoVou, TRV_VOU_INFO_STATUS_LIBERADO)
                                    lErro = Comando_Executar(alComando(34), "SELECT NumIntDoc FROM TRVVoucherInfo WITH (NOLOCK) WHERE NumVou= ? AND NumIntDocDestino = ? AND TipoDoc = ? AND Serie = ? AND TipVou = ? AND Status <> ? ", _
                                    lNumIntDocAux, objInfoVoucher.lNumVou, 0, sTipoDocLib, objInfoVoucher.sSerie, objInfoVoucher.sTipoVou, TRV_VOU_INFO_STATUS_LIBERADO)
                                    If lErro <> AD_SQL_SUCESSO Then gError 196376
                                
                                    'Busca Primeiro
                                    lErro = Comando_BuscarPrimeiro(alComando(34))
                                    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196377
                            
                                    Do While lErro <> AD_SQL_SEM_DADOS
                                        
                                        Select Case iTipoDestino
                                            Case TRV_TIPO_DOC_DESTINO_TITPAG
                                                iTipoLiberacao = TRV_TIPO_LIBERACAO_COMISSAO_FAT_TITPAG
                                            Case TRV_TIPO_DOC_DESTINO_NFSPAG
                                                iTipoLiberacao = TRV_TIPO_LIBERACAO_COMISSAO_FAT_NFPAG
                                            Case Else
                                                iTipoLiberacao = TRV_TIPO_LIBERACAO_COMISSAO_FAT
                                        End Select
                                        
                                        'lErro = Comando_ExecutarPos(alComando(35), "UPDATE TRVVoucherInfo SET Status = ?, TipoLiberacao = ?, NumIntDocLiberacao = ? ", alComando(34), TRV_VOU_INFO_STATUS_LIBERADO, iTipoLiberacao, lNumIntDocDestino)
                                        lErro = Comando_Executar(alComando(35), "UPDATE TRVVoucherInfo SET Status = ?, TipoLiberacao = ?, NumIntDocLiberacao = ? WHERE NumIntDoc = ? ", TRV_VOU_INFO_STATUS_LIBERADO, iTipoLiberacao, lNumIntDocDestino, lNumIntDocAux)
                                        If lErro <> AD_SQL_SUCESSO Then gError 196379
                                    
                                        'Busca Próximo
                                        lErro = Comando_BuscarProximo(alComando(34))
                                        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196380
                                    
                                    Loop
                                    
                                End If
                                
                            Next
                            
                        End If
   
                        For Each objVouAporte In objInfoVoucher.colAportes
            
                            'Busca para ver se o aporte já teve a próxima parcela atualizada
                            bAchou = False
                            For Each objFatAporte In objInfoFatura.colFatAporte
                                If objFatAporte.lCodigo = objVouAporte.lCodigoAporte Then
                                    bAchou = True
                                    Exit For
                                End If
                            Next
                            If Not bAchou Then
                                
                                'Acerta a próxima parcela
                                lErro = TRVAportes_Acerta_ProxParcela(alComando(8), alComando(9), objVouAporte.lCodigoAporte, iParcela)
                                If lErro <> SUCESSO Then gError 192021
                                
                                Set objFatAporte = New ClassTRVFatAporte
                                
                                objFatAporte.lCodigo = objVouAporte.lCodigoAporte
                                objFatAporte.iProxParcela = iParcela
                                
                                objInfoFatura.colFatAporte.Add objFatAporte
                                
                                bAtualizaProxParcela = True
                            Else
                                bAtualizaProxParcela = False
                            End If
                            
                            objVouAporte.iParcelaAporte = objFatAporte.iProxParcela
                            objVouAporte.sSerie = objInfoVoucher.sSerie
                            objVouAporte.sTipVou = objInfoVoucher.sTipoVou
                            objVouAporte.lNumVou = objInfoVoucher.lNumVou
                                       
                            'Acerta o saldo do aporte
                            If objVouAporte.iMoedaAporte = MOEDA_REAL Then
                                lErro = TRVAportePagtoFat_Acerta_Saldo(alComando(4), alComando(5), alComando(12), alComando(13), objVouAporte.iTipoPagtoAporte, objVouAporte.lNumIntDocPagtoAporte, objVouAporte.dValorAporte)
                            Else
                                lErro = TRVAportePagtoFat_Acerta_Saldo(alComando(4), alComando(5), alComando(12), alComando(13), objVouAporte.iTipoPagtoAporte, objVouAporte.lNumIntDocPagtoAporte, objVouAporte.dValorAporteUSS)
                            End If
                            If lErro <> SUCESSO Then gError 192021
                            
                            lErro = Comando_Executar(alComando(10), "INSERT INTO TRVVoucherAporte( TipVou, Serie, NumVou, TipoPagtoAporte, " & _
                                    "NumIntDocPagtoAporte, CodigoAporte, ParcelaAporte, ValorAporte, ValorAporteUSS, MoedaAporte) VALUES (?,?,?,?,?,?,?,?,?,?)", _
                                    objVouAporte.sTipVou, objVouAporte.sSerie, objVouAporte.lNumVou, objVouAporte.iTipoPagtoAporte, _
                                    objVouAporte.lNumIntDocPagtoAporte, objVouAporte.lCodigoAporte, objVouAporte.iParcelaAporte, objVouAporte.dValorAporte, objVouAporte.dValorAporteUSS, objVouAporte.iMoedaAporte)
                            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196476
                        
                        Next
                        
                    'Quando é uma comissão faturada com a versão de comissionamento (CMC, CMR, CMCC e OVER)
                    ElseIf ((objInfoVoucher.sTipoDoc = TRV_TIPODOC_CMR_TEXTO Or objInfoVoucher.sTipoDoc = TRV_TIPODOC_CMC_TEXTO Or objInfoVoucher.sTipoDoc = TRV_TIPODOC_CMCC_TEXTO Or objInfoVoucher.sTipoDoc = TRV_TIPODOC_OVER_TEXTO) And giVersaoTRV >= TRV_VERSAO_COMISSIONAMENTO) Then
                    
                        lErro = Comando_ExecutarPos(alComando(31), "SELECT NumIntDoc, NumTitulo, Status FROM TRVVoucherInfo WHERE NumIntDoc = ? ", 0, lNumIntDocAux, lNumFatAux, iStatusAux, objInfoVoucher.lNumIntDoc)
                        If lErro <> AD_SQL_SUCESSO Then gError 196371
                    
                        'Busca Primeiro
                        lErro = Comando_BuscarPrimeiro(alComando(31))
                        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196372
                        
                        If lErro = AD_SQL_SEM_DADOS Then gError 196373
                        
                        If lNumFatAux <> 0 Then
                            sDocAux = objInfoVoucher.sTipoDoc & " " & objInfoVoucher.sTipoVou & " " & objInfoVoucher.sSerie & " " & CStr(objInfoVoucher.lNumVou) & " Fatura: " & CStr(lNumFatAux)
                            gError 200382
                        End If
                        If iStatusAux <> TRV_VOU_INFO_STATUS_LIBERADO Then
                            sDocAux = objInfoVoucher.sTipoDoc & " " & objInfoVoucher.sTipoVou & " " & objInfoVoucher.sSerie & " " & CStr(objInfoVoucher.lNumVou) & " Liberado: Não"
                            gError 200382
                        End If
                        
                        lErro = Comando_ExecutarPos(alComando(32), "UPDATE TRVVoucherInfo SET TipoDocDestino= ?, NumIntDocDestino=?, NumTitulo = ? ", alComando(31), _
                        iTipoDestino, lNumIntDocDestino, objInfoFatura.lNumeroFaturaReal)
                        If lErro <> AD_SQL_SUCESSO Then gError 196375
                    
                    'Caso seja uma ORC ou um NVL
                    Else
                    
                        lErro = Comando_ExecutarPos(alComando(2), "SELECT NumIntDoc, ValorTotal, NumTitulo, Status FROM TRVOcorrencias WHERE NumIntDoc= ? ", _
                                    0, lNumIntDocAux, dValorAux, lNumFatAux, iStatusAux, objInfoVoucher.lNumIntDoc)
                        If lErro <> AD_SQL_SUCESSO Then gError 192007
                    
                        'Busca Primeiro
                        lErro = Comando_BuscarPrimeiro(alComando(2))
                        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192008
                        
                        If lErro = AD_SQL_SEM_DADOS Then gError 192018
                        
                       If lNumFatAux <> 0 Then
                            sDocAux = objInfoVoucher.sTipoDoc & " " & CStr(objInfoVoucher.lNumero) & SEPARADOR & objInfoVoucher.sTipoVou & " " & objInfoVoucher.sSerie & " " & CStr(objInfoVoucher.lNumVou) & " Fatura: " & CStr(lNumFatAux)
                            gError 200382
                        End If
                        If iStatusAux <> STATUS_TRV_OCR_LIBERADO Then
                            sDocAux = objInfoVoucher.sTipoDoc & " " & CStr(objInfoVoucher.lNumero) & SEPARADOR & objInfoVoucher.sTipoVou & " " & objInfoVoucher.sSerie & " " & CStr(objInfoVoucher.lNumVou) & " Liberado: Não"
                            gError 200382
                        End If
                        If Abs(dValorAux - objInfoVoucher.dValor) > DELTA_VALORMONETARIO Then
                            sDocAux = objInfoVoucher.sTipoDoc & " " & CStr(objInfoVoucher.lNumero) & SEPARADOR & "VOU " & objInfoVoucher.sTipoVou & " " & objInfoVoucher.sSerie & " " & CStr(objInfoVoucher.lNumVou) & " Vlr.Ant: " & Format(objInfoVoucher.dValor, "STANDARD") & " " & " Vlr.Atual: " & Format(dValorAux, "STANDARD")
                            gError 200382
                        End If
                        
                        For Each objOCRAporte In objInfoVoucher.colAportes
                
                            'Acerta o saldo do aporte
                            If objOCRAporte.iMoedaAporte = MOEDA_REAL Then
                                lErro = TRVAportePagtoFat_Acerta_Saldo(alComando(4), alComando(5), alComando(12), alComando(13), objOCRAporte.iTipoPagtoAporte, objOCRAporte.lNumIntDocPagtoAporte, objOCRAporte.dValorAporte)
                            Else
                                lErro = TRVAportePagtoFat_Acerta_Saldo(alComando(4), alComando(5), alComando(12), alComando(13), objOCRAporte.iTipoPagtoAporte, objOCRAporte.lNumIntDocPagtoAporte, objOCRAporte.dValorAporteUSS)
                            End If
                            If lErro <> SUCESSO Then gError 192021
                            
                            lErro = Comando_Executar(alComando(11), "INSERT INTO TRVOcorrenciaAporte( NumIntDocOCR, TipoPagtoAporte, " & _
                                    "NumIntDocPagtoAporte, CodigoAporte, ParcelaAporte, ValorAporte, ValorAporteUSS, MoedaAporte) VALUES (?,?,?,?,?,?,?,?)", _
                                    objOCRAporte.lNumIntDocOCR, objOCRAporte.iTipoPagtoAporte, objOCRAporte.lNumIntDocPagtoAporte, objOCRAporte.lCodigoAporte, objOCRAporte.iParcelaAporte, objOCRAporte.dValorAporte, objOCRAporte.dValorAporteUSS, objOCRAporte.iMoedaAporte)
                            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196476
                            
                        Next
                
                        lErro = Comando_ExecutarPos(alComando(3), "UPDATE TRVOcorrencias SET TipoDocDestino= ?, NumIntDocDestino=?, NumTitulo = ?, ValorAporte = ? ", alComando(2), _
                        iTipoDestino, lNumIntDocDestino, objInfoFatura.lNumeroFaturaReal, objInfoVoucher.dValorAporte)
                        If lErro <> AD_SQL_SUCESSO Then gError 192010
                        
                        Set objOCR = New ClassTRVOcorrencias
                        
                        objOCR.lNumIntDoc = lNumIntDocAux
                        
                        lErro = TRVOcrExp_Insere(objOCR)
                        If lErro <> SUCESSO Then gError 192021

                        
                    End If
                
                End If
        
            Next
            
If bGeraLog Then Print #1, "5." & CStr(iFaturaAtual) & ".30 - FIM DO PROCESSAMENTO DOS VOUCHER " & CStr(iFaturaAtual) & " " & CStr(Now)
            
If bGeraLog Then Print #1, "5." & CStr(iFaturaAtual) & ".31 - ATUALIZANDO SALDO EM CRÉDITO " & CStr(iFaturaAtual) & " " & CStr(Now)

            'Atualiza o saldo dos créditos (aportes diretos que viram débitos com o cliente)
            For Each objFaturaAporte In objInfoFatura.colFatAporteCred
                        
                'Grava a apropriação de saldo do DebitoReceber no BD
                lErro = CF("DebitoRecCli_AlterarSaldo", objFaturaAporte.objCredito, -objFaturaAporte.dValorAporte)
                If lErro <> SUCESSO Then gError 192194
    
            Next
            
If bGeraLog Then Print #1, "5." & CStr(iFaturaAtual) & ".32 - SALDO EM CRÉDITO ATUALIZADOS " & CStr(iFaturaAtual) & " " & CStr(Now)
            
            'Gera o documento .html
            sArquivo = objFaturamento.sDiretorio & gsEmpresaTRVHTML & String(6 - Len(CStr(objInfoFatura.lNumeroFaturaReal)), "0") & CStr(objInfoFatura.lNumeroFaturaReal) & ".html"
            
If bGeraLog Then Print #1, "5." & CStr(iFaturaAtual) & ".33 - GERANDO O HTML " & CStr(iFaturaAtual) & " " & CStr(Now)
            
            If objInfoFatura.dValor >= 0 Then
                'Passa o modelo normal com geração de boleto
                lErro = Gera_Arquivo_Html(objFaturamento, objFaturamento.sModelo, sArquivo, sConteudoHtml)
            Else
                'Passa o modelo de cartão e nota de crédito
                lErro = Gera_Arquivo_Html(objFaturamento, sModeloCP, sArquivo, sConteudoHtml)
            End If
            If lErro <> SUCESSO Then gError 192194
            
If bGeraLog Then Print #1, "5." & CStr(iFaturaAtual) & ".34 - HTML GERADO " & CStr(iFaturaAtual) & " " & CStr(Now)
            
            colArquivosHtml.Add sArquivo
        
            Call objFrmAguardeTela.ProcessouItem
            
            If objFrmAguarde.iCancelar = MARCADO Then Exit For
            
        End If

    Next
    
    'reativa os locks
    lErro = Conexao_DesativarLocks(REATIVAR_LOCKS)
    If lErro <> SUCESSO Then gError 192084
    
If bGeraLog Then Print #1, "6 - FATURA PROCESSADA  " & CStr(Now)
    
    Set objFrmAguardeTela = Nothing
    If objFrmAguarde.iCancelar = MARCADO Then gError 192084

'    Set objTRVConfig = New ClassTRVConfig
'
'    objTRVConfig.sCodigo = TRVCONFIG_PROX_NUM_TITREC
'    objTRVConfig.sConteudo = CStr(lProxCR)
'
'    lFatFim = lProxCR - 1
'
'    lErro = CF("TRVConfig_Grava_Lockado", alComando(6), alComando(7), objTRVConfig)
'    If lErro <> SUCESSO Then gError 192084
        
If bGeraLog Then Print #1, "7 - FIM DO PROCESSO " & CStr(Now)
       
    If bArq1Aberto Then Close #1
        
    TRVFaturamento_Gera_EmTrans = SUCESSO

    Exit Function

Erro_TRVFaturamento_Gera_EmTrans:

    TRVFaturamento_Gera_EmTrans = gErr

    Select Case gErr
    
        Case 192001, 192002, 192021, 192082, 192083, 192084, 192194, 192197 To 192200, 194202, 196240, 196476, 200196, 200226

        Case 192003, 192004
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVVOUCHERS", gErr)
        
        Case 192005
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVVOUCHERS", gErr)
        
        Case 192006
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVVOUCHERS", gErr)
            
        Case 192007, 192008
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVOCORRENCIAS", gErr)
        
        Case 192009
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVOCORRENCIAS", gErr)
        
        Case 192010
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVOCORRENCIAS", gErr)
            
        Case 192016
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVVOUCHERS_NAO_CADASTRADO2", gErr, objInfoVoucher.lNumIntDoc)

        Case 192018
            Call Rotina_Erro(vbOKOnly, "ERRO_OCORRREMPARCREC_NAO_CADASTRADA", gErr, objInfoVoucher.lNumIntDoc)
            
        Case 196371, 196372, 196376, 196377, 196380
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVVOUCHERINFO", gErr)

        Case 1963713
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVVOUCHERINFO_NAO_CADASTRADO", gErr, objInfoVoucher.lNumIntDoc)

        Case 196378, 196374
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVVOUCHERINFO", gErr)
        
        Case 196379, 196375
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVVOUCHERINFO", gErr)
            
        Case 200382
            Call Rotina_Erro(vbOKOnly, "ERRO_VOU_VALOR_ALTERADO", gErr, sDocAux)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 190991)

    End Select
    
    'reativa os locks
    Call Conexao_DesativarLocks(REATIVAR_LOCKS)
    
    If bArq1Aberto Then Close #1
    
    If Not (objFrmAguardeTela Is Nothing) Then
        Call objFrmAguardeTela.Trata_Erro
    End If

    Exit Function

End Function

Private Function TRVFaturamento_Gera_TitRec(ByVal lComando1 As Long, ByVal lComando2 As Long, ByVal lComando3 As Long, ByVal lComando4 As Long, ByVal lComando5 As Long, ByVal lComando6 As Long, ByVal lComando7 As Long, ByVal lComando8 As Long, ByVal lComando9 As Long, ByVal lComando10 As Long, ByVal objInfoFatura As ClassTRVFATInfoFatura, ByVal objTitRec As ClassTituloReceber, ByVal lProxNum As Long, ByVal colParcRecDataVencReal As Collection) As Long

Dim lErro As Long
Dim objParcelaReceber As New ClassParcelaReceber
Dim objParcelaReceberAux As ClassParcelaReceber
Dim colParcelaReceber As New colParcelaReceber
Dim colComissaoEmissao As New colComissao
Dim colcolComissao As New colcolComissao
Dim colComissao As New colComissao
Dim colcolDesconto As New colcolDesconto
Dim colDesconto As New colDesconto
Dim objContabil As ClassContabil
Dim objCtb As New ClassImpCoinfoFatCRCtb
Dim objContabAutomatica As New ClassContabAutomatica
Dim dtDataVenctoReal As Date
Dim bAchou As Boolean
Dim objPRJInfo As New ClassProjetoInfo, objPRJCR As New ClassPRJCR, objProjeto As New ClassProjetos

On Error GoTo Erro_TRVFaturamento_Gera_TitRec
    
    objTitRec.lCliente = objInfoFatura.lCliente
    objTitRec.iFilial = FILIAL_MATRIZ
    objTitRec.lNumTitulo = lProxNum
    objTitRec.dtDataEmissao = objInfoFatura.dtDataEmissao
    objTitRec.dValor = objInfoFatura.dValor
    objTitRec.dSaldo = objInfoFatura.dValor
    objTitRec.iFilialEmpresa = objInfoFatura.iFilialEmpresa

    objTitRec.sSiglaDocumento = TIPODOC_FATURA_SERVICO_CR
    objTitRec.iNumParcelas = 1

    objParcelaReceber.iNumParcela = 1
    objParcelaReceber.dtDataVencimento = objInfoFatura.dtDataVencimento
    
    bAchou = False
    For Each objParcelaReceberAux In colParcRecDataVencReal
        If objParcelaReceberAux.dtDataVencimento = objParcelaReceber.dtDataVencimento Then
            bAchou = True
            Exit For
        End If
    Next
    If Not bAchou Then

        'Calcula Data Vencimento Real
        lErro = CF("DataVencto_Real", objParcelaReceber.dtDataVencimento, dtDataVenctoReal)
        If lErro <> SUCESSO Then gError 190992
        
        Set objParcelaReceberAux = New ClassParcelaReceber
        
        objParcelaReceberAux.dtDataVencimento = objParcelaReceber.dtDataVencimento
        objParcelaReceberAux.dtDataVencimentoReal = dtDataVenctoReal
        
        colParcRecDataVencReal.Add objParcelaReceberAux
        
    End If
    
    objParcelaReceber.dtDataVencimentoReal = objParcelaReceberAux.dtDataVencimentoReal
    
    'objParcelaReceber.dtDataVencimentoReal = dtDataVenctoReal
    objParcelaReceber.dValor = objInfoFatura.dValor
    objParcelaReceber.dValorOriginal = objInfoFatura.dValor
    objParcelaReceber.dtDataCredito = DATA_NULA
    objParcelaReceber.dtDataDepositoCheque = DATA_NULA
    objParcelaReceber.dtDataEmissaoCheque = DATA_NULA
    objParcelaReceber.dtDataPrevReceb = DATA_NULA
    objParcelaReceber.dtDataProxCobr = DATA_NULA
    objParcelaReceber.dtDataTransacaoCartao = DATA_NULA
    objParcelaReceber.dtDesconto1Ate = DATA_NULA
    objParcelaReceber.dtDesconto2Ate = DATA_NULA
    objParcelaReceber.dtDesconto3Ate = DATA_NULA
    objParcelaReceber.dtValidadeCartao = DATA_NULA

    colParcelaReceber.AddObj objParcelaReceber
    
    colcolDesconto.Add colDesconto
    colcolComissao.Add colComissao
    
    objPRJInfo.sProjeto = "100101"

    objPRJCR.dValor = objTitRec.dValor
    objPRJCR.sItem = "PROD"
    objPRJCR.iTipoOrigem = PRJ_CR_TIPO_TITREC
    objPRJCR.iCalcAuto = MARCADO
    objPRJCR.dPercent = 1
    objPRJInfo.iFilialEmpresa = 1

    objPRJInfo.colPRJCustoReceitaReal.Add objPRJCR

    Set objTitRec.objProjetoInfo = objPRJInfo

    objProjeto.sCodigo = objPRJInfo.sProjeto
    objProjeto.iFilialEmpresa = objPRJInfo.iFilialEmpresa

    'Le
    lErro = CF("Projetos_Le", objProjeto)
    If lErro <> SUCESSO And lErro <> ERRO_LEITURA_SEM_DADOS Then gError ERRO_SEM_MENSAGEM

    objPRJInfo.lNumIntDocPRJ = objProjeto.lNumIntDoc
    objPRJCR.lNumIntDocPRJ = objProjeto.lNumIntDoc

    'Se não encontrou => Erro
    If lErro = ERRO_LEITURA_SEM_DADOS Then gError 209161
    
    'Grava o Título a receber
    'lErro = CF("TituloReceber_Grava_EmTrans", objTitRec, colComissaoEmissao, colParcelaReceber, colcolComissao, colcolDesconto, objContabil)
    
    lErro = FAT_TituloReceber_Insere_TRV(lComando1, lComando2, lComando3, lComando4, lComando5, lComando6, lComando7, lComando8, lComando9, lComando10, objTitRec, colParcelaReceber)
    If lErro <> SUCESSO Then gError 190993
    
    Set objTitRec.colParcelaReceber = colParcelaReceber
                        
'    'Coloca a comissão no CSLL
'    objTitRec.dCSLLRetido = objInfoFatura.dValorComissao
'
'    'gravar a contabilizacao
'    lErro = objContabAutomatica.Inicializa_Contab(objCtb, MODULO_CONTASARECEBER, "CR", objTitRec.dtDataEmissao, objTitRec.dtDataEmissao)
'    If lErro <> SUCESSO Then gError 190994
'
'    lErro = objContabAutomatica.GeraContabilizacao(objTitRec, Nothing)
'    If lErro <> SUCESSO Then gError 190995
'
'    lErro = objContabAutomatica.Finaliza_Contab()
'    If lErro <> SUCESSO Then gError 190996
'
'    objTitRec.colParcelaReceber.AddObj objParcelaReceber
'
'    Set objContabAutomatica = Nothing
'    Call objCtb.Encerrando
'    Set objCtb = Nothing
                        
    TRVFaturamento_Gera_TitRec = SUCESSO

    Exit Function

Erro_TRVFaturamento_Gera_TitRec:

    TRVFaturamento_Gera_TitRec = gErr

    Select Case gErr
    
        Case ERRO_SEM_MENSAGEM
    
        Case 190992 To 190996

        Case 209161
            Call Rotina_Erro(vbOKOnly, "ERRO_PROJETOS_NAO_CADASTRADO2", gErr, objProjeto.sCodigo, objProjeto.iFilialEmpresa)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 190991)

    End Select

    Exit Function

End Function

Private Function TRVFaturamento_Gera_TitPag(ByVal objInfoFatura As ClassTRVFATInfoFatura, ByVal objTitPag As ClassTituloPagar, ByVal lProxNum As Long, ByVal objCliente As ClassCliente, ByVal objEndereco As ClassEndereco, ByVal colParcRecDataVencReal As Collection) As Long

Dim lErro As Long
Dim objParcelaPagar As New ClassParcelaPagar
Dim colParcelaPagar As New colParcelaPagar
Dim objContabil As ClassContabil
Dim objCtb As New ClassImpCoinfoFatCPCtb
Dim objContabAutomatica As New ClassContabAutomatica
Dim dtDataVenctoReal As Date
Dim objInfoVoucher As ClassTRVFATInfoVoucher
Dim objParcelaReceberAux As ClassParcelaReceber
Dim bAchou As Boolean
Dim objForn As New ClassFornecedor
Dim objPRJInfo As New ClassProjetoInfo, objPRJCR As New ClassPRJCR, objProjeto As New ClassProjetos

On Error GoTo Erro_TRVFaturamento_Gera_TitPag

    Set objInfoVoucher = objInfoFatura.colInfoVouchers.Item(1)

    If objInfoVoucher.iTipoCliente = TRV_TIPO_CLIENTE_PASSAGEIRO Then
    
        lErro = TRV_Cliente_Grava_Fornecedor(objCliente, objEndereco)
        If lErro <> SUCESSO Then gError 196904
    
    End If
               
    objTitPag.lFornecedor = objInfoFatura.lCliente
    objTitPag.iFilial = FILIAL_MATRIZ
    objTitPag.iFilialPedCompra = FILIAL_MATRIZ
    objTitPag.lNumTitulo = lProxNum
    objTitPag.dtDataEmissao = objInfoFatura.dtDataEmissao
    objTitPag.dValorTotal = Abs(objInfoFatura.dValor)
    objTitPag.dValorProdutos = Abs(objInfoFatura.dValor)
    objTitPag.dSaldo = Abs(objInfoFatura.dValor)
    objTitPag.iFilialEmpresa = objInfoFatura.iFilialEmpresa
    objTitPag.sSiglaDocumento = TIPODOC_FATURA_SERVICO_CP
    objTitPag.iNumParcelas = 1

    objParcelaPagar.iNumParcela = 1
    objParcelaPagar.dtDataVencimento = objInfoFatura.dtDataVencimento
    
    bAchou = False
    For Each objParcelaReceberAux In colParcRecDataVencReal
        If objParcelaReceberAux.dtDataVencimento = objParcelaPagar.dtDataVencimento Then
            bAchou = True
            Exit For
        End If
    Next
    If Not bAchou Then

        'Calcula Data Vencimento Real
        lErro = CF("DataVencto_Real", objParcelaPagar.dtDataVencimento, dtDataVenctoReal)
        If lErro <> SUCESSO Then gError 190997
        
        Set objParcelaReceberAux = New ClassParcelaReceber
        
        objParcelaReceberAux.dtDataVencimento = objParcelaPagar.dtDataVencimento
        objParcelaReceberAux.dtDataVencimentoReal = dtDataVenctoReal
        
        colParcRecDataVencReal.Add objParcelaReceberAux
        
    End If
    
    objParcelaPagar.dtDataVencimentoReal = objParcelaReceberAux.dtDataVencimentoReal

    objParcelaPagar.dValor = Abs(objInfoFatura.dValor)
    objParcelaPagar.iTipoCobranca = TIPO_COBRANCA_DOC
    objParcelaPagar.iStatus = STATUS_ABERTO

    objForn.lCodigo = objInfoFatura.lCliente
    
    lErro = CF("Fornecedor_Le", objForn)
    If lErro <> SUCESSO And lErro <> 12729 Then gError 190999
    
    If lErro = SUCESSO Then
        If objForn.iBanco = giBancoPadraoPagto Then
            objParcelaPagar.iTipoCobranca = TIPO_COBRANCA_DEP_CONTA
        End If
    End If

    With objParcelaPagar
        colParcelaPagar.Add .lNumIntDoc, .lNumIntTitulo, .iNumParcela, .iStatus, .dtDataVencimento, .dtDataVencimentoReal, .dSaldo, .dValor, .iPortador, .iProxSeqBaixa, .iTipoCobranca, .iBancoCobrador, .sNossoNumero, .sCodigoDeBarras
    End With
    
    objPRJInfo.sProjeto = "200113"
    
    objPRJCR.dValor = objTitPag.dValorProdutos
    objPRJCR.sItem = "PROD"
    objPRJCR.iTipoOrigem = PRJ_CR_TIPO_TITPAG
    objPRJCR.iCalcAuto = MARCADO
    objPRJCR.dPercent = 1
    objPRJInfo.iFilialEmpresa = 1
    
    objPRJInfo.colPRJCustoReceitaReal.Add objPRJCR
    
    Set objTitPag.objProjetoInfo = objPRJInfo
    
    objProjeto.sCodigo = objPRJInfo.sProjeto
    objProjeto.iFilialEmpresa = objPRJInfo.iFilialEmpresa
    
    'Le
    lErro = CF("Projetos_Le", objProjeto)
    If lErro <> SUCESSO And lErro <> ERRO_LEITURA_SEM_DADOS Then gError ERRO_SEM_MENSAGEM
    
    objPRJInfo.lNumIntDocPRJ = objProjeto.lNumIntDoc
    objPRJCR.lNumIntDocPRJ = objProjeto.lNumIntDoc
    
    'Se não encontrou => Erro
    If lErro = ERRO_LEITURA_SEM_DADOS Then gError 209161

    'Grava o Título a Pagar
    lErro = CF("NFFatPag_Grava_EmTrans", objTitPag, colParcelaPagar, objContabil)
    If lErro <> SUCESSO Then gError 190998
    
'    objTitPag.dCSLLRetido = objInfoFatura.dValorComissao
'
'    objCtb.sModelo = "Reembolso"
'
'    'gravar a contabilizacao
'    lErro = objContabAutomatica.Inicializa_Contab(objCtb, MODULO_CONTASAPAGAR, "CP", objTitPag.dtDataEmissao, objTitPag.dtDataEmissao)
'    If lErro <> SUCESSO Then gError 190999
'
'    lErro = objContabAutomatica.GeraContabilizacao(objTitPag)
'    If lErro <> SUCESSO Then gError 192000
'
'    Set objContabAutomatica = Nothing
'    Call objCtb.Encerrando
'    Set objCtb = Nothing
                    
    TRVFaturamento_Gera_TitPag = SUCESSO

    Exit Function

Erro_TRVFaturamento_Gera_TitPag:

    TRVFaturamento_Gera_TitPag = gErr

    Select Case gErr
    
        Case 190997 To 190999, 192000, 196904, ERRO_SEM_MENSAGEM

        Case 209161
            Call Rotina_Erro(vbOKOnly, "ERRO_PROJETOS_NAO_CADASTRADO2", gErr, objProjeto.sCodigo, objProjeto.iFilialEmpresa)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 190991)

    End Select

    Exit Function

End Function

Private Function TRVFaturamento_Gera_NFPag(ByVal objInfoFatura As ClassTRVFATInfoFatura, ByVal objNFPag As ClassNFsPag, ByVal lProxNum As Long) As Long
'Comissões em geral
Dim lErro As Long

Dim objContabil As ClassContabil
Dim objCtb As New ClassImpCoinfoNFPagCtb
Dim objContabAutomatica As New ClassContabAutomatica
Dim objPRJInfo As New ClassProjetoInfo, objPRJCR As New ClassPRJCR, objProjeto As New ClassProjetos

On Error GoTo Erro_TRVFaturamento_Gera_NFPag

    objNFPag.lFornecedor = objInfoFatura.lCliente
    objNFPag.iFilial = FILIAL_MATRIZ
    objNFPag.lNumNotaFiscal = lProxNum
    objNFPag.dtDataEmissao = objInfoFatura.dtDataEmissao
    objNFPag.dValorTotal = Abs(objInfoFatura.dValor)
    objNFPag.dValorProdutos = Abs(objInfoFatura.dValor)
    objNFPag.iFilialEmpresa = objInfoFatura.iFilialEmpresa
    objNFPag.dtDataVencimento = objInfoFatura.dtDataVencimento
    
    If objInfoFatura.iTipoDoc = TRV_TIPODOC_FAT_OVER Then
        objPRJInfo.sProjeto = "200106"
    Else
        objPRJInfo.sProjeto = "200105"
    End If
    
    objPRJCR.dValor = objNFPag.dValorProdutos
    objPRJCR.sItem = "PROD"
    objPRJCR.iTipoOrigem = PRJ_CR_TIPO_NFPAG
    objPRJCR.iCalcAuto = MARCADO
    objPRJCR.dPercent = 1
    objPRJInfo.iFilialEmpresa = 1
    
    objPRJInfo.colPRJCustoReceitaReal.Add objPRJCR
    
    Set objNFPag.objProjetoInfo = objPRJInfo
    
    objProjeto.sCodigo = objPRJInfo.sProjeto
    objProjeto.iFilialEmpresa = objPRJInfo.iFilialEmpresa
    
    'Le
    lErro = CF("Projetos_Le", objProjeto)
    If lErro <> SUCESSO And lErro <> ERRO_LEITURA_SEM_DADOS Then gError ERRO_SEM_MENSAGEM
    
    objPRJInfo.lNumIntDocPRJ = objProjeto.lNumIntDoc
    objPRJCR.lNumIntDocPRJ = objProjeto.lNumIntDoc
    
    'Se não encontrou => Erro
    If lErro = ERRO_LEITURA_SEM_DADOS Then gError 209161
               
    'Grava o Título a Pagar
    lErro = CF("NFPag_Grava_EmTrans", objNFPag, objContabil)
    If lErro <> SUCESSO Then gError 194203

'    'gravar a contabilizacao
'    lErro = objContabAutomatica.Inicializa_Contab(objCtb, MODULO_CONTASAPAGAR, "CP", objNFPag.dtDataEmissao, objNFPag.dtDataEmissao)
'    If lErro <> SUCESSO Then gError 194204
'
'    lErro = objContabAutomatica.GeraContabilizacao(objNFPag, False)
'    If lErro <> SUCESSO Then gError 194205
'
'    Set objContabAutomatica = Nothing
'    Call objCtb.Encerrando
'    Set objCtb = Nothing
                    
    TRVFaturamento_Gera_NFPag = SUCESSO

    Exit Function

Erro_TRVFaturamento_Gera_NFPag:

    TRVFaturamento_Gera_NFPag = gErr

    Select Case gErr
    
        Case 194203 To 194205

        Case 209161
            Call Rotina_Erro(vbOKOnly, "ERRO_PROJETOS_NAO_CADASTRADO2", gErr, objProjeto.sCodigo, objProjeto.iFilialEmpresa)

        Case ERRO_SEM_MENSAGEM

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 194206)

    End Select

    Exit Function

End Function

Public Function Trata_Exclusao_Do_Destino(ByVal objDestino As Object) As Long

Dim lErro As Long, lComando As Long
Dim alComando(0 To 40) As Long
Dim iIndice As Integer
Dim lNumIntDoc As Long
Dim dValorAporte As Double
Dim lNumIntDocAportePagto As Long
Dim dSaldo As Double
Dim lCodigo As Long
Dim lNumIntDocAporte As Long
Dim objAporte As ClassTRVAportes
Dim iTipoDestino As Integer
Dim lNumIntDocDestino As Long
Dim sClasse As String
Dim bValido As Boolean
Dim objTRVTitulosExp As ClassTRVTitulosExp
Dim lNumeroFaturaReal As Long
Dim sTipVou As String
Dim sSerie As String
Dim lNumVou As Long
Dim iTipoPagtoAporte As Integer
Dim bMotivoObrigatorio As Boolean
Dim objFaturaTRV As ClassFaturaTRV
Dim dValorAporteUSS As Double
Dim iMoedaAporte As Double
Dim objDebitoRecCli As ClassDebitoRecCli
Dim dValorAporteCred As Double
Dim lNumIntDocCredito As Long
Dim objFaturaAporte As ClassTRVFaturaAporte
Dim lNumIntDocVouInfo As Long
Dim sTipoDoc As String
Dim objVouExp As ClassTRVVouExp
Dim objVou As ClassTRVVouchers
Dim dtDataCanc As Date
Dim lClienteVou As Long
Dim objTRVTitulos As ClassTRVTitulos
Dim iStatus As Integer
Dim dValorBruto As Double, dValorBaseComis As Double
Dim lNumIntDocOCR As Long, bDocFat As Boolean, bTratarAporteDireto As Boolean
Dim objAportePagtoCond As New ClassTRVAportePagtoCond
Dim objAportePagtoDireto As New ClassTRVAportePagtoDireto
Dim lNumIntDocAux As Long, iTrataBoleto As Integer

On Error GoTo Erro_Trata_Exclusao_Do_Destino

    bValido = True
    bMotivoObrigatorio = False
    bDocFat = False
    bTratarAporteDireto = False
   
    sClasse = TypeName(objDestino)
    
    lComando = Comando_Abrir()
    If lComando = 0 Then gError 192022
    
    Select Case sClasse
    
        Case TRV_TIPO_DOC_DESTINO_CREDFORN_CLASSE
            iTipoDestino = TRV_TIPO_DOC_DESTINO_CREDFORN
            
        Case TRV_TIPO_DOC_DESTINO_DEBCLI_CLASSE
            iTipoDestino = TRV_TIPO_DOC_DESTINO_DEBCLI
            
        Case TRV_TIPO_DOC_DESTINO_TITPAG_CLASSE
            iTipoDestino = TRV_TIPO_DOC_DESTINO_TITPAG
            lNumeroFaturaReal = objDestino.lNumTitulo
            
            If objDestino.sSiglaDocumento = TIPODOC_FATURA_SERVICO_CP Then
            
                lErro = Comando_Executar(lComando, "SELECT NumIntDoc FROM TRVTitulosExp WHERE TipoDocOrigem = ? AND NumIntDocOrigem = ?", lNumIntDocAux, iTipoDestino, objDestino.lNumIntDoc)
                If lErro <> AD_SQL_SUCESSO Then gError 192023
            
                'Busca Primeiro
                lErro = Comando_BuscarPrimeiro(lComando)
                If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192024
                
                'Se foi gerado pelo faturamento
                If lErro = AD_SQL_SUCESSO Then
                    bMotivoObrigatorio = True
                    bDocFat = True
                    'Muda o status das comissões que foram liberadas no faturamento
                    'Não muda as já faturadas
                    lErro = TRVVouchers_Comissao_Deslibera(TRV_TIPO_LIBERACAO_COMISSAO_FAT_TITPAG, objDestino.lNumIntDoc)
                    If lErro <> SUCESSO Then gError 196393
                Else
                    bTratarAporteDireto = True
                End If
                
            End If
            
        Case TRV_TIPO_DOC_DESTINO_TITREC_CLASSE
            iTipoDestino = TRV_TIPO_DOC_DESTINO_TITREC
            lNumeroFaturaReal = objDestino.lNumTitulo
            
            If objDestino.sSiglaDocumento = TIPODOC_FATURA_SERVICO_CR Or objDestino.sSiglaDocumento = TIPODOC_CARTAO_CRED_DEB Then
                
                lErro = Comando_Executar(lComando, "SELECT NumIntDoc FROM TRVTitulosExp WHERE TipoDocOrigem = ? AND NumIntDocOrigem = ?", lNumIntDocAux, iTipoDestino, objDestino.lNumIntDoc)
                If lErro <> AD_SQL_SUCESSO Then gError 192023
            
                'Busca Primeiro
                lErro = Comando_BuscarPrimeiro(lComando)
                If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192024
                
                'Se foi gerado pelo faturamento
                If lErro = AD_SQL_SUCESSO Then
                    bMotivoObrigatorio = True
                    bDocFat = True
                    'Muda o status das comissões que foram liberadas no faturamento
                    'Não muda as já faturadas
                    lErro = TRVVouchers_Comissao_Deslibera(TRV_TIPO_LIBERACAO_COMISSAO_FAT, objDestino.lNumIntDoc)
                    If lErro <> SUCESSO Then gError 196393
                End If
                
            End If
            
        Case TRV_TIPO_DOC_DESTINO_NFSPAG_CLASSE
            iTipoDestino = TRV_TIPO_DOC_DESTINO_NFSPAG
            lNumeroFaturaReal = objDestino.lNumNotaFiscal
            
            lErro = Comando_Executar(lComando, "SELECT NumIntDoc FROM TRVTitulosExp WHERE TipoDocOrigem = ? AND NumIntDocOrigem = ?", lNumIntDocAux, iTipoDestino, objDestino.lNumIntDoc)
            If lErro <> AD_SQL_SUCESSO Then gError 192023
        
            'Busca Primeiro
            lErro = Comando_BuscarPrimeiro(lComando)
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192024
            
            'Se foi gerado pelo faturamento
            If lErro = AD_SQL_SUCESSO Then
            
                bMotivoObrigatorio = True
                bDocFat = True
                'Muda o status das comissões que foram liberadas no faturamento
                'Não muda as já faturadas
                lErro = TRVVouchers_Comissao_Deslibera(TRV_TIPO_LIBERACAO_COMISSAO_FAT_NFPAG, objDestino.lNumIntDoc)
                If lErro <> SUCESSO Then gError 196393
                
            End If
            
        Case Else
            bValido = False
    
    End Select
    
    Call Comando_Fechar(lComando)
    
    If bValido Then
    
        If bMotivoObrigatorio Then
        
            If objDestino.objInfoUsu Is Nothing Then gError 196490
            If TypeName(objDestino.objInfoUsu) <> "ClassFaturaTRV" Then gError 196490
        
            Set objFaturaTRV = objDestino.objInfoUsu
            
            If Len(Trim(objFaturaTRV.sMotivo)) = 0 Then gError 196491
        
        End If
    
        lNumIntDocDestino = objDestino.lNumIntDoc
        
        Set objTRVTitulosExp = New ClassTRVTitulosExp
        
        objTRVTitulosExp.iExcluido = MARCADO
        objTRVTitulosExp.iExportado = DESMARCADO
        objTRVTitulosExp.iTipoDocOrigem = iTipoDestino
        objTRVTitulosExp.lNumIntDocOrigem = lNumIntDocDestino
        objTRVTitulosExp.lNumTitulo = lNumeroFaturaReal
            
        If bMotivoObrigatorio Then
            
            objTRVTitulosExp.sMotivo = objFaturaTRV.sMotivo
        
            lErro = CF("TRVTitulosExp_Insere", objTRVTitulosExp)
            If lErro <> SUCESSO Then gError 196241
    
        End If
    
        'Abertura de Comando
        For iIndice = LBound(alComando) To UBound(alComando)
            alComando(iIndice) = Comando_Abrir()
            If alComando(iIndice) = 0 Then gError 192022
        Next
        
        If bTratarAporteDireto Then
        
            objAportePagtoDireto.iTipoDocDestino = TRV_TIPO_DOC_DESTINO_TITPAG
             objAportePagtoDireto.lNumIntDocDestino = objDestino.lNumIntDoc
             
             lErro = CF("TRVAportePagtoDireto_Le_NumIntDocDestino", objAportePagtoDireto)
             If lErro <> SUCESSO And lErro <> ERRO_LEITURA_SEM_DADOS Then gError 196393
            
             If lErro = SUCESSO Then
             
                 objAportePagtoDireto.iTipoDocDestino = 0
                 objAportePagtoDireto.lNumIntDocDestino = 0
                                 
                 lErro = TRVAportePagtoDireto_Atualiza(alComando(39), alComando(40), objAportePagtoDireto, , True)
                 If lErro <> SUCESSO Then gError 196393
             
             Else
             
                 objAportePagtoCond.iTipoDocDestino = TRV_TIPO_DOC_DESTINO_TITPAG
                 objAportePagtoCond.lNumIntDocDestino = objDestino.lNumIntDoc
             
                 lErro = CF("TRVAportePagtoCond_Le_NumIntDocDestino", objAportePagtoCond)
                 If lErro <> SUCESSO And lErro <> ERRO_LEITURA_SEM_DADOS Then gError 196393
                 
                 If lErro = SUCESSO Then
                 
                     objAportePagtoCond.iTipoDocDestino = 0
                     objAportePagtoCond.lNumIntDocDestino = 0
                                     
                     lErro = TRVAportePagtoCond_Atualiza(alComando(39), alComando(40), objAportePagtoCond)
                     If lErro <> SUCESSO Then gError 196393
                 
                 End If
                 
             End If
                
        End If
        
        'É se algo ligado a tela de faturamento libera todos documentos relacionados
        If bDocFat Then
        
            sTipVou = String(STRING_TRV_OCR_TIPOVOU, 0)
            sTipoDoc = String(STRING_TRV_OCR_TIPODOC, 0)
            sSerie = String(STRING_TRV_OCR_SERIE, 0)
    
            lErro = Comando_ExecutarPos(alComando(0), "SELECT Recnsica,TipoDoc, TipVou,Serie,NumVou,DataCanc, ClienteVou, Status, ValorBruto, ValorBaseComis FROM TRVVouchers WHERE TipoDocDestino= ? AND NumIntDocDestino = ? ", _
                        0, lNumIntDoc, sTipoDoc, sTipVou, sSerie, lNumVou, dtDataCanc, lClienteVou, iStatus, dValorBruto, dValorBaseComis, iTipoDestino, lNumIntDocDestino)
            If lErro <> AD_SQL_SUCESSO Then gError 192023
        
            'Busca Primeiro
            lErro = Comando_BuscarPrimeiro(alComando(0))
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192024
            
            Do While lErro = AD_SQL_SUCESSO
        
                'Trava registro contra alterações/Leituras
                lErro = Comando_LockExclusive(alComando(0))
                If lErro <> SUCESSO Then gError 192025
                
                If sTipoDoc = TRV_TIPODOC_VOU_TEXTO Then
                
                    'Se o voucher está cancelado e não mais vai ser faturado tem que estornar os dados
                    If iStatus = STATUS_TRV_VOU_CANCELADO Then
                    
                        If dValorBruto <> 0 Then
                        
                            Set objVou = New ClassTRVVouchers
                            
                            objVou.sSerie = sSerie
                            objVou.sTipoDoc = sTipoDoc
                            objVou.sTipVou = sTipVou
                            objVou.lNumVou = lNumVou
                        
                            'Cancelou o voucher sem gerar o NVL
                            lErro = TRVVou_Gera_Comis(objVou, -dValorBruto, -dValorBaseComis, TRV_TIPO_VALOR_BASE_BRU, Date, "Cancelamento de voucher não faturado.", TRV_TIPO_TRATAMENTO_COMI_VOU_VLR_ALTERADO, , True)
                            If lErro <> SUCESSO Then gError 200197
                        End If
                    End If
                
                    Set objVouExp = New ClassTRVVouExp
                    objVouExp.sSerie = sSerie
                    objVouExp.sTipVou = sTipVou
                    objVouExp.lNumVou = lNumVou
                    objVouExp.dtDataCanc = dtDataCanc
                    objVouExp.iTransacao = TRV_EXPORT_VOU_TRANS_CANC_FAT
                    objVouExp.lCliente = lClienteVou
                    lErro = TRVVouExp_Insere(alComando(23), alComando(24), alComando(25), alComando(26), alComando(27), alComando(30), objVouExp)
                    If lErro <> SUCESSO Then gError 200197
                    
                End If
                
                iTrataBoleto = DESMARCADO
                If lNumeroFaturaReal > TRV_INI_SEQ_BOLETO_GER_FORA_CORP Then
                    iTrataBoleto = MARCADO
                End If
            
                lErro = Comando_ExecutarPos(alComando(1), "UPDATE TRVVouchers SET TipoDocDestino= ?, NumIntDocDestino=?, ValorAporte = ?,  NumFatCoinfo = ?, ValorAporteCred = ?, TrataBoleto = ? ", alComando(0), 0, 0, 0, 0, 0, iTrataBoleto)
                If lErro <> AD_SQL_SUCESSO Then gError 192026
                
                lErro = Comando_ExecutarPos(alComando(10), "SELECT TipoPagtoAporte, NumIntDocPagtoAporte, ValorAporte,ValorAporteUSS, MoedaAporte FROM TRVVoucherAporte WHERE TipVou= ? AND Serie = ? AND NumVou = ? ", _
                        0, iTipoPagtoAporte, lNumIntDocAportePagto, dValorAporte, dValorAporteUSS, iMoedaAporte, sTipVou, sSerie, lNumVou)
                If lErro <> AD_SQL_SUCESSO Then gError 192023
        
                'Busca Primeiro
                lErro = Comando_BuscarPrimeiro(alComando(10))
                If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192024
                
                Do While lErro = AD_SQL_SUCESSO
            
                    'Trava registro contra alterações/Leituras
                    lErro = Comando_LockExclusive(alComando(10))
                    If lErro <> SUCESSO Then gError 192025
            
                    If Abs(dValorAporte) > DELTA_VALORMONETARIO Then
                    
                        'Acerta o saldo do aporte
                        If iMoedaAporte = MOEDA_REAL Then
                            lErro = TRVAportePagtoFat_Acerta_Saldo(alComando(2), alComando(3), alComando(12), alComando(13), iTipoPagtoAporte, lNumIntDocAportePagto, -dValorAporte)
                        Else
                            lErro = TRVAportePagtoFat_Acerta_Saldo(alComando(2), alComando(3), alComando(12), alComando(13), iTipoPagtoAporte, lNumIntDocAportePagto, -dValorAporteUSS)
                        End If
                        If lErro <> SUCESSO Then gError 192027
                        
                    End If
                        
                    lErro = Comando_ExecutarPos(alComando(11), "DELETE TRVVoucherAporte ", alComando(10))
                    If lErro <> AD_SQL_SUCESSO Then gError 192026
                    
                    'Busca Próximo
                    lErro = Comando_BuscarProximo(alComando(10))
                    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192028
                    
                Loop
                
                'Busca Próximo
                lErro = Comando_BuscarProximo(alComando(0))
                If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192028
                
            Loop
            
            'Le as ocorrências relacionadas
            lErro = Comando_ExecutarPos(alComando(4), "SELECT NumIntDoc, Codigo FROM TRVOcorrencias WHERE TipoDocDestino= ? AND NumIntDocDestino = ? ", _
                        0, lNumIntDoc, lCodigo, iTipoDestino, lNumIntDocDestino)
            If lErro <> AD_SQL_SUCESSO Then gError 192029
        
            'Busca Primeiro
            lErro = Comando_BuscarPrimeiro(alComando(4))
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192030
            
            Do While lErro = AD_SQL_SUCESSO
            
                If iTipoDestino = TRV_TIPO_DOC_DESTINO_CREDFORN Then gError 192034
                If iTipoDestino = TRV_TIPO_DOC_DESTINO_DEBCLI Then gError 192035
        
                'Trava registro contra alterações/Leituras
                lErro = Comando_LockExclusive(alComando(4))
                If lErro <> SUCESSO Then gError 192031
            
                lErro = Comando_ExecutarPos(alComando(5), "UPDATE TRVOcorrencias SET TipoDocDestino= ?, NumIntDocDestino=?, NumTitulo = ?, ValorAporte = ? ", alComando(4), 0, 0, 0, 0)
                If lErro <> AD_SQL_SUCESSO Then gError 192032
                
                lErro = Comando_ExecutarPos(alComando(14), "SELECT TipoPagtoAporte, NumIntDocPagtoAporte, ValorAporte,ValorAporteUSS, MoedaAporte FROM TRVOcorrenciaAporte WHERE NumIntDocOCR= ? ", _
                        0, iTipoPagtoAporte, lNumIntDocAportePagto, dValorAporte, dValorAporteUSS, iMoedaAporte, lNumIntDoc)
                If lErro <> AD_SQL_SUCESSO Then gError 192023
        
                'Busca Primeiro
                lErro = Comando_BuscarPrimeiro(alComando(14))
                If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192024
                
                Do While lErro = AD_SQL_SUCESSO
            
                    'Trava registro contra alterações/Leituras
                    lErro = Comando_LockExclusive(alComando(14))
                    If lErro <> SUCESSO Then gError 192025
            
                    If Abs(dValorAporte) > DELTA_VALORMONETARIO Then
                    
                        'Acerta o saldo do aporte
                        If iMoedaAporte = MOEDA_REAL Then
                            lErro = TRVAportePagtoFat_Acerta_Saldo(alComando(2), alComando(3), alComando(12), alComando(13), iTipoPagtoAporte, lNumIntDocAportePagto, -dValorAporte)
                        Else
                            lErro = TRVAportePagtoFat_Acerta_Saldo(alComando(2), alComando(3), alComando(12), alComando(13), iTipoPagtoAporte, lNumIntDocAportePagto, -dValorAporteUSS)
                        End If
                        If lErro <> SUCESSO Then gError 192027
                        
                    End If
                        
                    lErro = Comando_ExecutarPos(alComando(15), "DELETE TRVOcorrenciaAporte ", alComando(14))
                    If lErro <> AD_SQL_SUCESSO Then gError 192026
                    
                    'Busca Próximo
                    lErro = Comando_BuscarProximo(alComando(14))
                    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192028
                    
                Loop
                
                'Busca Próximo
                lErro = Comando_BuscarProximo(alComando(4))
                If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192033
                
            Loop
            
            'Le as comissões relacionadas
            lErro = Comando_ExecutarPos(alComando(21), "SELECT NumIntDoc FROM TRVVoucherInfo WHERE TipoDocDestino= ? AND NumIntDocDestino = ? ", _
                        0, lNumIntDocVouInfo, iTipoDestino, lNumIntDocDestino)
            If lErro <> AD_SQL_SUCESSO Then gError 196381
        
            'Busca Primeiro
            lErro = Comando_BuscarPrimeiro(alComando(21))
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196382
            
            Do While lErro = AD_SQL_SUCESSO
        
                'Trava registro contra alterações/Leituras
                lErro = Comando_LockExclusive(alComando(21))
                If lErro <> SUCESSO Then gError 196383
    
                lErro = Comando_ExecutarPos(alComando(22), "UPDATE TRVVoucherInfo SET TipoDocDestino= ?, NumIntDocDestino=?, NumTitulo = ? ", alComando(21), 0, 0, 0)
                If lErro <> AD_SQL_SUCESSO Then gError 196384
                
                'Busca Próximo
                lErro = Comando_BuscarProximo(alComando(21))
                If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196385
                
            Loop
            
            'Le os aportes diretos
            lErro = Comando_ExecutarPos(alComando(6), "SELECT NumIntDocAporte FROM TRVAportePagtoDireto WHERE TipoDocDestino= ? AND NumIntDocDestino = ? ", _
                        0, lNumIntDocAporte, iTipoDestino, lNumIntDocDestino)
            If lErro <> AD_SQL_SUCESSO Then gError 192036
        
            'Busca Primeiro
            lErro = Comando_BuscarPrimeiro(alComando(6))
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192037
            
            Do While lErro = AD_SQL_SUCESSO
            
                Set objAporte = New ClassTRVAportes
                
                objAporte.lNumIntDoc = lNumIntDocAporte
                
                lErro = CF("TRVAportes_Le", objAporte, False)
                If lErro <> SUCESSO And lErro <> ERRO_LEITURA_SEM_DADOS Then gError 192038
            
                If iTipoDestino = TRV_TIPO_DOC_DESTINO_CREDFORN Then gError 192039
                If iTipoDestino = TRV_TIPO_DOC_DESTINO_DEBCLI Then gError 192040
        
                'Trava registro contra alterações/Leituras
                lErro = Comando_LockExclusive(alComando(6))
                If lErro <> SUCESSO Then gError 192041
            
                lErro = Comando_ExecutarPos(alComando(7), "UPDATE TRVAportePagtoDireto SET TipoDocDestino= ?, NumIntDocDestino=? ", alComando(6), 0, 0)
                If lErro <> AD_SQL_SUCESSO Then gError 192042
                
                'Busca Próximo
                lErro = Comando_BuscarProximo(alComando(6))
                If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192043
                
            Loop
            
            'Le os aportes condicionados
            lErro = Comando_ExecutarPos(alComando(8), "SELECT NumIntDocAporte FROM TRVAportePagtoCond WHERE TipoDocDestino= ? AND NumIntDocDestino = ? ", _
                        0, lNumIntDocAporte, iTipoDestino, lNumIntDocDestino)
            If lErro <> AD_SQL_SUCESSO Then gError 192044
        
            'Busca Primeiro
            lErro = Comando_BuscarPrimeiro(alComando(8))
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192045
            
            Do While lErro = AD_SQL_SUCESSO
            
                Set objAporte = New ClassTRVAportes
                
                objAporte.lNumIntDoc = lNumIntDocAporte
                
                lErro = CF("TRVAportes_Le", objAporte, False)
                If lErro <> SUCESSO And lErro <> ERRO_LEITURA_SEM_DADOS Then gError 192046
            
                If iTipoDestino = TRV_TIPO_DOC_DESTINO_CREDFORN Then gError 192047
                If iTipoDestino = TRV_TIPO_DOC_DESTINO_DEBCLI Then gError 192048
        
                'Trava registro contra alterações/Leituras
                lErro = Comando_LockExclusive(alComando(8))
                If lErro <> SUCESSO Then gError 192049
            
                lErro = Comando_ExecutarPos(alComando(9), "UPDATE TRVAportePagtoCond SET TipoDocDestino= ?, NumIntDocDestino=? ", alComando(8), 0, 0)
                If lErro <> AD_SQL_SUCESSO Then gError 192050
                
                'Busca Próximo
                lErro = Comando_BuscarProximo(alComando(8))
                If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192051
                
            Loop
            
            'Devolve o saldo dos créditos utilizados em descontos
            If iTipoDestino = TRV_TIPO_DOC_DESTINO_TITREC Then
            
                'Le as informações do faturamento
                lErro = Comando_Executar(alComando(16), "SELECT A.ValorAporte, A.NumIntDocCredito FROM TRVTitulosExp AS T, TRVTitulosExpAporte AS A  WHERE T.NumIntDoc = A.NumIntDocTitExp AND T.TipoDocOrigem = ? AND T.NumIntDocOrigem = ? AND T.Excluido = ? AND A.NumIntDocCredito <> ? ", _
                            dValorAporteCred, lNumIntDocCredito, iTipoDestino, lNumIntDocDestino, DESMARCADO, 0)
                If lErro <> AD_SQL_SUCESSO Then gError 192036
            
                'Busca Primeiro
                lErro = Comando_BuscarPrimeiro(alComando(16))
                If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192037
            
                'Se recebeu um aporte via crédito tem que devolver o saldo
                Do While lErro = AD_SQL_SUCESSO
            
                    Set objDebitoRecCli = New ClassDebitoRecCli
        
                    objDebitoRecCli.lNumIntDoc = lNumIntDocCredito
                    objDebitoRecCli.iFilialEmpresa = FILIAL_MATRIZ
                    
                    'Lê os dados para dos Débitos
                    lErro = CF("DebitoReceber_Le", objDebitoRecCli)
                    If lErro <> SUCESSO And lErro <> 17835 Then gError 192784
                
                    'Altera o saldo do Débito a Receber
                    lErro = CF("DebitoRecCli_AlterarSaldo", objDebitoRecCli, dValorAporteCred)
                    If lErro <> SUCESSO Then gError 192784
                    
                    'Busca Próximo
                    lErro = Comando_BuscarProximo(alComando(16))
                    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192037
                    
                Loop
            
                'Exclui as informações específicas de Títulos a Receber da Travel Ace
                lErro = CF("TitulosRecTRV_Exclui", lNumIntDocDestino, objFaturaTRV)
                If lErro <> SUCESSO Then gError 192784
                
            End If
        
        End If
        
        'Libera os dados se for um OCRC
        If iTipoDestino = TRV_TIPO_DOC_DESTINO_TITPAG Then
        
            If objDestino.sSiglaDocumento = TIPODOC_FATURA_OCR_COBR Then
    
                lErro = Comando_ExecutarPos(alComando(31), "SELECT NumIntDoc FROM TRVOcrCasos WHERE NumIntDocTitPagCobertura= ? ", _
                            0, lNumIntDocOCR, lNumIntDocDestino)
                If lErro <> AD_SQL_SUCESSO Then gError 208776
            
                'Busca Primeiro
                lErro = Comando_BuscarPrimeiro(alComando(31))
                If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 208777
                
                If lErro = AD_SQL_SUCESSO Then
            
                    'Trava registro contra alterações/Leituras
                    lErro = Comando_LockExclusive(alComando(31))
                    If lErro <> SUCESSO Then gError 208778
                
                    lErro = Comando_ExecutarPos(alComando(32), "UPDATE TRVOcrCasos SET NumIntDocTitPagCobertura = ?, NumFatCobertura = ?, DataEnvioFinac = ?", alComando(31), 0, 0, DATA_NULA)
                    If lErro <> AD_SQL_SUCESSO Then gError 208779
                    
                    lErro = Comando_ExecutarPos(alComando(37), "SELECT NumIntDocTitRecReembolso FROM TRVOcrCasosPreRec WHERE NumIntDocOcrCaso= ? ", _
                                0, lNumIntDoc, lNumIntDocOCR)
                    If lErro <> AD_SQL_SUCESSO Then gError 208789
                
                    'Busca Primeiro
                    lErro = Comando_BuscarPrimeiro(alComando(37))
                    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 208790
                    
                    If lErro = AD_SQL_SUCESSO Then
                                
                        'Trava registro contra alterações/Leituras
                        lErro = Comando_LockExclusive(alComando(37))
                        If lErro <> SUCESSO Then gError 208791
                        
                        If lNumIntDoc <> 0 Then gError 208792
                    
                        lErro = Comando_ExecutarPos(alComando(38), "DELETE TRVOcrCasosPreRec ", alComando(37))
                        If lErro <> AD_SQL_SUCESSO Then gError 208793
                        
                    End If
                      
                End If
        
            'Libera os dados se for um OCRJ
            ElseIf objDestino.sSiglaDocumento = TIPODOC_FATURA_OCR_JURI Then
    
                lErro = Comando_ExecutarPos(alComando(33), "SELECT NumIntDoc FROM TRVOcrCasos WHERE NumIntDocTitPagProcesso= ? ", _
                            0, lNumIntDocOCR, lNumIntDocDestino)
                If lErro <> AD_SQL_SUCESSO Then gError 208780
            
                'Busca Primeiro
                lErro = Comando_BuscarPrimeiro(alComando(33))
                If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 208781
                
                If lErro = AD_SQL_SUCESSO Then
            
                    'Trava registro contra alterações/Leituras
                    lErro = Comando_LockExclusive(alComando(33))
                    If lErro <> SUCESSO Then gError 208782
                
                    lErro = Comando_ExecutarPos(alComando(34), "UPDATE TRVOcrCasos SET NumIntDocTitPagProcesso = ?, NumFatProcesso = ?", alComando(33), 0, 0)
                    If lErro <> AD_SQL_SUCESSO Then gError 208783
                    
                End If
                
            End If

        End If
        
        'Libera os dados se for um OCRR
        If iTipoDestino = TRV_TIPO_DOC_DESTINO_TITREC Then
        
            If objDestino.sSiglaDocumento = TIPODOC_FATURA_OCR_REEM Then

                lErro = Comando_ExecutarPos(alComando(35), "SELECT NumIntDocOcrCaso FROM TRVOcrCasosPreRec WHERE NumIntDocTitRecReembolso= ? ", _
                            0, lNumIntDocOCR, lNumIntDocDestino)
                If lErro <> AD_SQL_SUCESSO Then gError 208784
            
                'Busca Primeiro
                lErro = Comando_BuscarPrimeiro(alComando(35))
                If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 208785
                
                Do While lErro = AD_SQL_SUCESSO
            
                    'Trava registro contra alterações/Leituras
                    lErro = Comando_LockExclusive(alComando(35))
                    If lErro <> SUCESSO Then gError 208786
                
                    lErro = Comando_ExecutarPos(alComando(36), "UPDATE TRVOcrCasosPreRec SET NumIntDocTitRecReembolso = ?, NumFatTitRecReembolso = ?", alComando(35), 0, 0)
                    If lErro <> AD_SQL_SUCESSO Then gError 208787
                    
                    'Busca Próximo
                    lErro = Comando_BuscarProximo(alComando(35))
                    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 208788
                    
                Loop
                
            End If

        End If
        
        Set objTRVTitulos = New ClassTRVTitulos
        
        objTRVTitulos.iTipoDocOrigem = iTipoDestino
        objTRVTitulos.lNumIntDocOrigem = lNumIntDocDestino
        
        lErro = CF("TRVTitulos_Exclui", objTRVTitulos, alComando(28), alComando(29))
        If lErro <> SUCESSO Then gError 196240
        
        'Fecha Comando
        For iIndice = LBound(alComando) To UBound(alComando)
            Call Comando_Fechar(alComando(iIndice))
        Next
        
    End If
   
    Trata_Exclusao_Do_Destino = SUCESSO

    Exit Function

Erro_Trata_Exclusao_Do_Destino:

    Trata_Exclusao_Do_Destino = gErr

    Select Case gErr
        
        Case 192022
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 192023, 192024, 192028
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVVOUCHERS", gErr)
        
        Case 192025
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVVOUCHERS", gErr)
        
        Case 192026
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVVOUCHERS", gErr)
            
        Case 192027, 192038, 192046, 192784, 196241, 200197
            
        Case 192029, 192030, 192033
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVOCORRENCIAS", gErr)
        
        Case 192031
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVOCORRENCIAS", gErr)
        
        Case 192032
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVOCORRENCIAS", gErr)
            
        Case 192034
            Call Rotina_Erro(vbOKOnly, "ERRO_CRED_VINC_ORC", gErr, lCodigo)
        
        Case 192035
            Call Rotina_Erro(vbOKOnly, "ERRO_DEB_VINC_OCR", gErr, lCodigo)
                    
        Case 192036, 192037, 192043
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVAPORTEPAGTODIRETO", gErr)
        
        Case 192039
            Call Rotina_Erro(vbOKOnly, "ERRO_CRED_VINC_APORTE", gErr, objAporte.lCodigo)
        
        Case 192040
            Call Rotina_Erro(vbOKOnly, "ERRO_DEB_VINC_APORTE", gErr, objAporte.lCodigo)
        
        Case 192041
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVAPORTEPAGTODIRETO", gErr)
        
        Case 192042
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVAPORTEPAGTODIRETO", gErr)
            
        Case 192044, 192045, 192051
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVAPORTEPAGTOCOND", gErr)
        
        Case 192047
            Call Rotina_Erro(vbOKOnly, "ERRO_CRED_VINC_APORTE", gErr, objAporte.lCodigo)
        
        Case 192048
            Call Rotina_Erro(vbOKOnly, "ERRO_DEB_VINC_APORTE", gErr, objAporte.lCodigo)
        
        Case 192049
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVAPORTEPAGTOCOND", gErr)
        
        Case 192050
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVAPORTEPAGTOCOND", gErr)
            
        Case 196381, 196382, 196385
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVVOUCHERINFO", gErr)
        
        Case 196383
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVVOUCHERINFO", gErr)
        
        Case 196384
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVVOUCHERINFO", gErr)
            
        Case 196393
            
        Case 196490
            Call Rotina_Erro(vbOKOnly, "ERRO_TRV_CANC_FAT_TELA", gErr)
        
        Case 196491
            Call Rotina_Erro(vbOKOnly, "ERRO_MOTIVO_NAO_INFORMADO", gErr)
            
        Case 208776, 208777, 208780, 208781, 208784, 208785, 208788, 208789, 208790
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVOCRCASOS", gErr)
        
        Case 208778, 208782, 208786, 208791
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVOCRCASOS", gErr)
            
        Case 208779, 208783, 208787, 208793
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVOCRCASOS", gErr)
            
        Case 208792
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVOCRCASOS_JA_REEMBOLSADO", gErr)
            
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 192052)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next
    
    Call Comando_Fechar(lComando)

    Exit Function

End Function

Private Function TRVAportePagtoFat_Acerta_Saldo(ByVal lComando1 As Long, ByVal lComando2 As Long, ByVal lComando3 As Long, ByVal lComando4 As Long, ByVal iTipoAporte As Integer, ByVal lNumIntDocAportePagto As Long, ByVal dValorUsado As Double) As Long

Dim lErro As Long
Dim dSaldo As Double
Dim dValor As Double

On Error GoTo Erro_TRVAportePagtoFat_Acerta_Saldo

    If lNumIntDocAportePagto <> 0 And dValorUsado <> 0 Then
    
        If iTipoAporte = TRV_TIPO_APORTE_SOBREFATURA Then
   
            'Acerta o saldo do aporte
            lErro = Comando_ExecutarPos(lComando1, "SELECT Valor, Saldo  FROM TRVAportePagtoFat WHERE NumIntDoc= ? ", 0, dValor, dSaldo, lNumIntDocAportePagto)
            If lErro <> AD_SQL_SUCESSO Then gError 192011
        
            'Busca Primeiro
            lErro = Comando_BuscarPrimeiro(lComando1)
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192012
            
            If lErro = AD_SQL_SEM_DADOS Then gError 192017
        
            'Trava registro contra alterações/Leituras
            lErro = Comando_LockExclusive(lComando1)
            If lErro <> SUCESSO Then gError 192013
            
            dSaldo = dSaldo - dValorUsado
            
            If dSaldo < -DELTA_VALORMONETARIO2 Then gError 192015
            If dSaldo > dValor + DELTA_VALORMONETARIO Then gError 192019
            
            dSaldo = Arredonda_Moeda(dSaldo, 4)
        
            lErro = Comando_ExecutarPos(lComando2, "UPDATE TRVAportePagtoFat SET Saldo = ? ", lComando1, dSaldo)
            If lErro <> AD_SQL_SUCESSO Then gError 192014
        
        Else
        
            'Acerta o saldo do aporte
            lErro = Comando_ExecutarPos(lComando3, "SELECT Valor FROM TRVAportePagtoFatCond WHERE NumIntDoc= ? ", 0, dValor, lNumIntDocAportePagto)
            If lErro <> AD_SQL_SUCESSO Then gError 192011
        
            'Busca Primeiro
            lErro = Comando_BuscarPrimeiro(lComando3)
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192012
            
            If lErro = AD_SQL_SEM_DADOS Then gError 192017
        
            'Trava registro contra alterações/Leituras
            lErro = Comando_LockExclusive(lComando3)
            If lErro <> SUCESSO Then gError 192013
            
            dValor = dValor + dValorUsado
            
            dValor = Arredonda_Moeda(dValor, 4)
        
            lErro = Comando_ExecutarPos(lComando4, "UPDATE TRVAportePagtoFatCond SET Valor = ? ", lComando3, dValor)
            If lErro <> AD_SQL_SUCESSO Then gError 192014
        
        End If
    
    End If

    TRVAportePagtoFat_Acerta_Saldo = SUCESSO

    Exit Function

Erro_TRVAportePagtoFat_Acerta_Saldo:

    TRVAportePagtoFat_Acerta_Saldo = gErr

    Select Case gErr

        Case 192011, 192012
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVAPORTEPAGTOFAT", gErr)
        
        Case 192013
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVAPORTEPAGTOFAT", gErr)
        
        Case 192014
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVAPORTEPAGTOFAT", gErr)

        Case 192015
            Call Rotina_Erro(vbOKOnly, "ERRO_APORTE_SALDO_NEGATIVO", gErr, lNumIntDocAportePagto)
            
        Case 192017
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVAPORTEPAGTOFAT_NAO_CADASTRADO", gErr, lNumIntDocAportePagto)

        Case 192019
            Call Rotina_Erro(vbOKOnly, "ERRO_APORTE_SALDO_MAIOR_VALOR", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 192020)

    End Select

    Exit Function

End Function

Private Function TRVAportes_Acerta_ProxParcela(ByVal lComando1 As Long, ByVal lComando2 As Long, ByVal lCodigoAporte As Long, ByRef iParcela As Integer) As Long

Dim lErro As Long
Dim iProxParcela As Integer

On Error GoTo Erro_TRVAportes_Acerta_ProxParcela

     'Acerta o saldo do aporte
     lErro = Comando_ExecutarPos(lComando1, "SELECT ProxParcela FROM TRVAportes WHERE Codigo= ? ", 0, iParcela, lCodigoAporte)
     If lErro <> AD_SQL_SUCESSO Then gError 196470
 
     'Busca Primeiro
     lErro = Comando_BuscarPrimeiro(lComando1)
     If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196471
     
     If lErro = AD_SQL_SEM_DADOS Then gError 196472
 
     'Trava registro contra alterações/Leituras
     lErro = Comando_LockExclusive(lComando1)
     If lErro <> SUCESSO Then gError 196473
     
     iProxParcela = iParcela + 1
 
     lErro = Comando_ExecutarPos(lComando2, "UPDATE TRVAportes SET ProxParcela = ? ", lComando1, iProxParcela)
     If lErro <> AD_SQL_SUCESSO Then gError 196474

    TRVAportes_Acerta_ProxParcela = SUCESSO

    Exit Function

Erro_TRVAportes_Acerta_ProxParcela:

    TRVAportes_Acerta_ProxParcela = gErr

    Select Case gErr

        Case 196470, 196471
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVAPORTES", gErr)
        
        Case 196472
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVAPORTES_NAO_CADASTRADO", gErr, lCodigoAporte)
        
        Case 196473
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVAPORTES", gErr)
        
        Case 196474
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVAPORTES", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 196475)

    End Select

    Exit Function

End Function

Function TRVConfig_Grava(ByVal colConfigs As Collection) As Long
'grava na tabela TRVConfig uma colecao de registros de configuracao

Dim lErro As Long
Dim lTransacao As Long

On Error GoTo Erro_TRVConfig_Grava
    
    'Abrir transacao
    lTransacao = Transacao_Abrir()
    If lTransacao = 0 Then gError 192072

    lErro = TRVConfig_Grava_Trans(colConfigs)
    If lErro <> SUCESSO Then gError 192073

    'Fechar transacao
    lErro = Transacao_Commit()
    If lErro <> AD_SQL_SUCESSO Then gError 192074
          
    TRVConfig_Grava = SUCESSO
    
    Exit Function
    
Erro_TRVConfig_Grava:
    
    TRVConfig_Grava = gErr
    
    Select Case gErr
    
        Case 192072
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_TRANSACAO", gErr)

        Case 192073

        Case 192074
            Call Rotina_Erro(vbOKOnly, "ERRO_COMMIT", gErr)
        
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error$, 192075)
            
    End Select
    
    Call Transacao_Rollback
    
    Exit Function
    
End Function

Public Function TRVConfig_Grava_Trans(ByVal colConfigs As Collection) As Long

Dim lErro As Long
Dim iIndice As Integer
Dim alComando(1 To 2) As Long
Dim objTRVConfig As ClassTRVConfig
Dim sConteudo As String

On Error GoTo Erro_TRVConfig_Grava_Trans
    
    'abrir comandos
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 192076
    Next
    
   'para cada elemento da colecao
    For Each objTRVConfig In colConfigs
    
        'inicializar buffer
        sConteudo = String(STRING_CONFIG_CONTEUDO, 0)
        
        'ler registo
        lErro = Comando_ExecutarPos(alComando(1), "SELECT Conteudo FROM TRVConfig WHERE Codigo = ? AND FilialEmpresa = ?", 0, sConteudo, objTRVConfig.sCodigo, objTRVConfig.iFilialEmpresa)
        If lErro <> AD_SQL_SUCESSO Then gError 192077
        
        'Lê o primeiro registro
        lErro = Comando_BuscarPrimeiro(alComando(1))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192078
        
        'Se não encontrou o registro
        If lErro = AD_SQL_SEM_DADOS Then gError 192079
        
        'Trava registro contra alterações/Leituras
        lErro = Comando_LockExclusive(alComando(1))
        If lErro <> SUCESSO Then gError 192250
            
        lErro = Comando_ExecutarPos(alComando(2), "UPDATE TRVConfig SET Conteudo = ?", alComando(1), objTRVConfig.sConteudo)
        If lErro <> AD_SQL_SUCESSO Then gError 192080

    Next
    
   'fechar comandos
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next
          
    TRVConfig_Grava_Trans = SUCESSO
    
    Exit Function
    
Erro_TRVConfig_Grava_Trans:
    
    TRVConfig_Grava_Trans = gErr
    
    Select Case gErr
    
        Case 192076
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)
            
        Case 192077, 192078
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVCONFIG", gErr)

        Case 192079
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVCONFIG_INEXISTENTE", gErr, objTRVConfig.sCodigo, objTRVConfig.iFilialEmpresa)
        
        Case 192080
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVCONFIG", gErr)
            
        Case 192250
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCK_TRVCONFIG", gErr)
        
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error$, 192081)
            
    End Select
    
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next
    
    Exit Function
    
End Function

Public Function TRVConfig_Grava_Lockado(ByVal lComando1 As Long, ByVal lComando2 As Long, ByVal objTRVConfig As ClassTRVConfig) As Long

Dim lErro As Long

On Error GoTo Erro_TRVConfig_Grava_Lockado
 
    lErro = Comando_ExecutarPos(lComando2, "UPDATE TRVConfig SET Conteudo = ?", lComando1, objTRVConfig.sConteudo)
    If lErro <> AD_SQL_SUCESSO Then gError 194251
          
    TRVConfig_Grava_Lockado = SUCESSO
    
    Exit Function
    
Erro_TRVConfig_Grava_Lockado:
    
    TRVConfig_Grava_Lockado = gErr
    
    Select Case gErr

        Case 194251
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVCONFIG", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error$, 194252)
            
    End Select
    
    Exit Function
    
End Function


Function Gera_Arquivo_Html(ByVal objTela As Object, ByVal sModelo As String, ByVal sArquivo As String, sConteudoHtml As String) As Long

Dim lErro As Long
Dim objTS1 As TextStream
Dim objTS2 As TextStream
Dim objFSO As New FileSystemObject
Dim sRegistro As String
Dim bArqAberto1 As Boolean
Dim bArqAberto2 As Boolean
Dim lPos1 As Long
Dim lPos2 As Long
Dim objMnemonicoValor As ClassMnemonicoValor
Dim sValorTexto As String
Dim iTeste As Integer
Dim lLinha As Long, sAux As String

On Error GoTo Erro_Gera_Arquivo_Html

    iTeste = MARCADO

    lErro = objTela.Inicializa_Fatura
    If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM

    If Len(Trim(sModelo)) > 0 Then
    
        bArqAberto1 = False
        
        Set objTS1 = objFSO.OpenTextFile(sModelo, IOMode.ForReading, False)
        bArqAberto1 = True

        bArqAberto2 = False
        If iTeste <> MARCADO Then
            Set objTS2 = objFSO.OpenTextFile(sArquivo, IOMode.ForWriting, True)
        Else
            Open sArquivo For Output As #17
        End If
        bArqAberto2 = True

        'Até chegar ao fim do arquivo
        Do While Not objTS1.AtEndOfLine
        
            'Busca o próximo registro do arquivo
            sRegistro = objTS1.ReadAll
             
            lPos1 = InStr(1, sRegistro, "ZZZ")
             
            Do While lPos1 <> 0
             
                lPos2 = InStr(lPos1 + 3, sRegistro, "ZZZ")
                 
                Set objMnemonicoValor = New ClassMnemonicoValor
                Set objMnemonicoValor.colValor = New Collection
                 
                objMnemonicoValor.sMnemonico = Mid(sRegistro, lPos1 + 3, lPos2 - lPos1 - 3)
                 
                lErro = objTela.Calcula_Mnemonico(objMnemonicoValor, sValorTexto)
                If lErro <> SUCESSO Then gError 192209
             
                sRegistro = Replace(sRegistro, "ZZZ" & objMnemonicoValor.sMnemonico & "ZZZ", sValorTexto)
                
                lPos1 = InStr(lPos1 + Len(sValorTexto), sRegistro, "ZZZ")
            Loop
            
            'MsgBox "Vai escrever o html"
            If iTeste <> MARCADO Then
                objTS2.Write sRegistro
            Else
                Print #17, sRegistro
            End If
            
            sConteudoHtml = sRegistro

        Loop
        
        objTS1.Close
        bArqAberto1 = False
        If iTeste <> MARCADO Then
            objTS2.Close
        Else
            Close #17
        End If
        bArqAberto2 = False
    End If

    Gera_Arquivo_Html = SUCESSO

    Exit Function

Erro_Gera_Arquivo_Html:

    'MsgBox "Erro na linha " & CStr(llinha)

    Gera_Arquivo_Html = gErr

    Select Case gErr
    
        Case 53 'ERRO_ARQUIVO_FTP_NAO_ENCONTRADO
            Call Rotina_Erro(vbOKOnly, "ERRO_ARQUIVO_FTP_NAO_ENCONTRADO", gErr, sModelo)
            
        Case 192209
        
        Case ERRO_SEM_MENSAGEM

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 192193)

    End Select
    
    'fechar aquivo texto
    If bArqAberto1 Then
        objTS1.Close
    End If

    'fechar aquivo texto
    If bArqAberto2 Then
        If iTeste <> MARCADO Then
            objTS2.Close
        Else
            Close #17
        End If
    End If

    Exit Function

End Function

Function TRVFaturamento_Envia_PorEmail(ByVal objFaturamento As ClassTRVFaturamento, ByVal colParcelas As Collection) As Long

Dim lErro As Long
Dim objParcelaRec As ClassParcelaReceber
Dim objCobrancaSel As New ClassCobrancaPorEmailSel

On Error GoTo Erro_TRVFaturamento_Envia_PorEmail

    For Each objParcelaRec In colParcelas
    
        lErro = CF("ParcelaReceber_Le", objParcelaRec)
        If lErro <> SUCESSO And lErro <> 19147 Then gError 185994

        objCobrancaSel.colParcelas.Add objParcelaRec

    Next
    
    objCobrancaSel.iFaturamento = MARCADO
    objCobrancaSel.lModeloForcado = objFaturamento.lModelo
    
    Call Chama_Tela("AvisoCobrPorEmail", TIPOTELA_EMAIL_AVISO_COBRANCA, objCobrancaSel)

    TRVFaturamento_Envia_PorEmail = SUCESSO

    Exit Function

Erro_TRVFaturamento_Envia_PorEmail:

    TRVFaturamento_Envia_PorEmail = gErr

    Select Case gErr
    
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 192210)

    End Select
    

    Exit Function

End Function

Function TRVFaturamento_Envia_PorEmail_CP(ByVal objFaturamento As ClassTRVFaturamento, ByVal colNFsPag As Collection) As Long

Dim lErro As Long
Dim objNFsPag As ClassNFsPag
Dim objCobrancaSel As New ClassCobrancaPorEmailSel

On Error GoTo Erro_TRVFaturamento_Envia_PorEmail_CP

    For Each objNFsPag In colNFsPag
        objCobrancaSel.colParcelas.Add objNFsPag
    Next
    
    objCobrancaSel.iFaturamento = MARCADO
    objCobrancaSel.lModeloForcado = objFaturamento.lModelo
    
    Call Chama_Tela("CobrancaFaturaPorEmail", TIPOTELA_EMAIL_COBRANCA_FATURA, objCobrancaSel)

    TRVFaturamento_Envia_PorEmail_CP = SUCESSO

    Exit Function

Erro_TRVFaturamento_Envia_PorEmail_CP:

    TRVFaturamento_Envia_PorEmail_CP = gErr

    Select Case gErr
    
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 192210)

    End Select
    

    Exit Function

End Function

Public Function TRV_NF_Gera(ByVal objGeracaoNF As ClassTRVGeracaoNF) As Long

Dim lErro As Long
Dim lTransacao As Long
Dim alComando(0 To 55) As Long
Dim iIndice As Integer

On Error GoTo Erro_TRV_NF_Gera

    'Abertura de transação
    lTransacao = Transacao_Abrir()
    If lTransacao = 0 Then gError 192283
    
    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 192284
    Next

    'desativa os locks dos comandos a seguir
    lErro = Conexao_DesativarLocks(DESATIVAR_LOCKS)
    If lErro <> SUCESSO Then gError 192285

    lErro = TRV_NF_Gera_EmTrans(alComando, objGeracaoNF)
    If lErro <> SUCESSO Then gError 192285

    'reativa os locks
    lErro = Conexao_DesativarLocks(REATIVAR_LOCKS)
    If lErro <> SUCESSO Then gError 192285

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next
   
    'Confirma a transação
    lErro = Transacao_Commit()
    If lErro <> AD_SQL_SUCESSO Then gError 192286
        
    TRV_NF_Gera = SUCESSO

    Exit Function

Erro_TRV_NF_Gera:

    TRV_NF_Gera = gErr

    Select Case gErr
        
        Case 192283
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)
        
        Case 192284
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_TRANSACAO", gErr)

        Case 192285

        Case 192286
            Call Rotina_Erro(vbOKOnly, "ERRO_COMMIT", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 192287)

    End Select
    
    'reativa os locks
    Call Conexao_DesativarLocks(REATIVAR_LOCKS)
    
    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    'Desfaz Transação
    Call Transacao_Rollback

    Exit Function

End Function

Private Function TRV_NF_Gera_EmTrans(alComando() As Long, ByVal objGeracaoNF As ClassTRVGeracaoNF) As Long

Dim lErro As Long
Dim objNF As ClassNFiscal
Dim objItemNF As ClassItemNF
Dim objTituloRec As ClassTituloReceber
Dim iIndice As Integer
Dim dComissao As Double
Dim lNumVou As Long
Dim sSerie As String
Dim sTipoDoc As String
Dim lNumNotaAnt As Long
Dim lNumIntDocItemNF As Long
Dim lNumNota As Long
Dim iFilialEmpresaAnt As Integer
Dim lNumIntDoc As Long
Dim iProxComando As Integer
Dim objNFTRV As ClassNFTRV
Dim iFilialEmpAnt As Integer
Dim objFilialEmpresa As AdmFiliais
Dim colFiliais As New Collection
Dim bAchou As Boolean
Dim objFilialCliente As ClassFilialCliente
Dim objEndereco As ClassEndereco
Dim iProxComandoAnt As Integer
Dim objFrmAguarde As New ClassFrmAguarde
Dim objFrmAguardeTela As New FrmAguarde

On Error GoTo Erro_TRV_NF_Gera_EmTrans

    iFilialEmpresaAnt = giFilialEmpresa
    
    iProxComando = 0
    
    objFrmAguarde.iTotalItens = objGeracaoNF.colNF.Count
    Call objFrmAguardeTela.Inicializa_Progressao(objFrmAguarde)
    
    For Each objNF In objGeracaoNF.colNF
    
        Set objNFTRV = objNF.objInfoUsu
        
        bAchou = False
        For Each objFilialEmpresa In colFiliais
            If objFilialEmpresa.iCodFilial = objNF.iFilialEmpresa Then
                bAchou = True
                Exit For
            End If
        Next
        If Not bAchou Then
        
            Set objFilialEmpresa = New AdmFiliais
        
            objFilialEmpresa.iCodFilial = objNF.iFilialEmpresa
        
            'Le os dados da Filial Empresa
            lErro = CF("FilialEmpresa_Le", objFilialEmpresa)
            If lErro <> SUCESSO And lErro <> 27378 Then gError 196817
            
        End If
        
        Set objNFTRV.objFilialEmpresa = objFilialEmpresa
        
        Set objFilialCliente = New ClassFilialCliente
        Set objEndereco = New ClassEndereco
        
        objFilialCliente.lCodCliente = objNF.lCliente
        objFilialCliente.iCodFilial = objNF.iFilialCli
        
        lErro = CF("FilialCliente_Le", objFilialCliente, alComando(iProxComando))
        If lErro <> SUCESSO And lErro <> 12567 Then gError 196818
                
        objEndereco.lCodigo = objFilialCliente.lEndereco
        
        lErro = CF("Endereco_Le", objEndereco, alComando(iProxComando + 1))
        If lErro <> SUCESSO Then gError 196819
        
        Set objNFTRV.objFilialCliente = objFilialCliente
        Set objNFTRV.objEnderecoCli = objEndereco
        
    Next
    
    iProxComando = iProxComando + 1
    iProxComandoAnt = iProxComando
    
    iIndice = 0
    For Each objNF In objGeracaoNF.colNF
    
        giFilialEmpresa = objNF.iFilialEmpresa

        lNumNotaAnt = objNF.lNumNotaFiscal
        objNF.lNumNotaFiscal = 0
        
        If objNF.iFilialEmpresa = FILIAL_MATRIZ Or objNF.iFilialEmpresa = 2 Or objNF.iFilialEmpresa = 4 Or objNF.iFilialEmpresa = 6 Or objNF.iFilialEmpresa = 7 Then
            objNF.iRecibo = MARCADO
        End If
        
        iProxComando = iProxComandoAnt
    
        lErro = NF_NFiscal_Grava_TRV(alComando(), objNF, iProxComando)
        If lErro <> SUCESSO Then gError 192289
        
        If lNumNotaAnt <> objNF.lNumNotaFiscal Then gError 192290
        
        For Each objItemNF In objNF.ColItensNF
        
            iIndice = iIndice + 1
            
            Set objTituloRec = objGeracaoNF.colTitulos.Item(iIndice)
            
            If Abs(objItemNF.dValorTotal - objTituloRec.dValor) > DELTA_VALORMONETARIO Then gError 192299
            
            'Busca os vouchers da fatura para poder calcular a comissão
            lErro = Comando_Executar(alComando(iProxComando + 2), "SELECT X.NumIntDocItemNF, N.NumNotaFiscal FROM TRVItemNotaTitulo AS X, ItensNFiscal AS I, NFiscal AS N WHERE N.NumIntDoc = I.NumIntNF AND N.Status <> 7 AND I.NumIntDoc = X.NumIntDocItemNF AND X.NumIntDocTitulo = ? ", lNumIntDocItemNF, lNumNota, objTituloRec.lNumIntDoc)
            If lErro <> AD_SQL_SUCESSO Then gError 192300
            
            lErro = Comando_BuscarPrimeiro(alComando(iProxComando + 2))
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192301
            
            If lErro = AD_SQL_SUCESSO Then gError 192302
            
            lErro = Comando_Executar(alComando(iProxComando), "INSERT INTO TRVItemNotaTitulo (NumIntDocItemNF,NumIntDocTitulo) VALUES (?,?)", objItemNF.lNumIntDoc, objTituloRec.lNumIntDoc)
            If lErro <> AD_SQL_SUCESSO Then gError 192291
            
            sSerie = String(STRING_TRV_OCR_SERIE, 0)
            sTipoDoc = String(STRING_TRV_OCR_TIPODOC, 0)

            'Busca as informações de faturamento no Corporator, se não encontrar desce até o voucher para obter a informação da comissão
            lErro = Comando_Executar(alComando(iProxComando + 4), "SELECT ValorComissao FROM TRVTitulosExp WHERE TipoDocOrigem = ? AND NumIntDocOrigem = ? AND Excluido = ? ", dComissao, TRV_TIPO_DOC_DESTINO_TITREC, objTituloRec.lNumIntDoc, DESMARCADO)
            If lErro <> AD_SQL_SUCESSO Then gError 196820

            lErro = Comando_BuscarPrimeiro(alComando(iProxComando + 4))
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196821

            If lErro <> AD_SQL_SUCESSO Then

                'Verifica as comissões dadas nos vouchers
                lErro = Comando_Executar(alComando(iProxComando + 1), "SELECT SUM(ValorComissao) FROM TRVVouchers WHERE NumFatCoinfo = ? ", dComissao, objTituloRec.lNumTitulo)
                If lErro <> AD_SQL_SUCESSO Then gError 192292
    
                lErro = Comando_BuscarPrimeiro(alComando(iProxComando + 1))
                If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192293
        
            End If
        
        Next
       
        'Obter NumIntDoc
        lErro = CF("Config_ObterNumInt2", alComando(iProxComando + 5), alComando(iProxComando + 6), "TRVConfig", "NUM_INT_PROX_TRVNFSEXP", lNumIntDoc)
        If lErro <> SUCESSO Then gError 196822
   
        lErro = Comando_Executar(alComando(iProxComando + 3), "INSERT INTO TRVNFsExp( NumIntDoc, Usuario, Data, Hora, " & _
                "NumIntDocNF, NumNF, TemQueContabilizar,ValorComissao) VALUES (?,?,?,?,?,?,?,?)", _
                lNumIntDoc, gsUsuario, Date, CDbl(Time), objNF.lNumIntDoc, objNF.lNumNotaFiscal, MARCADO, dComissao)
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196823
    
        Call objFrmAguardeTela.ProcessouItem
        
        If objFrmAguarde.iCancelar = MARCADO Then Exit For

    Next
    
    Set objFrmAguardeTela = Nothing
    If objFrmAguarde.iCancelar = MARCADO Then gError 196784
    
    giFilialEmpresa = iFilialEmpresaAnt

    TRV_NF_Gera_EmTrans = SUCESSO

    Exit Function

Erro_TRV_NF_Gera_EmTrans:

    giFilialEmpresa = iFilialEmpresaAnt

    TRV_NF_Gera_EmTrans = gErr

    Select Case gErr
    
        Case 192289, 192294, 192296 To 192298, 196784
        
        Case 192290
            Call Rotina_Erro(vbOKOnly, "ERRO_NUM_NOTA_DIFERENTE", gErr, lNumNotaAnt, objNF.lNumNotaFiscal)
        
        Case 192291 'INSERT
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_TRVITEMNOTATITULO", gErr)
        
        Case 192292, 192293
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVVOUCHERS", gErr)
        
        Case 192299
            Call Rotina_Erro(vbOKOnly, "ERRO_VALOR_ITEM_ERRADO", gErr, Format(objItemNF.dValorTotal, "STANDARD"), Format(objTituloRec.dValor, "STANDARD"))

        Case 192300, 192301
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVITEMNOTATITULO", gErr)
            
        Case 192302
            Call Rotina_Erro(vbOKOnly, "ERRO_TITULO_JA_COM_NOTA", gErr, objTituloRec.lNumTitulo, lNumNota)

        Case 196817 To 196819, 196822
        
        Case 196820, 196821
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVTITULOSEXP", gErr)
            
        Case 196823
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_TRVNFSEXP", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 192288)

    End Select
    
    If Not (objFrmAguardeTela Is Nothing) Then
        Call objFrmAguardeTela.Trata_Erro
    End If

    Exit Function

End Function

Public Function BaixasParcelaRec_Grava_Customizado(ByVal objTituloRec As ClassTituloReceber, ByVal objParcelaRec As ClassParcelaReceber, ByVal objBaixaParcRec As ClassBaixaParcRec) As Long

Dim lErro As Long
Dim alComando(1 To 17) As Long
Dim iIndice As Integer
Dim lNumVou As Long
Dim sSerie As String
Dim sTipoDoc As String
Dim sTipoVou As String
Dim objOcorrencia As ClassTRVOcorrencias
Dim objOcorrenciaDet As ClassTRVOcorrenciaDet
Dim dValor As Double
Dim lCodigo As Long
Dim objVoucherInfo As ClassTRVVoucherInfo
Dim iCartao As Integer
Dim lCliente As Long
Dim dValorComissao As Double
Dim lNumIntComi As Long
Dim lNumIntDocVouInfo As Long
Dim lNumIntDocVouInfoAux As Long
Dim dtDataVou As Date
Dim sConteudo As String
Dim lNumIntDocNVL As Long
Dim iStatus As Integer
Dim objVouExp As ClassTRVVouExp
Dim dtDataCanc As Date
Dim lClienteVou As Long
Dim dtDataEmiVou As Date, lNumIntDocAux As Long

On Error GoTo Erro_BaixasParcelaRec_Grava_Customizado

    'faz os ajustes em vouchers e documentos associados somente se for um documento gerado pela tela de faturamento
    If objTituloRec.sSiglaDocumento = TIPODOC_CARTAO_CRED_DEB Or objTituloRec.sSiglaDocumento = TIPODOC_FATURA_SERVICO_CR Then
    
         'Abertura de Comando
        For iIndice = LBound(alComando) To UBound(alComando)
            alComando(iIndice) = Comando_Abrir()
            If alComando(iIndice) = 0 Then gError 192308
        Next
    
        sSerie = String(STRING_TRV_OCR_SERIE, 0)
        sTipoDoc = String(STRING_TRV_OCR_TIPODOC, 0)
        sTipoVou = String(STRING_TRV_OCR_TIPOVOU, 0)
    
        'Busca os vouchers cancelados para poder gerar as ocorrências de reembolso
        'lErro = Comando_ExecutarPos(alComando(1), "SELECT NumVou, Serie, TipoDoc, Valor, TipVou, Cartao,Status,NumIntDocNVL, DataCanc, ClienteVou, Data FROM TRVVouchers WHERE TipoDocDestino = ? AND NumIntDocDestino = ? ", 0, lNumVou, sSerie, sTipoDoc, dValor, sTipoVou, iCartao, iStatus, lNumIntDocNVL, dtDataCanc, lClienteVou, dtDataEmiVou, TRV_TIPO_DOC_DESTINO_TITREC, objTituloRec.lNumIntDoc)
        lErro = Comando_Executar(alComando(1), "SELECT NumVou, Serie, TipoDoc, Valor, TipVou, Cartao,Status,NumIntDocNVL, DataCanc, ClienteVou, Data FROM TRVVouchers WHERE TipoDocDestino = ? AND NumIntDocDestino = ? ", lNumVou, sSerie, sTipoDoc, dValor, sTipoVou, iCartao, iStatus, lNumIntDocNVL, dtDataCanc, lClienteVou, dtDataEmiVou, TRV_TIPO_DOC_DESTINO_TITREC, objTituloRec.lNumIntDoc)
        If lErro <> AD_SQL_SUCESSO Then gError 192309
        
        lErro = Comando_BuscarPrimeiro(alComando(1))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192310
    
        'Enquanto existirem vouchers
        Do While lErro <> AD_SQL_SEM_DADOS
        
            If sTipoDoc = TRV_TIPODOC_VOU_TEXTO And objParcelaRec.iNumParcela = 1 Then
                Set objVouExp = New ClassTRVVouExp
                objVouExp.sSerie = sSerie
                objVouExp.sTipVou = sTipoVou
                objVouExp.lNumVou = lNumVou
                objVouExp.dtDataCanc = dtDataCanc
                objVouExp.iTransacao = TRV_EXPORT_VOU_TRANS_PAGTO
                objVouExp.lCliente = lClienteVou
                lErro = TRVVouExp_Insere(alComando(11), alComando(12), alComando(13), alComando(14), alComando(15), alComando(16), objVouExp)
                If lErro <> SUCESSO Then gError 200198
            End If
        
            'Se o voucher foi cancelado  e ainda não teve estorno - > estorna
            If iStatus = STATUS_CANCELADO And lNumIntDocNVL = 0 Then
            
                Set objOcorrencia = New ClassTRVOcorrencias
                Set objOcorrenciaDet = New ClassTRVOcorrenciaDet
                Set objVoucherInfo = New ClassTRVVoucherInfo
                
                objOcorrencia.dtDataEmissao = gdtDataAtual
                objOcorrencia.dValorTotal = -dValor
                objOcorrencia.iFilialCliente = objTituloRec.iFilial
                objOcorrencia.iFormaPagto = FORMAPAGTO_TRV_OCR_FAT
                objOcorrencia.iOrigem = INATIVACAO_AUTOMATICA_CODIGO
                objOcorrencia.iStatus = STATUS_TRV_OCR_BLOQUEADO
                
                lCliente = objTituloRec.lCliente
                
                'Tem que pegar o passageiro
                If iCartao = MARCADO And sTipoDoc = TRV_TIPODOC_VOU_TEXTO Then
                
                    objVoucherInfo.lNumVou = lNumVou
                    objVoucherInfo.sSerie = sSerie
                    objVoucherInfo.sTipo = sTipoVou
        
                    lErro = CF("TRVVoucherInfoSigav_Le", objVoucherInfo)
                    If lErro <> SUCESSO And lErro <> ERRO_LEITURA_SEM_DADOS Then gError 192825
        
                    'VERIFICAR SE O PASSAGEIRO ESTÁ PREENCHIDO
                    If objVoucherInfo.lCliPassageiro = 0 Then
                    
                        'CADASTRAR O PASSAGEIRO E ACERTA A INFORMAÇÃO EM VOUCHERINFO
                        lErro = TRV_VoucherInfo_Cadastra_Cliente_EmTrans(objVoucherInfo)
                        If lErro <> SUCESSO Then gError 192826
            
                    End If
                    
                    lCliente = objVoucherInfo.lCliPassageiro
                
                End If
                                   
                objOcorrencia.lCliente = lCliente
                
                lErro = CF("Config_ObterAutomatico_EmTrans", "FATConfig", "NUM_PROX_TRVOCORRENCIAS", "TRVOcorrencias", "Codigo", lCodigo)
                If lErro <> SUCESSO Then gError 192311
        
                objOcorrencia.lCodigo = lCodigo
                objOcorrencia.lNumVou = lNumVou
                objOcorrencia.sHistorico = "Inativação com base no pagto do título " & CStr(objTituloRec.lNumTitulo) & " filial empresa " & CStr(objTituloRec.iFilialEmpresa) & " e tipo de documento " & objTituloRec.sSiglaDocumento
                objOcorrencia.sSerie = sSerie
                objOcorrencia.sTipoDoc = sTipoVou
                objOcorrencia.sObservacao = ""
                
                objOcorrenciaDet.iTipo = INATIVACAO_AUTOMATICA_TIPO_NVL_CODIGO
                objOcorrenciaDet.iSeq = 1
                objOcorrenciaDet.dValor = -dValor
                
                objOcorrencia.colDetalhamento.Add objOcorrenciaDet
                
                lErro = TRVOcorrencias_Grava_EmTrans(objOcorrencia, False)
                If lErro <> SUCESSO Then gError 192312
                
                'lErro = Comando_ExecutarPos(alComando(2), "UPDATE TRVVouchers SET NumIntDocNVL = ?", alComando(1), objOcorrencia.lNumIntDoc)
                lErro = Comando_Executar(alComando(2), "UPDATE TRVVouchers SET NumIntDocNVL = ? WHERE NumVou = ? AND TipoDoc = ? AND Serie = ? AND TipVou = ?", objOcorrencia.lNumIntDoc, lNumVou, sTipoDoc, sSerie, sTipoVou)
                If lErro <> AD_SQL_SUCESSO Then gError 192314
                
'                'Grava o NVL da comissão em caso de cartão de crédito
'                If iCartao = MARCADO And sTipoDoc = TRV_TIPODOC_VOU_TEXTO And dtDataEmiVou < gdtDataInicioComisCorp Then
'
'                    '[13:07:15] Wagner Luis Carvalhosa de Mello diz :Existe a possibilidade ter vários vouchers em uma fatura de cartão de crédito e só um ser cancelado. Se acontecer o Sigav não me dá informações suficientes para eu saber
'                    '[14:08:57] TRV - Daniel diz :uh!
'                    '[14:09:15] TRV - Daniel diz :então estive pensado nisso hoje cedo, e nunca tivemos um caso assim...
'
'                     'Verifica se o título a receber foi Faturado pelo Corporator
'                    lErro = Comando_Executar(alComando(4), "SELECT NumIntDocNFPagComi, ValorComissao FROM TitulosRecTRV WHERE NumIntDocTitRec = ?", _
'                                lNumIntComi, dValorComissao, objTituloRec.lNumIntDoc)
'                    If lErro <> AD_SQL_SUCESSO Then gError 196270
'
'                    'Busca Primeiro
'                    lErro = Comando_BuscarPrimeiro(alComando(4))
'                    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196271
'
'                    If lErro = AD_SQL_SEM_DADOS Then
'
'                        'buscar a fatura como NFPagar aberto
'                        lErro = Comando_Executar(alComando(5), "SELECT NumIntDoc, ValorTotal FROM NFsPag WHERE FilialEmpresa = ? AND NumNotaFiscal = ? AND Status <> ?", _
'                             lNumIntComi, dValorComissao, objTituloRec.iFilialEmpresa, objTituloRec.lNumTitulo, STATUS_EXCLUIDO)
'                        If lErro <> AD_SQL_SUCESSO Then gError 196272
'
'                        'Busca o primeiro
'                        lErro = Comando_BuscarProximo(alComando(5))
'                        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196273
'
'                        If lErro <> AD_SQL_SUCESSO Then
'
'                            'buscar a fatura como titulo a Pagar baixado
'                            lErro = Comando_Executar(alComando(6), "SELECT  NumIntDoc, ValorTotal FROM NFsPagBaixadas WHERE FilialEmpresa = ? AND NumNotaFiscal = ? AND Status <> ? ", _
'                                 lNumIntComi, dValorComissao, objTituloRec.iFilialEmpresa, objTituloRec.lNumTitulo, STATUS_EXCLUIDO)
'                            If lErro <> AD_SQL_SUCESSO Then gError 196274
'
'                            'Busca o primeiro
'                            lErro = Comando_BuscarProximo(alComando(6))
'                            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196275
'
'                        End If
'
'                    End If
'
'                    If lErro = AD_SQL_SUCESSO Then
'
'                        'Le as comissões associadas a esse item de fatura que não foram geradas
'                        lErro = Comando_Executar(alComando(7), "SELECT C1.ValComi FROM CoinfoComissao AS C1 WHERE NumVou = ? AND Serie = ? AND TipVou = ? AND NumIntDocCorporator = ? ORDER BY C1.NumIntArq DESC, C1.NumRegArqTexto DESC", dValorComissao, lNumVou, sSerie, TRV_TIPODOC_VOU_TEXTO, lNumIntComi)
'                        If lErro <> AD_SQL_SUCESSO Then gError 196278
'
'                        'Busca a primeira
'                        lErro = Comando_BuscarProximo(alComando(7))
'                        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196279
'
'                        If lErro = AD_SQL_SUCESSO Then
'
'                            Set objOcorrencia = New ClassTRVOcorrencias
'                            Set objOcorrenciaDet = New ClassTRVOcorrenciaDet
'
'                            objOcorrencia.dtDataEmissao = gdtDataAtual
'                            objOcorrencia.dValorTotal = dValorComissao
'
'                            objOcorrencia.iFilialCliente = FILIAL_MATRIZ
'                            objOcorrencia.iFormaPagto = FORMAPAGTO_TRV_OCR_FAT
'                            objOcorrencia.iOrigem = INATIVACAO_AUTOMATICA_CODIGO
'                            objOcorrencia.iStatus = STATUS_TRV_OCR_LIBERADO
'                            objOcorrencia.lCliente = objVoucherInfo.lCliente
'
'                            lErro = CF("Config_ObterAutomatico_EmTrans", "FATConfig", "NUM_PROX_TRVOCORRENCIAS", "TRVOcorrencias", "Codigo", lCodigo)
'                            If lErro <> SUCESSO Then gError 196276
'
'                            objOcorrencia.lCodigo = lCodigo
'                            objOcorrencia.lNumVou = lNumVou
'                            objOcorrencia.sHistorico = "Reembolso de comissão de cartão de crédito número " & CStr(objTituloRec.lNumTitulo) & ", Filial Empresa " & CStr(objTituloRec.iFilialEmpresa) & "."
'                            objOcorrencia.sSerie = sSerie
'                            objOcorrencia.sTipoDoc = sTipoVou
'                            objOcorrencia.sObservacao = ""
'
'                            objOcorrenciaDet.iTipo = INATIVACAO_AUTOMATICA_TIPO_NVL_CODIGO
'                            objOcorrenciaDet.iSeq = 1
'
'                            objOcorrenciaDet.dValor = objOcorrencia.dValorTotal
'
'                            objOcorrencia.colDetalhamento.Add objOcorrenciaDet
'
'                            lErro = TRVOcorrencias_Grava_EmTrans(objOcorrencia)
'                            If lErro <> SUCESSO Then gError 196277
'
'                        End If
'
'                    End If
'
'                End If
                
            End If
            
            'If sTipoDoc = TRV_TIPODOC_VOU_TEXTO And objParcelaRec.iNumParcela = 1 Then
            If sTipoDoc = TRV_TIPODOC_VOU_TEXTO Then
            
                'Le as comissões over bloqueadas para esse voucher
                lErro = Comando_Executar(alComando(10), "SELECT NumIntDoc FROM TRVVoucherInfo WITH (NOLOCK) WHERE NumVou= ? AND Serie = ? AND TipVou = ? AND Status = ? ", _
                lNumIntDocAux, lNumVou, sSerie, sTipoVou, TRV_VOU_INFO_STATUS_BLOQUEADO)
                If lErro <> AD_SQL_SUCESSO Then gError 196376
            
                'Busca Primeiro
                lErro = Comando_BuscarPrimeiro(alComando(10))
                If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196377
        
                Do While lErro <> AD_SQL_SEM_DADOS
                    
                    lErro = Comando_Executar(alComando(17), "UPDATE TRVVoucherInfo SET Status = ?, TipoLiberacao = ?, NumIntDocLiberacao = ? WHERE NumIntDoc = ? ", TRV_VOU_INFO_STATUS_LIBERADO, TRV_TIPO_LIBERACAO_COMISSAO_BAIXA, objBaixaParcRec.lNumIntDoc, lNumIntDocAux)
                    If lErro <> AD_SQL_SUCESSO Then gError 196379
                
                    'Busca Próximo
                    lErro = Comando_BuscarProximo(alComando(10))
                    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196380
                
                Loop
                
            End If
        
            lErro = Comando_BuscarProximo(alComando(1))
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192313
            
        Loop
        
'        'FAZ A LIBERAÇÃO DA COMISSÃO PELO CORPORATOR
'        If giVersaoTRV >= TRV_VERSAO_COMISSIONAMENTO Then
'            lErro = Comando_Executar(alComando(10), "UPDATE TRVVouInfoParaBaixa SET Status = ?, TipoLiberacao = ?, NumIntDocLiberacao = ? WHERE TipoDocDestino = ? AND NumIntDocDestino = ? AND Status = ? AND DataEmiVou >= ?", TRV_VOU_INFO_STATUS_LIBERADO, TRV_TIPO_LIBERACAO_COMISSAO_BAIXA, objBaixaParcRec.lNumIntDoc, TRV_TIPO_DOC_DESTINO_TITREC, objTituloRec.lNumIntDoc, TRV_VOU_INFO_STATUS_BLOQUEADO, gdtDataInicioComisCorp)
'            If lErro <> AD_SQL_SUCESSO Then gError 196365
'        End If
        
        'Fecha Comando
        For iIndice = LBound(alComando) To UBound(alComando)
            Call Comando_Fechar(alComando(iIndice))
        Next
        
    End If
        
    BaixasParcelaRec_Grava_Customizado = SUCESSO

    Exit Function

Erro_BaixasParcelaRec_Grava_Customizado:

    BaixasParcelaRec_Grava_Customizado = gErr

    Select Case gErr

        Case 192308
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)
            
        Case 192309, 192310, 192313
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVVOUCHERS", gErr)
            
        Case 192311, 192312, 192825, 192826, 200198
        
        Case 192314
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVVOUCHERS", gErr)
            
        Case 196270, 196271
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TITULOSRECTRV", gErr)
        
        Case 196272, 196273
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_NFSPAG", gErr)
        
        Case 196274, 196275
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_NFSPAGBAIXADAS", gErr)
            
        Case 196276, 196277, 192370

        Case 196278, 196279
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_COINFOCOMISSAO", gErr)
            
        Case 196360 To 196363, 196366
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVVOUCHERINFO", gErr)

        Case 196364
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCK_TRVVOUCHERINFO", gErr)

        Case 196365
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVVOUCHERINFO", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 192313)

    End Select
    
    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Function NFFatPag_Grava(ByVal objTituloPagar As ClassTituloPagar, ByVal colParcelas As colParcelaPagar, ByVal objContabil As ClassContabil) As Long
'Grava Nota Fiscal Fatura a Pagar no BD (nível + alto)

Dim lErro As Long
Dim lTransacao As Long
Dim iIndice As Integer
Dim alComando(0 To 2) As Long
Dim objAporte As New ClassTRVAportes
Dim objAportePagtoCond As New ClassTRVAportePagtoCond
Dim objAportePagtoDireto As New ClassTRVAportePagtoDireto
Dim lNumIntDocPagto As Long

On Error GoTo Erro_NFFatPag_Grava

    'Abre a transação
    lTransacao = Transacao_Abrir()
    If lTransacao = 0 Then gError 192368
    
    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 192369
    Next
    
    lErro = CF("NFFatPag_Grava_EmTrans", objTituloPagar, colParcelas, objContabil)
    If lErro <> SUCESSO Then gError 192370
    
    If Not (objTituloPagar.objInfoUsu Is Nothing) Then
    
        Set objAporte = objTituloPagar.objInfoUsu
        
        If objAporte.lNumIntDocPagto <> 0 Then
        
            objAportePagtoDireto.iTipoDocDestino = TRV_TIPO_DOC_DESTINO_TITPAG
            objAportePagtoDireto.lNumIntDocDestino = objTituloPagar.lNumIntDoc

            lErro = CF("TRVAportePagtoDireto_Le_NumIntDocDestino", objAportePagtoDireto)
            If lErro <> SUCESSO And lErro <> ERRO_LEITURA_SEM_DADOS Then gError 192377
            
            lNumIntDocPagto = objAportePagtoDireto.lNumIntDoc
            
            If lErro = ERRO_LEITURA_SEM_DADOS Then
            
                objAportePagtoCond.iTipoDocDestino = TRV_TIPO_DOC_DESTINO_TITPAG
                objAportePagtoCond.lNumIntDocDestino = objTituloPagar.lNumIntDoc
            
                lErro = CF("TRVAportePagtoCond_Le_NumIntDocDestino", objAportePagtoCond)
                If lErro <> SUCESSO And lErro <> ERRO_LEITURA_SEM_DADOS Then gError 192378
                
                lNumIntDocPagto = objAportePagtoCond.lNumIntDoc
                
            End If
            
            'Título a pagar já vinculado a outro aporte
            If lErro = SUCESSO Then
                If lNumIntDocPagto <> objAporte.lNumIntDocPagto Then gError 192379
            End If
            If objAporte.iTipoPagto = FORMAPAGTO_TRV_APORTE_TIPOPAGTO_DIRETO Then
                
                objAportePagtoDireto.lNumIntDoc = objAporte.lNumIntDocPagto
                                
                lErro = CF("TRVAportePagtoDireto_Le_NumIntDoc", objAportePagtoDireto)
                If lErro <> SUCESSO Then gError 192371
                
                If objAportePagtoDireto.lNumIntDocDestino <> 0 And objAportePagtoDireto.lNumIntDocDestino <> objTituloPagar.lNumIntDoc Then gError 192380
                                
                objAportePagtoDireto.iTipoDocDestino = TRV_TIPO_DOC_DESTINO_TITPAG
                objAportePagtoDireto.lNumIntDocDestino = objTituloPagar.lNumIntDoc
                                
                lErro = TRVAportePagtoDireto_Atualiza(alComando(0), alComando(1), objAportePagtoDireto, objAporte, True)
                If lErro <> SUCESSO Then gError 192372
            Else
                objAportePagtoCond.lNumIntDoc = objAporte.lNumIntDocPagto
            
                lErro = CF("TRVAportePagtoCond_Le_NumIntDoc", alComando(2), objAportePagtoCond)
                If lErro <> SUCESSO Then gError 192373
            
                If objAportePagtoCond.lNumIntDocDestino <> 0 And objAportePagtoCond.lNumIntDocDestino <> objTituloPagar.lNumIntDoc Then gError 192381
                
                objAportePagtoCond.iTipoDocDestino = TRV_TIPO_DOC_DESTINO_TITPAG
                objAportePagtoCond.lNumIntDocDestino = objTituloPagar.lNumIntDoc
            
                lErro = TRVAportePagtoCond_Atualiza(alComando(0), alComando(1), objAportePagtoCond, objAporte)
                If lErro <> SUCESSO Then gError 192374
            End If
            
        End If
        
    End If
    
    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    'Encerra transação
    lErro = Transacao_Commit()
    If lErro <> AD_SQL_SUCESSO Then gError 192375
    
    NFFatPag_Grava = SUCESSO
    
    Exit Function
    
Erro_NFFatPag_Grava:

    NFFatPag_Grava = gErr
    
    Select Case gErr
    
        Case 192368
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_TRANSACAO", gErr)
            
        Case 192369
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)
        
        Case 192370 To 192374, 192377, 192378

        Case 192375
            Call Rotina_Erro(vbOKOnly, "ERRO_COMMIT", gErr)
            
        Case 192379
            Call Rotina_Erro(vbOKOnly, "ERRO_TITPAG_CAD_OUTRO_APORTE", gErr)
            
        Case 192380, 192381
            Call Rotina_Erro(vbOKOnly, "ERRO_APORTE_JA_ASSOCIADO", gErr)
    
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 192376)

    End Select
    
    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next
    
    Call Transacao_Rollback
    
    Exit Function
    
End Function

'ROTINAS CRIADAS AUTOMATICAMENTE PELA TELA BROWSECRIA
'GRAVAÇÃO
Public Function TRVVoucherInfoSigav_Grava(ByVal objTRVVoucherInfo As ClassTRVVoucherInfo, Optional ByVal lConexaoTVA As Long = 0) As Long

Dim lErro As Long
Dim lTransacao As Long

On Error GoTo Erro_TRVVoucherInfoSigav_Grava

    'Abertura de transação
    lTransacao = Transacao_Abrir()
    If lTransacao = 0 Then gError 192608

    lErro = CF("TRVVoucherInfoSigav_Grava_EmTrans", objTRVVoucherInfo, lConexaoTVA)
    If lErro <> SUCESSO Then gError 192609

    'Confirma a transação
    lErro = Transacao_Commit()
    If lErro <> AD_SQL_SUCESSO Then gError 192610

    TRVVoucherInfoSigav_Grava = SUCESSO

    Exit Function

Erro_TRVVoucherInfoSigav_Grava:

    TRVVoucherInfoSigav_Grava = gErr

    Select Case gErr

        Case 192608
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_TRANSACAO", gErr)

        Case 192609

        Case 192610
            Call Rotina_Erro(vbOKOnly, "ERRO_COMMIT", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 192618)

    End Select

    'Desfaz Transação
    Call Transacao_Rollback

    Exit Function

End Function

Public Function TRVVoucherInfoSigav_Grava_EmTrans(ByVal objTRVVoucherInfo As ClassTRVVoucherInfo, Optional ByVal lConexaoTVA As Long = 0) As Long

Dim lErro As Long
Dim alComando(0 To 1) As Long
Dim iIndice As Integer
Dim lNumVou As Long
Dim objVoucher As New ClassTRVVouchers
Dim objFSO As New FileSystemObject
Dim objTS As TextStream
Dim bNovo As Boolean

On Error GoTo Erro_TRVVoucherInfoSigav_Grava_EmTrans

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 192611
    Next

    'Le a tabelaTRVVoucherInfoSigav
    lErro = Comando_ExecutarPos(alComando(0), "SELECT NumVou FROM TRVVoucherInfoSigav WHERE Tipo= ?  AND Serie= ?  AND NumVou= ? ", _
                0, lNumVou, objTRVVoucherInfo.sTipo, objTRVVoucherInfo.sSerie, objTRVVoucherInfo.lNumVou)
    If lErro <> AD_SQL_SUCESSO Then gError 192612

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(0))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192613

    'Se existir => UPDATE, senão => INSERT
    If lErro = AD_SQL_SUCESSO Then
    
        bNovo = False

        'Trava registro contra alterações/Leituras
        lErro = Comando_LockExclusive(alComando(0))
        If lErro <> SUCESSO Then gError 192614

        lErro = Comando_ExecutarPos(alComando(1), "UPDATE TRVVoucherInfoSigav SET DataEmissao= ? , DataRecepcao= ? , Cliente= ? , FornEmissor= ? , " & "Produto= ? , Destino= ? , DataInicio= ? , DataTermino= ? , Vigencia= ? , Idioma= ? , Pax= ? , DestinoVou= ? , Antc= ? , Controle= ? , Convenio= ? , DataPag= ? , Cartao= ? , Pago= ? , NumFat= ? , " & _
                "DataNasc= ? , Sexo= ? , TipoDoc= ? , CartaoFid= ? , Moeda= ? , TarifaUnitaria= ? , Cambio= ? , Valor= ? , TarifaPerc= ? , " & _
                "TarifaValorMoeda= ? , TarifaValorReal= ? , ComissaoPerc= ? , ComissaoValorMoeda= ? , ComissaoValorReal= ? , CartaoPerc= ? , CartaoValorMoeda= ? , CartaoValorReal= ? , OverPerc= ? , OverValorMoeda= ? , " & _
                "OverValorReal= ? , CMRPerc= ? , CMRValorMoeda= ? , CMRValorReal= ? , Cia= ? , Validade= ? , NumeroCC= ? , Titular= ? , ValorCartao= ? , Parcela= ? , " & _
                "Aprovacao= ? , PassageiroSobreNome= ? , PassageiroNome= ? , PassageiroCGC= ? , PassageiroEndereco= ? , PassageiroBairro= ? , PassageiroCidade= ? , PassageiroCEP= ? , PassageiroUF= ? , PassageiroEmail= ? , " & _
                "PassageiroContato= ? , PassageiroTelefone1= ?, PassageiroTelefone2= ?, Grupo= ?, TitularCPF = ? ", alComando(0), _
                objTRVVoucherInfo.dtDataEmissao, objTRVVoucherInfo.dtDataRecepcao, objTRVVoucherInfo.lCliente, objTRVVoucherInfo.lFornEmissor, _
                objTRVVoucherInfo.sProduto, objTRVVoucherInfo.sDestino, objTRVVoucherInfo.dtDataInicio, objTRVVoucherInfo.dtDataTermino, objTRVVoucherInfo.sVigencia, _
                objTRVVoucherInfo.sIdioma, objTRVVoucherInfo.iPax, objTRVVoucherInfo.sDestinoVou, objTRVVoucherInfo.iAntc, objTRVVoucherInfo.sControle, _
                objTRVVoucherInfo.sConvenio, objTRVVoucherInfo.dtDataPag, objTRVVoucherInfo.iCartao, objTRVVoucherInfo.iPago, objTRVVoucherInfo.lNumFat, _
                objTRVVoucherInfo.dtDataNasc, objTRVVoucherInfo.sSexo, objTRVVoucherInfo.sTipoDoc, objTRVVoucherInfo.sCartaoFid, _
                objTRVVoucherInfo.sMoeda, objTRVVoucherInfo.dTarifaUnitaria, objTRVVoucherInfo.dCambio, objTRVVoucherInfo.sValor, objTRVVoucherInfo.dTarifaPerc, _
                objTRVVoucherInfo.dTarifaValorMoeda, objTRVVoucherInfo.dTarifaValorReal, objTRVVoucherInfo.dComissaoPerc, objTRVVoucherInfo.dComissaoValorMoeda, objTRVVoucherInfo.dComissaoValorReal, _
                objTRVVoucherInfo.dCartaoPerc, objTRVVoucherInfo.dCartaoValorMoeda, objTRVVoucherInfo.dCartaoValorReal, objTRVVoucherInfo.dOverPerc, objTRVVoucherInfo.dOverValorMoeda, _
                objTRVVoucherInfo.dOverValorReal, objTRVVoucherInfo.dCMRPerc, objTRVVoucherInfo.dCMRValorMoeda, objTRVVoucherInfo.dCMRValorReal, objTRVVoucherInfo.sCia, _
                objTRVVoucherInfo.sValidade, objTRVVoucherInfo.sNumeroCC, objTRVVoucherInfo.sTitular, objTRVVoucherInfo.dValorCartao, objTRVVoucherInfo.lParcela, _
                objTRVVoucherInfo.sAprovacao, objTRVVoucherInfo.sPassageiroSobreNome, objTRVVoucherInfo.sPassageiroNome, objTRVVoucherInfo.sPassageiroCGC, objTRVVoucherInfo.sPassageiroEndereco, _
                objTRVVoucherInfo.sPassageiroBairro, objTRVVoucherInfo.sPassageiroCidade, objTRVVoucherInfo.sPassageiroCEP, objTRVVoucherInfo.sPassageiroUF, objTRVVoucherInfo.sPassageiroEmail, _
                objTRVVoucherInfo.sPassageiroContato, objTRVVoucherInfo.sPassageiroTelefone1, objTRVVoucherInfo.sPassageiroTelefone2, objTRVVoucherInfo.sGrupo, objTRVVoucherInfo.sTitularCPF)
        If lErro <> AD_SQL_SUCESSO Then gError 192615

    Else
    
        bNovo = True

        lErro = Comando_Executar(alComando(1), "INSERT INTO TRVVoucherInfoSigav( Tipo, Serie, NumVou, DataEmissao, " & _
                "DataRecepcao, Cliente, FornEmissor, Produto, Destino, " & _
                "DataInicio, DataTermino, Vigencia, Idioma, Pax, DestinoVou, Antc, Controle, Convenio, DataPag, " & _
                "Cartao, Pago, NumFat, DataNasc, Sexo, TipoDoc, CartaoFid, Moeda, TarifaUnitaria, " & _
                "Cambio, Valor, TarifaPerc, TarifaValorMoeda, TarifaValorReal, ComissaoPerc, ComissaoValorMoeda, ComissaoValorReal, CartaoPerc, CartaoValorMoeda, " & _
                "CartaoValorReal, OverPerc, OverValorMoeda, OverValorReal, CMRPerc, CMRValorMoeda, CMRValorReal, Cia, Validade, NumeroCC, " & _
                "Titular, ValorCartao, Parcela, Aprovacao, PassageiroSobreNome, PassageiroNome, PassageiroCGC, PassageiroEndereco, PassageiroBairro, PassageiroCidade, " & _
                "PassageiroCEP, PassageiroUF, PassageiroEmail, PassageiroContato, PassageiroTelefone1, PassageiroTelefone2, Grupo,TitularCPF) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)", _
                objTRVVoucherInfo.sTipo, objTRVVoucherInfo.sSerie, objTRVVoucherInfo.lNumVou, objTRVVoucherInfo.dtDataEmissao, _
                objTRVVoucherInfo.dtDataRecepcao, objTRVVoucherInfo.lCliente, objTRVVoucherInfo.lFornEmissor, objTRVVoucherInfo.sProduto, objTRVVoucherInfo.sDestino, _
                objTRVVoucherInfo.dtDataInicio, objTRVVoucherInfo.dtDataTermino, objTRVVoucherInfo.sVigencia, objTRVVoucherInfo.sIdioma, objTRVVoucherInfo.iPax, _
                objTRVVoucherInfo.sDestinoVou, objTRVVoucherInfo.iAntc, objTRVVoucherInfo.sControle, objTRVVoucherInfo.sConvenio, objTRVVoucherInfo.dtDataPag, objTRVVoucherInfo.iCartao, objTRVVoucherInfo.iPago, objTRVVoucherInfo.lNumFat, objTRVVoucherInfo.dtDataNasc, _
                objTRVVoucherInfo.sSexo, objTRVVoucherInfo.sTipoDoc, objTRVVoucherInfo.sCartaoFid, objTRVVoucherInfo.sMoeda, objTRVVoucherInfo.dTarifaUnitaria, objTRVVoucherInfo.dCambio, objTRVVoucherInfo.sValor, objTRVVoucherInfo.dTarifaPerc, objTRVVoucherInfo.dTarifaValorMoeda, objTRVVoucherInfo.dTarifaValorReal, _
                objTRVVoucherInfo.dComissaoPerc, objTRVVoucherInfo.dComissaoValorMoeda, objTRVVoucherInfo.dComissaoValorReal, objTRVVoucherInfo.dCartaoPerc, objTRVVoucherInfo.dCartaoValorMoeda, objTRVVoucherInfo.dCartaoValorReal, objTRVVoucherInfo.dOverPerc, objTRVVoucherInfo.dOverValorMoeda, objTRVVoucherInfo.dOverValorReal, objTRVVoucherInfo.dCMRPerc, _
                objTRVVoucherInfo.dCMRValorMoeda, objTRVVoucherInfo.dCMRValorReal, objTRVVoucherInfo.sCia, objTRVVoucherInfo.sValidade, objTRVVoucherInfo.sNumeroCC, objTRVVoucherInfo.sTitular, objTRVVoucherInfo.dValorCartao, objTRVVoucherInfo.lParcela, objTRVVoucherInfo.sAprovacao, objTRVVoucherInfo.sPassageiroSobreNome, _
                objTRVVoucherInfo.sPassageiroNome, objTRVVoucherInfo.sPassageiroCGC, objTRVVoucherInfo.sPassageiroEndereco, objTRVVoucherInfo.sPassageiroBairro, objTRVVoucherInfo.sPassageiroCidade, objTRVVoucherInfo.sPassageiroCEP, objTRVVoucherInfo.sPassageiroUF, objTRVVoucherInfo.sPassageiroEmail, objTRVVoucherInfo.sPassageiroContato, objTRVVoucherInfo.sPassageiroTelefone1, objTRVVoucherInfo.sPassageiroTelefone2, objTRVVoucherInfo.sGrupo, objTRVVoucherInfo.sTitularCPF)
        If lErro <> AD_SQL_SUCESSO Then
        
            Set objTS = objFSO.OpenTextFile("C:\SGE_Log_" & Format(Now, "AAAAMMDDHHMMSS"), ForWriting, True)
        
            With objTRVVoucherInfo
                objTS.WriteLine "Tipo: " & .sTipo & " Tamanho: " & CStr(Len(.sTipo))
                objTS.WriteLine "Serie: " & .sSerie & " Tamanho: " & CStr(Len(.sSerie))
                objTS.WriteLine "NumVou: " & CStr(.lNumVou)
                objTS.WriteLine "DataEmissao: " & CStr(.dtDataEmissao)
                objTS.WriteLine "DataRecepcao: " & CStr(.dtDataRecepcao)
                objTS.WriteLine "Cliente: " & CStr(.lCliente)
                objTS.WriteLine "Emissor: " & CStr(.lFornEmissor)
                objTS.WriteLine "Produto: " & .sProduto & " Tamanho: " & CStr(Len(.sProduto))
                objTS.WriteLine "Destino: " & .sDestino & " Tamanho: " & CStr(Len(.sDestino))
                objTS.WriteLine "DataInicio: " & CStr(.dtDataInicio)
                objTS.WriteLine "DataTermino: " & CStr(.dtDataTermino)
                objTS.WriteLine "Vigencia: " & .sVigencia & " Tamanho: " & CStr(Len(.sVigencia))
                objTS.WriteLine "Idioma: " & .sIdioma & " Tamanho: " & CStr(Len(.sIdioma))
                objTS.WriteLine "Pax: " & CStr(.iPax)
                objTS.WriteLine "DestinoVou: " & .sDestinoVou & " Tamanho: " & CStr(Len(.sDestinoVou))
                objTS.WriteLine "Antc: " & CStr(.iAntc)
                objTS.WriteLine "Controle: " & .sControle & " Tamanho: " & CStr(Len(.sControle))
                objTS.WriteLine "Convenio: " & .sConvenio & " Tamanho: " & CStr(Len(.sConvenio))
                objTS.WriteLine "DataPag: " & CStr(.dtDataPag)
                objTS.WriteLine "Cartao: " & CStr(.iCartao)
                objTS.WriteLine "Pago: " & CStr(.iPago)
                objTS.WriteLine "NumFat: " & CStr(.lNumFat)
                objTS.WriteLine "CliPassageiro: " & CStr(.lCliPassageiro)
                objTS.WriteLine "DataNasc: " & CStr(.dtDataNasc)
                objTS.WriteLine "Sexo: " & .sSexo & " Tamanho: " & CStr(Len(.sSexo))
                objTS.WriteLine "TipoDoc: " & .sTipoDoc & " Tamanho: " & CStr(Len(.sTipoDoc))
                objTS.WriteLine "CartaoFid: " & .sCartaoFid & " Tamanho: " & CStr(Len(.sCartaoFid))
                objTS.WriteLine "Moeda: " & .sMoeda & " Tamanho: " & CStr(Len(.sMoeda))
                objTS.WriteLine "TarifaUnitaria: " & CStr(.dTarifaUnitaria)
                objTS.WriteLine "Cambio: " & CStr(.dCambio)
                objTS.WriteLine "Valor: " & .sValor & " Tamanho: " & CStr(Len(.sValor))
                objTS.WriteLine "TarifaPerc: " & CStr(.dTarifaPerc)
                objTS.WriteLine "TarifaValorMoeda: " & CStr(.dTarifaValorMoeda)
                objTS.WriteLine "TarifaValorReal: " & CStr(.dTarifaValorReal)
                objTS.WriteLine "ComissaoPerc: " & CStr(.dComissaoPerc)
                objTS.WriteLine "ComissaoValorMoeda: " & CStr(.dComissaoValorMoeda)
                objTS.WriteLine "ComissaoValorReal: " & CStr(.dComissaoValorReal)
                objTS.WriteLine "CartaoPerc: " & CStr(.dCartaoPerc)
                objTS.WriteLine "CartaoValorMoeda: " & CStr(.dCartaoValorMoeda)
                objTS.WriteLine "CartaoValorReal: " & CStr(.dCartaoValorReal)
                objTS.WriteLine "OverPerc: " & CStr(.dOverPerc)
                objTS.WriteLine "OverValorMoeda: " & CStr(.dOverValorMoeda)
                objTS.WriteLine "OverValorReal: " & CStr(.dOverValorReal)
                objTS.WriteLine "CMRPerc: " & CStr(.dCMRPerc)
                objTS.WriteLine "CMRValorMoeda: " & CStr(.dCMRValorMoeda)
                objTS.WriteLine "CMRValorReal: " & CStr(.dCMRValorReal)
                objTS.WriteLine "Cia: " & .sCia & " Tamanho: " & CStr(Len(.sCia))
                objTS.WriteLine "Validade: " & .sValidade & " Tamanho: " & CStr(Len(.sValidade))
                objTS.WriteLine "NumeroCC: " & .sNumeroCC & " Tamanho: " & CStr(Len(.sNumeroCC))
                objTS.WriteLine "Titular: " & .sTitular & " Tamanho: " & CStr(Len(.sTitular))
                objTS.WriteLine "ValorCartao: " & CStr(.dValorCartao)
                objTS.WriteLine "Parcela: " & CStr(.lParcela)
                objTS.WriteLine "Aprovacao: " & CStr(.sAprovacao)
                objTS.WriteLine "PassageiroSobreNome: " & .sPassageiroSobreNome & " Tamanho: " & CStr(Len(.sPassageiroSobreNome))
                objTS.WriteLine "PassageiroNome: " & .sPassageiroNome & " Tamanho: " & CStr(Len(.sPassageiroNome))
                objTS.WriteLine "PassageiroCGC: " & .sPassageiroCGC & " Tamanho: " & CStr(Len(.sPassageiroCGC))
                objTS.WriteLine "PassageiroEndereco: " & .sPassageiroEndereco & " Tamanho: " & CStr(Len(.sPassageiroEndereco))
                objTS.WriteLine "PassageiroBairro: " & .sPassageiroBairro & " Tamanho: " & CStr(Len(.sPassageiroBairro))
                objTS.WriteLine "PassageiroCidade: " & .sPassageiroCidade & " Tamanho: " & CStr(Len(.sPassageiroCidade))
                objTS.WriteLine "PassageiroCEP: " & .sPassageiroCEP & " Tamanho: " & CStr(Len(.sPassageiroCEP))
                objTS.WriteLine "PassageiroUF: " & .sPassageiroUF & " Tamanho: " & CStr(Len(.sPassageiroUF))
                objTS.WriteLine "PassageiroEmail: " & .sPassageiroEmail & " Tamanho: " & CStr(Len(.sPassageiroEmail))
                objTS.WriteLine "PassageiroContato: " & .sPassageiroContato & " Tamanho: " & CStr(Len(.sPassageiroContato))
                objTS.WriteLine "PassageiroTelefone1: " & .sPassageiroTelefone1 & " Tamanho: " & CStr(Len(.sPassageiroTelefone1))
                objTS.WriteLine "PassageiroTelefone2: " & .sPassageiroTelefone2 & " Tamanho: " & CStr(Len(.sPassageiroTelefone2))
                objTS.WriteLine "Grupo: " & .sGrupo & " Tamanho: " & CStr(Len(.sGrupo))
                objTS.WriteLine "TitularCPF: " & .sTitularCPF & " Tamanho: " & CStr(Len(.sTitularCPF))

            End With
        
            objTS.Close
        
            gError 192616
            
        End If
        
    End If
    
    objVoucher.sSerie = objTRVVoucherInfo.sSerie
    objVoucher.sTipoDoc = TRV_TIPODOC_VOU_TEXTO
    objVoucher.sTipVou = objTRVVoucherInfo.sTipo
    objVoucher.lNumVou = objTRVVoucherInfo.lNumVou
    
    lErro = CF("TRVVouchers_Le", objVoucher)
    If lErro <> SUCESSO And lErro <> ERRO_LEITURA_SEM_DADOS Then gError 192671

    If lErro <> SUCESSO Then gError 194436
        
    objVoucher.sTitular = objTRVVoucherInfo.sTitular
    objVoucher.dCambio = objTRVVoucherInfo.dCambio
    objVoucher.dValorCambio = objTRVVoucherInfo.dTarifaValorMoeda
    objVoucher.sPassageiroNome = objTRVVoucherInfo.sPassageiroNome
    objVoucher.lEmissor = objTRVVoucherInfo.lFornEmissor
    objVoucher.sPassageiroSobreNome = objTRVVoucherInfo.sPassageiroSobreNome
    objVoucher.lClienteVou = objTRVVoucherInfo.lCliente
    objVoucher.lCliPassageiro = objTRVVoucherInfo.lCliPassageiro
    objVoucher.dValorBaseComis = objTRVVoucherInfo.dTarifaValorReal
    
    If objVoucher.iCartao = MARCADO Then
        objVoucher.dValorBruto = objTRVVoucherInfo.dValorCartao
    Else
        objVoucher.dValorBruto = objTRVVoucherInfo.dTarifaValorReal
    End If
    
    objVoucher.sDestino = objTRVVoucherInfo.sDestino
    objVoucher.sTitularCPF = objTRVVoucherInfo.sTitularCPF
    objVoucher.dTarifaUnitaria = objTRVVoucherInfo.dTarifaUnitaria
    objVoucher.iVigencia = DateDiff("d", objTRVVoucherInfo.dtDataInicio, objTRVVoucherInfo.dtDataTermino) + 1
    objVoucher.sMoeda = objTRVVoucherInfo.sMoeda
    objVoucher.sProduto = objTRVVoucherInfo.sProduto
    objVoucher.sValidadeCC = objTRVVoucherInfo.sValidade
    
    lErro = CF("TRVVouchers_Grava", objVoucher, 0, bNovo, TRV_TIPO_GRAVACAO_VOU_EXTRACAO, True, lConexaoTVA)
    If lErro <> SUCESSO Then gError 192672
    
    lErro = TRVVouchers_Ajusta_Valida_Dif_Comis(objVoucher)
    If lErro <> SUCESSO Then gError 192672
    
    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVVoucherInfoSigav_Grava_EmTrans = SUCESSO

    Exit Function

Erro_TRVVoucherInfoSigav_Grava_EmTrans:

    TRVVoucherInfoSigav_Grava_EmTrans = gErr

    Select Case gErr

        Case 192611
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 192612, 192613
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVVOUCHERINFOSIGAV", gErr)

        Case 192614
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVVOUCHERINFOSIGAV", gErr)

        Case 192615
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVVOUCHERINFOSIGAV", gErr)

        Case 192616
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_TRVVOUCHERINFOSIGAV", gErr)

        Case 192671, 192672
        
        Case 194436
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVVOUCHERS_NAO_CADASTRADO", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 192617)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

'ROTINAS CRIADAS AUTOMATICAMENTE PELA TELA BROWSECRIA
'EXCLUSÃO
Public Function TRVVoucherInfoSigav_Exclui(ByVal objTRVVoucherInfo As ClassTRVVoucherInfo) As Long

Dim lErro As Long
Dim lTransacao As Long

On Error GoTo Erro_TRVVoucherInfoSigav_Exclui

    'Abertura de transação
    lTransacao = Transacao_Abrir()
    If lTransacao = 0 Then gError 192599

    lErro = CF("TRVVoucherInfoSigav_Exclui_EmTrans", objTRVVoucherInfo)
    If lErro <> SUCESSO Then gError 192600

    'Confirma a transação
    lErro = Transacao_Commit()
    If lErro <> AD_SQL_SUCESSO Then gError 192601

    TRVVoucherInfoSigav_Exclui = SUCESSO

    Exit Function

Erro_TRVVoucherInfoSigav_Exclui:

    TRVVoucherInfoSigav_Exclui = gErr

    Select Case gErr

        Case 192599
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_TRANSACAO", gErr)

        Case 192600

        Case 192601
            Call Rotina_Erro(vbOKOnly, "ERRO_COMMIT", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 192620)

    End Select

    'Desfaz Transação
    Call Transacao_Rollback

    Exit Function

End Function

Public Function TRVVoucherInfoSigav_Exclui_EmTrans(ByVal objTRVVoucherInfo As ClassTRVVoucherInfo) As Long

Dim lErro As Long
Dim alComando(0 To 1) As Long
Dim iIndice As Integer
Dim iAux As Integer

On Error GoTo Erro_TRVVoucherInfoSigav_Exclui_EmTrans

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 192602
    Next

    'Le a tabelaTRVVoucherInfoSigav
    lErro = Comando_ExecutarPos(alComando(0), "SELECT 1 FROM TRVVoucherInfoSigav WHERE Tipo= ?  AND Serie= ?  AND NumVou= ? ", _
                0, iAux, objTRVVoucherInfo.sTipo, objTRVVoucherInfo.sSerie, objTRVVoucherInfo.lNumVou)
    If lErro <> AD_SQL_SUCESSO Then gError 192603

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(0))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192604

    'Se não existir => ERRO
    If lErro = AD_SQL_SEM_DADOS Then gError 192605

    'Trava registro contra alterações/Leituras
    lErro = Comando_LockExclusive(alComando(0))
    If lErro <> SUCESSO Then gError 192606

    lErro = Comando_ExecutarPos(alComando(1), "DELETE FROM TRVVoucherInfoSigav", alComando(0))
    If lErro <> AD_SQL_SUCESSO Then gError 192607

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVVoucherInfoSigav_Exclui_EmTrans = SUCESSO

    Exit Function

Erro_TRVVoucherInfoSigav_Exclui_EmTrans:

    TRVVoucherInfoSigav_Exclui_EmTrans = gErr

    Select Case gErr

        Case 192602
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 192603, 192604
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVVOUCHERINFOSIGAV", gErr)

        Case 192605
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVVOUCHERINFOSIGAV_NAO_CADASTRADO", gErr, objTRVVoucherInfo.sTipo, objTRVVoucherInfo.sSerie, objTRVVoucherInfo.lNumVou)

        Case 192606
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVVOUCHERINFOSIGAV", gErr)

        Case 192607
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_TRVVOUCHERINFOSIGAV", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 192619)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Public Function TRVVoucher_Exclui(ByVal objTRVVoucher As ClassTRVVouchers) As Long

Dim lErro As Long
Dim lTransacao As Long

On Error GoTo Erro_TRVVoucher_Exclui

    'Abertura de transação
    lTransacao = Transacao_Abrir()
    If lTransacao = 0 Then gError 192646

    lErro = CF("TRVVouchers_Cancela", objTRVVoucher)
    If lErro <> SUCESSO Then gError 192647

    'Confirma a transação
    lErro = Transacao_Commit()
    If lErro <> AD_SQL_SUCESSO Then gError 192648

    TRVVoucher_Exclui = SUCESSO

    Exit Function

Erro_TRVVoucher_Exclui:

    TRVVoucher_Exclui = gErr

    Select Case gErr

        Case 192646
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_TRANSACAO", gErr)

        Case 192647

        Case 192648
            Call Rotina_Erro(vbOKOnly, "ERRO_COMMIT", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 192649)

    End Select

    'Desfaz Transação
    Call Transacao_Rollback

    Exit Function

End Function

Public Function TRV_VoucherInfo_Cadastra_Cliente(ByVal objTRVVoucherInfo As ClassTRVVoucherInfo, Optional ByVal iCondPagto As Integer = 1) As Long

Dim lErro As Long
Dim lTransacao As Long

On Error GoTo Erro_TRV_VoucherInfo_Cadastra_Cliente

    'Abertura de transação
    lTransacao = Transacao_Abrir()
    If lTransacao = 0 Then gError 192740

    lErro = TRV_VoucherInfo_Cadastra_Cliente_EmTrans(objTRVVoucherInfo, iCondPagto)
    If lErro <> SUCESSO Then gError 192741

    'Confirma a transação
    lErro = Transacao_Commit()
    If lErro <> AD_SQL_SUCESSO Then gError 192742

    TRV_VoucherInfo_Cadastra_Cliente = SUCESSO

    Exit Function

Erro_TRV_VoucherInfo_Cadastra_Cliente:

    TRV_VoucherInfo_Cadastra_Cliente = gErr

    Select Case gErr

        Case 192740
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_TRANSACAO", gErr)

        Case 192741

        Case 192742
            Call Rotina_Erro(vbOKOnly, "ERRO_COMMIT", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 192743)

    End Select

    'Desfaz Transação
    Call Transacao_Rollback

    Exit Function

End Function

Public Function TRV_VoucherInfo_Cadastra_Cliente_EmTrans(ByVal objTRVVoucherInfo As ClassTRVVoucherInfo, Optional ByVal iCondPagto As Integer = 1) As Long

Dim lErro As Long
Dim alComando(0 To 5) As Long
Dim iIndice As Integer
Dim colEndereco As New Collection
Dim colEnderecos As New colEndereco
Dim objEndereco As ClassEndereco
Dim objCliente As New ClassCliente
Dim lCodigo As Long
Dim lCliente As Long
Dim iFilial As Integer
Dim objCidades As ClassCidades
Dim objFilialCliente As New ClassFilialCliente
Dim colCategoriaItem As New Collection
Dim lNumVou As Long
Dim iCodigoCidade As Integer
Dim sNumero As String
Dim iTipo As Integer
Dim objFilialCliCategoria As ClassFilialCliCategoria
Dim objClienteTRV As ClassClienteTRV
Dim iFilialEmpresa As Integer
Dim sGrupo As String
Dim sNomePax As String
Dim sRazaoPax As String
Dim sCPFPax As String
Dim iFilialNF As Integer, iFilialFat As Integer

On Error GoTo Erro_TRV_VoucherInfo_Cadastra_Cliente_EmTrans

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 192744
    Next
    
    sNumero = ""
    If objTRVVoucherInfo.iCartao = DESMARCADO Then
        Call Formata_String_Numero(objTRVVoucherInfo.sPassageiroCGC, sNumero)
        sNomePax = objTRVVoucherInfo.sPassageiroNome
        sRazaoPax = objTRVVoucherInfo.sPassageiroNome & " \ " & objTRVVoucherInfo.sPassageiroSobreNome
    Else
        Call Formata_String_Numero(objTRVVoucherInfo.sTitularCPF, sNumero)
        sNomePax = objTRVVoucherInfo.sTitular
        sRazaoPax = objTRVVoucherInfo.sTitular
    End If
    If sCPFPax = "00000000000" Then sCPFPax = ""
    sCPFPax = sNumero
    
    lErro = Comando_Executar(alComando(0), "SELECT F.CodCliente, F.CodFilial, C.Tipo FROM FiliaisClientes AS F, Clientes AS C WHERE F.CodCliente = C.Codigo AND F.CGC = ? AND F.CGC <> ?", lCliente, iFilial, iTipo, sCPFPax, "")
    If lErro <> AD_SQL_SUCESSO Then gError 192745

    lErro = Comando_BuscarProximo(alComando(0))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192746
    
    If lErro <> AD_SQL_SUCESSO Then
    
        lErro = CF("Config_ObterAutomatico_EmTrans", "TRVConfig", TRVCONFIG_PROX_NUM_PASSAGEIRO, "Clientes", "Codigo", lCodigo)
        If lErro <> SUCESSO Then gError 192747
        
        If lCodigo >= 800000 Then
            If lCodigo < 5000000 Or lCodigo >= 8000000 Then gError 209817            'É necessário trocar a faixa de passageiros que hoje é
        'limitada de 700.000 a 800.000 por conta dos emissores
        End If
        
        For iIndice = 1 To 3
            Set objEndereco = New ClassEndereco
            colEndereco.Add objEndereco
        Next
        
        objCliente.lCodigo = lCodigo
        objCliente.iAtivo = MARCADO

        objCliente.sCgc = sCPFPax
        
        objCliente.iTipo = TRV_TIPO_CLIENTE_PASSAGEIRO
        objCliente.dtDataPrimeiraCompra = DATA_NULA
        objCliente.dtDataUltChequeDevolvido = DATA_NULA
        objCliente.dtDataUltimaCompra = DATA_NULA
        objCliente.dtDataUltimoProtesto = DATA_NULA
        objCliente.dtDataUltVisita = DATA_NULA
        objCliente.iCondicaoPagto = iCondPagto
            
        Set objFilialCliCategoria = New ClassFilialCliCategoria
        Set objClienteTRV = New ClassClienteTRV
        
        objFilialCliCategoria.sCategoria = TRV_CATEGORIA_CONDFAT
        objFilialCliCategoria.sItem = TRV_CATEGORIA_CONDFAT_PASSAGEIRO
        objFilialCliCategoria.iFilial = FILIAL_MATRIZ
        objFilialCliCategoria.lCliente = objCliente.lCodigo
        
        objCliente.colCategoriaItem.Add objFilialCliCategoria
        
        Set objCliente.objInfoUsu = objClienteTRV
        
        sGrupo = String(STRING_TRV_OCR_CODGRUPO, 0)
        
        lErro = Comando_Executar(alComando(3), "SELECT FilialEmpresa, FilialNF,FilialFat, Grupo FROM FiliaisClientesTRV WHERE CodCliente = ? AND CodFilial = ?", iFilialEmpresa, iFilialNF, iFilialFat, sGrupo, objTRVVoucherInfo.lCliente, FILIAL_MATRIZ)
        If lErro <> AD_SQL_SUCESSO Then gError 192745
    
        lErro = Comando_BuscarProximo(alComando(3))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192746
        
        If lErro <> AD_SQL_SEM_DADOS Then
        
            objClienteTRV.iFilialCoinfo = Filial_Corporator_Retorna_Coinfo(iFilialEmpresa)
            objClienteTRV.iFilialEmpresa = iFilialEmpresa
            objClienteTRV.iFilialNF = iFilialNF
            objClienteTRV.iFilialFat = iFilialFat
            objClienteTRV.sGrupo = sGrupo
            
        End If
        
        objClienteTRV.lEmpresaPai = objCliente.lCodigo
               
    Else
    
        If lCliente < FATOR_PAX_CLIENTE And iTipo <> 10 And iTipo <> 12 And iTipo <> 7 And iTipo <> 15 And iTipo <> 17 Then gError 196543
    
        objCliente.lCodigo = lCliente
        
        lErro = CF("Cliente_Le", objCliente)
        If lErro <> SUCESSO And lErro <> 12293 Then gError 192748
        
        lErro = CF("Enderecos_Le_Cliente", colEnderecos, objCliente)
        If lErro <> SUCESSO Then gError 192749

        For Each objEndereco In colEnderecos
            colEndereco.Add objEndereco
        Next
        
        objFilialCliente.lCodCliente = lCliente
        objFilialCliente.iCodFilial = FILIAL_MATRIZ
        
        'Lê as Categoria da Filial do Cliente
        lErro = CF("FilialCliente_Le_Categorias", objFilialCliente, colCategoriaItem)
        If lErro <> SUCESSO Then gError 192750

        Set objCliente.colCategoriaItem = colCategoriaItem
        
        lErro = CF("Cliente_Le_Customizado", objCliente)
        If lErro <> SUCESSO Then gError 192750
    
    End If
    
    If Len(Trim(objTRVVoucherInfo.sPassageiroNome)) = 0 Then gError 192829
    
    objCliente.sNomeReduzido = left(sNomePax, STRING_CLIENTE_NOME_REDUZIDO - Len(SEPARADOR & CStr(objCliente.lCodigo) - 1)) & SEPARADOR & CStr(objCliente.lCodigo)
    objCliente.sRazaoSocial = left(sRazaoPax, STRING_CLIENTE_RAZAO_SOCIAL)
    
    For Each objEndereco In colEndereco

        objEndereco.iCodigoPais = PAIS_BRASIL
        objEndereco.sBairro = left(objTRVVoucherInfo.sPassageiroBairro, STRING_BAIRRO)
        
        sNumero = ""
        Call Formata_String_Numero(objTRVVoucherInfo.sPassageiroCEP, sNumero)
        If sNumero = "00000000" Then sNumero = ""
        objEndereco.sCEP = left(sNumero, STRING_CEP)
        objEndereco.sCidade = left(objTRVVoucherInfo.sPassageiroCidade, STRING_CIDADE)
        objEndereco.sContato = left(objTRVVoucherInfo.sPassageiroContato, STRING_CONTATO)
        objEndereco.sEmail = left(objTRVVoucherInfo.sPassageiroEmail, STRING_EMAIL)
        objEndereco.sEndereco = left(objTRVVoucherInfo.sPassageiroEndereco, STRING_ENDERECO)
        If Len(Trim(objTRVVoucherInfo.sPassageiroUF)) > 0 Then
            objEndereco.sSiglaEstado = left(objTRVVoucherInfo.sPassageiroUF, STRING_ESTADO_SIGLA)
        Else
            objEndereco.sSiglaEstado = "SP"
        End If
        objEndereco.sTelefone1 = left(objTRVVoucherInfo.sPassageiroTelefone1, STRING_TELEFONE)
        objEndereco.sTelefone2 = left(objTRVVoucherInfo.sPassageiroTelefone2, STRING_TELEFONE)
        
        If Len(Trim(objEndereco.sSiglaEstado)) = 0 Then gError 192828
        
    Next
    
    'Grava as Cidades que não estiverem cadastradas
    For Each objEndereco In colEndereco
    
        Set objCidades = New ClassCidades
        
        objCidades.sDescricao = objEndereco.sCidade
        
        lErro = CF("Cidade_Le_Nome", objCidades)
        If lErro <> SUCESSO And lErro <> ERRO_OBJETO_NAO_CADASTRADO Then gError 192751
        
        If lErro <> SUCESSO Then
        
            lErro = CF("Config_Obter_Inteiro_Automatico_EmTrans", "FATConfig", "NUM_PROX_CIDADECADASTRO", "Cidades", "Codigo", iCodigoCidade)
            If lErro <> SUCESSO Then gError 192752

            objCidades.iCodigo = iCodigoCidade
            objCidades.sDescricao = objEndereco.sCidade
                
            lErro = CF("Cidade_Grava_EmTrans", objCidades)
            If lErro <> SUCESSO Then gError 192753
            
        End If
    
    Next

    If iTipo <> 7 Then
        lErro = CF("Cliente_Grava_EmTrans", objCliente, colEndereco)
        If lErro <> SUCESSO Then gError 192754
    End If
    
    Set objClienteTRV = objCliente.objInfoUsu
    
    objTRVVoucherInfo.lCliPassageiro = objCliente.lCodigo
    objTRVVoucherInfo.iFilialFat = objClienteTRV.iFilialFat

    lErro = Comando_ExecutarPos(alComando(1), "SELECT NumVou FROM TRVVoucherInfoSigav WHERE Tipo= ?  AND Serie= ?  AND NumVou= ? ", _
                0, lNumVou, objTRVVoucherInfo.sTipo, objTRVVoucherInfo.sSerie, objTRVVoucherInfo.lNumVou)
    If lErro <> AD_SQL_SUCESSO Then gError 192755

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(1))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192756

    If lErro <> AD_SQL_SUCESSO Then gError 192757

    'Trava registro contra alterações/Leituras
    lErro = Comando_LockExclusive(alComando(1))
    If lErro <> AD_SQL_SUCESSO Then gError 192758

    lErro = Comando_ExecutarPos(alComando(2), "UPDATE TRVVoucherInfoSigav SET CliPassageiro= ? ", alComando(1), objCliente.lCodigo)
    If lErro <> AD_SQL_SUCESSO Then gError 192759
    
    lErro = Comando_ExecutarPos(alComando(4), "SELECT NumVou FROM TRVVouchers WHERE NumVou = ? AND TipoDoc = ? AND Serie = ? AND TipVou = ? ", _
                0, lNumVou, objTRVVoucherInfo.lNumVou, TRV_TIPODOC_VOU_TEXTO, objTRVVoucherInfo.sSerie, objTRVVoucherInfo.sTipo)
    If lErro <> AD_SQL_SUCESSO Then gError 192755

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(4))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192756

    If lErro <> AD_SQL_SUCESSO Then gError 192757

    'Trava registro contra alterações/Leituras
    lErro = Comando_LockExclusive(alComando(4))
    If lErro <> AD_SQL_SUCESSO Then gError 192758

    lErro = Comando_ExecutarPos(alComando(5), "UPDATE TRVVouchers SET CliPassageiro= ? ", alComando(4), objCliente.lCodigo)
    If lErro <> AD_SQL_SUCESSO Then gError 192759

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRV_VoucherInfo_Cadastra_Cliente_EmTrans = SUCESSO

    Exit Function

Erro_TRV_VoucherInfo_Cadastra_Cliente_EmTrans:

    TRV_VoucherInfo_Cadastra_Cliente_EmTrans = gErr

    Select Case gErr

        Case 192744
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)
            
        Case 192745, 192746
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_CLIENTES", gErr)
            
        Case 192747 To 192754
        
        Case 192755, 192756
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVVOUCHERS", gErr)
            
        Case 192757
            Call Rotina_Erro(vbOKOnly, "ERRO_VOUCHER_NAO_CADASTRADO", gErr, objTRVVoucherInfo.lNumVou, objTRVVoucherInfo.sSerie, objTRVVoucherInfo.sTipo)

        Case 192758
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVVOUCHERS", gErr)

        Case 192759
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVVOUCHERS", gErr)
            
        Case 192828
            Call Rotina_Erro(vbOKOnly, "ERRO_ESTADO_NAO_CADASTRADO", gErr, objEndereco.sSiglaEstado)

        Case 192829
            Call Rotina_Erro(vbOKOnly, "ERRO_NOME_REDUZIDO_NAO_PREENCHIDO", gErr)
            
        Case 196543
            Call Rotina_Erro(vbOKOnly, "ERRO_CNPJ_PERTENCE_A_UMA_AGENGIA", gErr, objTRVVoucherInfo.sPassageiroCGC, objTRVVoucherInfo.lNumVou, lCliente)

        Case 209817
            Call Rotina_Erro(vbOKOnly, "ERRO_PAX_CODIGO_NAO_PERMITIDO", gErr)
            
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 192617)

    End Select

    Call Rotina_Erro(vbOKOnly, "ERRO_TRVCLIPAX_GRAVACAO", gErr, objCliente.lCodigo, objCliente.sNomeReduzido, objCliente.sRazaoSocial, objTRVVoucherInfo.lNumVou, objTRVVoucherInfo.sSerie, objTRVVoucherInfo.sTipo)

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

'ROTINAS CRIADAS AUTOMATICAMENTE PELA TELA BROWSECRIA
'GRAVAÇÃO
Public Function TitulosRecTRV_Grava(ByVal objTitulosRecTRV As ClassTitulosRecTRV) As Long

Dim lErro As Long
Dim alComando(0 To 1) As Long
Dim iIndice As Integer
Dim lNumIntDoc As Integer

On Error GoTo Erro_TitulosRecTRV_Grava

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 192776
    Next

    'Le a tabelaTitulosRecTRV
    lErro = Comando_ExecutarPos(alComando(0), "SELECT NumIntDocTitRec FROM TitulosRecTRV WHERE NumIntDocTitRec= ? ", _
                0, lNumIntDoc, objTitulosRecTRV.lNumIntDocTitRec)
    If lErro <> AD_SQL_SUCESSO Then gError 192777

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(0))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192778

    'Se existir => UPDATE, senão => INSERT
    If lErro = AD_SQL_SUCESSO Then

        'Trava registro contra alterações/Leituras
        lErro = Comando_LockExclusive(alComando(0))
        If lErro <> SUCESSO Then gError 192779

        lErro = Comando_ExecutarPos(alComando(1), "UPDATE TitulosRecTRV SET NumIntDocNFPagComi= ? , ValorComissao= ? ", alComando(0), _
                objTitulosRecTRV.lNumIntDocNFPagComi, objTitulosRecTRV.dValorComissao)
        If lErro <> AD_SQL_SUCESSO Then gError 192780

    Else


        lErro = Comando_Executar(alComando(1), "INSERT INTO TitulosRecTRV( NumIntDocTitRec, ValorTarifa, NumIntDocNFPagComi, ValorDeducoes, " & _
                "ValorComissao, ValorBruto) VALUES (?,?,?,?,?,?)", _
                objTitulosRecTRV.lNumIntDocTitRec, objTitulosRecTRV.dValorTarifa, objTitulosRecTRV.lNumIntDocNFPagComi, objTitulosRecTRV.dValorDeducoes, _
                objTitulosRecTRV.dValorComissao, objTitulosRecTRV.dValorBruto)
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192781

    End If

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TitulosRecTRV_Grava = SUCESSO

    Exit Function

Erro_TitulosRecTRV_Grava:

    TitulosRecTRV_Grava = gErr

    Select Case gErr

        Case 192776
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 192777, 192778
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TITULOSRECTRV", gErr)

        Case 192779
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TITULOSRECTRV", gErr)

        Case 192780
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TITULOSRECTRV", gErr)

        Case 192781
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_TITULOSRECTRV", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 192775)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function


Public Function TitulosRecTRV_Exclui(ByVal lNumIntDoc As Long, ByVal objFaturaTRV As ClassFaturaTRV) As Long

Dim lErro As Long
Dim alComando(0 To 2) As Long
Dim iIndice As Integer
Dim lNumIntDocComi As Long
Dim objNFPag As New ClassNFsPag
Dim objContabil As New ClassContabil
Dim lNumNF As Long

On Error GoTo Erro_TitulosRecTRV_Exclui

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 192767
    Next

    'Le a tabelaTitulosRecTRV
    lErro = Comando_Executar(alComando(0), "SELECT N.NumNotaFiscal FROM TRVItemNotaTitulo AS T, NFiscal AS N, ItensNFiscal AS I WHERE T.NumIntDocTitulo = ? AND T.NumIntDocItemNF = I.NumIntDoc AND I.NumIntNF = N.NumIntDoc AND N.Status NOT IN (5,7) ", _
                lNumNF, lNumIntDoc)
    If lErro <> AD_SQL_SUCESSO Then gError 192768

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(0))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192769
    
    'O título está associado a NF
    If lErro = AD_SQL_SUCESSO Then gError 196455
    
    'Le a tabelaTitulosRecTRV
    lErro = Comando_ExecutarPos(alComando(0), "SELECT NumIntDocNFPagComi FROM TitulosRecTRV WHERE NumIntDocTitRec= ? ", _
                0, lNumIntDocComi, lNumIntDoc)
    If lErro <> AD_SQL_SUCESSO Then gError 192768

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(0))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192769

    If lErro <> AD_SQL_SEM_DADOS Then

        'Trava registro contra alterações/Leituras
        lErro = Comando_LockExclusive(alComando(0))
        If lErro <> SUCESSO Then gError 192771
    
        lErro = Comando_ExecutarPos(alComando(1), "DELETE FROM TitulosRecTRV", alComando(0))
        If lErro <> AD_SQL_SUCESSO Then gError 192772
        
        If lNumIntDocComi <> 0 Then
     
            objNFPag.lNumIntDoc = lNumIntDocComi
            
            Set objNFPag.objInfoUsu = objFaturaTRV
     
            'Le a nota de comissão
            lErro = CF("NFPag_Le", objNFPag)
            If lErro <> SUCESSO And lErro <> 18257 Then gError 192782
            
            'Se ela ainda não foi faturada
            If lErro = SUCESSO And objNFPag.lNumIntTitPag = 0 Then

                Call objContabil.Contabil_Inicializa_Contabilidade4(14, MODULO_CONTASAPAGAR)
            
                objNFPag.iExclusao = DESMARCADO
            
                lErro = CF("NFPag_Exclui_EmTransacao", objNFPag, objContabil)
                If lErro <> SUCESSO Then gError 192783
                
                Set objContabil = Nothing
                
            End If
                
        End If
        
    End If

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TitulosRecTRV_Exclui = SUCESSO

    Exit Function

Erro_TitulosRecTRV_Exclui:

    TitulosRecTRV_Exclui = gErr

    Select Case gErr

        Case 192767
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 192768, 192769
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TITULOSRECTRV", gErr)

        Case 192771
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TITULOSRECTRV", gErr)

        Case 192772
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_TITULOSRECTRV", gErr)
            
        Case 192782, 192783
        
        Case 196455
            Call Rotina_Erro(vbOKOnly, "ERRO_TITREC_ASSOC_NF", gErr, lNumNF)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 192770)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Public Function TRVFaturas_Regera_Html(ByVal lFaturaDe As Long, ByVal lFaturaAte As Long, ByVal sModelo As String, ByVal sDiretorio As String, ByVal sSiglaDoc As String, Optional ByVal bAcompanhamento As Boolean = True) As Long

Dim lErro As Long
Dim alComando(0 To 15) As Long
Dim iIndice As Integer
Dim lNumIntDoc As Long
Dim objFaturamento As ClassTRVFaturamento
Dim objTitRec As ClassTituloReceber
Dim objInfoFatura As ClassTRVFATInfoFatura
Dim objInfoVoucher As ClassTRVFATInfoVoucher
Dim objCliente As ClassCliente
Dim objFilialEmpresa As AdmFiliais
Dim objEndereco As ClassEndereco
Dim objFilialCliente As ClassFilialCliente
Dim sSerie As String
Dim sTipVou As String
Dim sTipoDoc As String
Dim lNumVou As Long
Dim lNumFat As Long
Dim dtDataVencimento As Date
Dim dValorAporte As Double
Dim dValorComissao As Double
Dim objVoucher As ClassTRVVouchers
Dim lNumIntDocAporte As Long
Dim lNumIntDocAportePagto As Long
Dim lSeq As Long
Dim iParcelaAporte As Integer
Dim lCodigoAporte As Long
Dim sArquivo As String
Dim sConteudoHtml As String
Dim dValorTarifa As Double
Dim dValorDeducoes As Double
Dim sSiglaDocumento As String
'Dim objTRVVoucherInfo As ClassTRVVoucherInfo
Dim iTipoDocDestino As Integer
Dim iFilialEmpresa As Integer
Dim lCliente As Long
Dim dValor As Double
Dim dtDataEmissao As Date
Dim iCondicaoPagto As Integer
Dim sModeloCP As String
Dim dValorItem As Double
Dim dtDataItem As Date
Dim objForn As ClassFornecedor
Dim dValorItens As Double
Dim dValorCreditos As Double
Dim dValorDebitos As Double
Dim lLinha As Long
Dim sNomeCliente As String
Dim objVouAporte As ClassTRVVoucherAporte
Dim objOCRAporte As ClassTRVOcorrenciaAporte
Dim iTipoPagtoAporte As Integer
Dim lNumIntDocOCR As Long
Dim dValorAporteCred As Double
Dim lNumIntDocCredito As Long
Dim lCodigoAporteCred As Long
Dim objFaturaAporte As ClassTRVFaturaAporte
Dim iNumParcelas As Integer
Dim iPagtoParcial As Integer
Dim lCount As Long
Dim objFrmAguarde As New ClassFrmAguarde
Dim objFrmAguardeTela As New FrmAguarde
Dim objFilialForn As ClassFilialFornecedor
Dim sParteErro As String, lClienteDoc As Long

On Error GoTo Erro_TRVFaturas_Regera_Html

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 192830
    Next
    
    If bAcompanhamento Then
        'Le a tabela TitulosRecTRV
        lErro = Comando_Executar(alComando(6), "SELECT COUNT(NumIntDoc) FROM TRVFaturas WHERE NumTitulo BETWEEN ? AND ? AND (SiglaDocumento = ? OR ? = '') AND Status <> 5 ", _
                    lCount, lFaturaDe, lFaturaAte, sSiglaDoc, sSiglaDoc)
        If lErro <> AD_SQL_SUCESSO Then gError 192831
    
        'Busca Primeiro
        lErro = Comando_BuscarPrimeiro(alComando(6))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192832

        objFrmAguarde.iTotalItens = lCount
        Call objFrmAguardeTela.Inicializa_Progressao(objFrmAguarde)
    End If
    
    lErro = CF("TRVConfig_Le", TRVCONFIG_DIRETORIO_MODELO_FAT_HTML_CARTAO, EMPRESA_TODA, sModeloCP)
    If lErro <> SUCESSO Then gError 192838
    
    sSiglaDocumento = String(STRING_SIGLA_DOCUMENTO, 0)

    'Só não tem acompanhamento pela geração de FAT Cartão, para agilizar lê só TitulosRec abertos
    If Not bAcompanhamento Then
        'Le a tabela TitulosRec
        lErro = Comando_Executar(alComando(0), "SELECT T.NumIntDoc,3, T.NumTitulo,T.FilialEmpresa, T.SiglaDocumento, T.Cliente, T.Valor, T.DataEmissao, P.DataVencimento, T.CondicaoPagto FROM TitulosRec AS T, ParcelasRec AS P WHERE T.NumTitulo BETWEEN ? AND ? AND T.NumIntDoc = P.NumIntTitulo AND T.SiglaDocumento = ? AND T.Status <> 5 AND P.NumParcela = 1 ORDER BY T.NumTitulo, T.SiglaDocumento, T.DataEmissao ", _
                    lNumIntDoc, iTipoDocDestino, lNumFat, iFilialEmpresa, sSiglaDocumento, lCliente, dValor, dtDataEmissao, dtDataVencimento, iCondicaoPagto, lFaturaDe, lFaturaAte, sSiglaDoc)
    Else
        'Le a tabela TRVFaturas
        lErro = Comando_Executar(alComando(0), "SELECT NumIntDoc,TipoDocDestino, NumTitulo,FilialEmpresa, SiglaDocumento, Cliente, Valor, DataEmissao, DataVencimento, CondicaoPagto FROM TRVFaturas WHERE NumTitulo BETWEEN ? AND ? AND (SiglaDocumento = ? OR ? = '') AND Status <> 5 ORDER BY NumTitulo, SiglaDocumento, DataEmissao ", _
                    lNumIntDoc, iTipoDocDestino, lNumFat, iFilialEmpresa, sSiglaDocumento, lCliente, dValor, dtDataEmissao, dtDataVencimento, iCondicaoPagto, lFaturaDe, lFaturaAte, sSiglaDoc, sSiglaDoc)
        If lErro <> AD_SQL_SUCESSO Then gError 192831
    End If
    If lErro <> AD_SQL_SUCESSO Then gError 192831

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(0))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192832

    Do While lErro <> AD_SQL_SEM_DADOS
    
sParteErro = "lNumFat = " & CStr(lNumFat) & " lNumIntDoc = " & CStr(lNumIntDoc) & " iTipoDocDestino = " & CStr(iTipoDocDestino)
    
        Set objFaturamento = New ClassTRVFaturamento
        Set objTitRec = New ClassTituloReceber
        Set objInfoFatura = New ClassTRVFATInfoFatura
        objFaturamento.colInfoFaturas.Add objInfoFatura
        
        objFaturamento.iIndiceFaturaAtual = 1
        
        Select Case iTipoDocDestino
        
            Case TRV_TIPO_DOC_DESTINO_TITREC
        
                'Le a tabela TRVTitulosEXP
                lErro = Comando_Executar(alComando(2), "SELECT A.ValorAporte, A.NumIntDocCredito, A.CodigoAporte, A.ParcelaAporte, A.NumParcelas, A.PagtoParcial FROM TRVTitulosExp AS E, TRVTitulosExpAporte AS A WHERE E.NumIntDoc = A.NumIntDocTitExp AND E.TipoDocOrigem = ? AND E.NumIntDocOrigem = ? AND E.Excluido = ? ", dValorAporteCred, lNumIntDocCredito, lCodigoAporteCred, iParcelaAporte, iNumParcelas, iPagtoParcial, iTipoDocDestino, lNumIntDoc, DESMARCADO)
                If lErro <> AD_SQL_SUCESSO Then gError 192834

                'Busca Primeiro
                lErro = Comando_BuscarPrimeiro(alComando(2))
                If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192835
                                   
                Do While lErro = AD_SQL_SUCESSO
                
                    Set objFaturaAporte = New ClassTRVFaturaAporte
                
                    objInfoFatura.dValorAporteCred = objInfoFatura.dValorAporteCred + dValorAporteCred
                    objInfoFatura.colFatAporteCred.Add objFaturaAporte
                
                    objFaturaAporte.lCodigoAporte = lCodigoAporteCred
                    objFaturaAporte.lNumIntDocCredito = lNumIntDocCredito
                    objFaturaAporte.iParcelaAporte = iParcelaAporte
                    objFaturaAporte.iNumParcelas = iNumParcelas
                    objFaturaAporte.iPagtoParcial = iPagtoParcial
                    objFaturaAporte.dValorAporte = dValorAporteCred
                    
                    'Busca Primeiro
                    lErro = Comando_BuscarPrimeiro(alComando(2))
                    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192835
                    
                Loop
                
                'Le a tabela TitulosRecTRV
                lErro = Comando_Executar(alComando(3), "SELECT ValorTarifa, ValorDeducoes FROM TitulosRecTrv WHERE NumIntDocTitRec = ? ", dValorTarifa, dValorDeducoes, lNumIntDoc)
                If lErro <> AD_SQL_SUCESSO Then gError 192834
            
                'Busca Primeiro
                lErro = Comando_BuscarPrimeiro(alComando(3))
                If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192835
                
                If lErro = AD_SQL_SUCESSO Then
                    objInfoFatura.dValorDeducoes = dValorDeducoes
                    objInfoFatura.dValorTarifa = dValorTarifa
                End If
                
                If sSiglaDocumento = TIPODOC_CARTAO_CRED_DEB Then
                    objInfoFatura.iCartao = MARCADO
                End If
                
            Case TRV_TIPO_DOC_DESTINO_TITPAG, TRV_TIPO_DOC_DESTINO_NFSPAG
            
                dValor = -dValor
                
                'Le a tabela TitulosRecTRV
                lErro = Comando_Executar(alComando(3), "SELECT ValorTarifa, ValorDeducoes FROM TRVTitulosExp WHERE TipoDocOrigem = ? AND NumIntDocOrigem = ? ", dValorTarifa, dValorDeducoes, iTipoDocDestino, lNumIntDoc)
                If lErro <> AD_SQL_SUCESSO Then gError 192834
            
                'Busca Primeiro
                lErro = Comando_BuscarPrimeiro(alComando(3))
                If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192835
                
                If lErro = AD_SQL_SUCESSO Then
                    objInfoFatura.dValorDeducoes = dValorDeducoes
                    objInfoFatura.dValorTarifa = dValorTarifa
                End If
                
        End Select
        
        objInfoFatura.dtDataEmissao = dtDataEmissao
        objInfoFatura.dtDataVencimento = dtDataVencimento
        objInfoFatura.dValor = dValor
        objInfoFatura.iCondPagto = iCondicaoPagto
        objInfoFatura.iFilialEmpresa = iFilialEmpresa
        objInfoFatura.lLinha = 1
        objInfoFatura.lLinhaFatCliente = 1
        objInfoFatura.lLinhaFatEnderecoCli = 1
        objInfoFatura.lLinhaFatEnderecoEmp = 2
        objInfoFatura.lLinhaFatFilial = 1
        objInfoFatura.lLinhaFatFilialCliente = 1
        objInfoFatura.iMarcado = MARCADO
        objInfoFatura.lCliente = lCliente
        objInfoFatura.lFatura = 1
        objInfoFatura.lNumeroFaturaReal = lNumFat
        
        sSerie = String(STRING_TRV_OCR_SERIE, 0)
        sTipVou = String(STRING_TRV_OCR_TIPOVOU, 0)
        sTipoDoc = String(STRING_TRV_OCR_TIPODOC, 0)
        sNomeCliente = String(STRING_CLIENTE_NOME_REDUZIDO, 0)
        
        'Só não tem acompanhamento pela geração de FAT Cartão, para agilizar lê só TRVVouchers
        If Not bAcompanhamento Then
                lErro = Comando_Executar(alComando(1), "SELECT V.Cliente, V.NumIntDoc, V.Serie, V.TipVou, V.TipoDoc, C.NomeReduzido, V.NumVou, V.ValorAporte, V.ValorComissao, V.NumIntDocPagtoAporteFat, V.ParcelaAporte, V.CodigoAporte, V.Valor, V.Data FROM TRVVouchers AS V, Clientes AS C WHERE V.TipoDocDestino = ? AND V.NumIntDocDestino = ? AND V.Cliente = C.Codigo ", _
                    lClienteDoc, lNumIntDocOCR, sSerie, sTipVou, sTipoDoc, sNomeCliente, lNumVou, dValorAporte, dValorComissao, lNumIntDocAportePagto, iParcelaAporte, lCodigoAporte, dValorItem, dtDataItem, iTipoDocDestino, lNumIntDoc)
        Else
            'Le a tabelaTitulosRecTRV
            lErro = Comando_Executar(alComando(1), "SELECT Cliente, NumIntDoc, Serie, TipVou, TipoDoc,NomeCliente, NumVou, ValorAporte, ValorComissao, NumIntDocPagtoAporteFat, ParcelaAporte, CodigoAporte, Valor, Data FROM DocFaturados WHERE NumIntDocDestino = ? AND TipoDocDestino = ? ", _
                        lClienteDoc, lNumIntDocOCR, sSerie, sTipVou, sTipoDoc, sNomeCliente, lNumVou, dValorAporte, dValorComissao, lNumIntDocAportePagto, iParcelaAporte, lCodigoAporte, dValorItem, dtDataItem, lNumIntDoc, iTipoDocDestino)
        End If
        If lErro <> AD_SQL_SUCESSO Then gError 192836
    
        'Busca Primeiro
        lErro = Comando_BuscarPrimeiro(alComando(1))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192837

        lSeq = 0
        Do While lErro <> AD_SQL_SEM_DADOS
        
            Set objInfoVoucher = New ClassTRVFATInfoVoucher
            objFaturamento.colInfoVouchers.Add objInfoVoucher
            Set objVoucher = New ClassTRVVouchers
            'Set objTRVVoucherInfo = New ClassTRVVoucherInfo
            
            lSeq = lSeq + 1
            
            objVoucher.sSerie = sSerie
            objVoucher.sTipVou = sTipVou
            objVoucher.sTipoDoc = TRV_TIPODOC_VOU_TEXTO
            objVoucher.lNumVou = lNumVou
            
            lErro = CF("TRVVouchers_Le", objVoucher, alComando(7), alComando(8))
            If lErro <> SUCESSO And lErro <> ERRO_LEITURA_SEM_DADOS Then gError 192838
            
            objInfoVoucher.dCambio = objVoucher.dCambio
            objInfoVoucher.iFilialEmpresa = iFilialEmpresa
            objInfoVoucher.lLinha = lSeq
            objInfoVoucher.iMarcado = MARCADO
            objInfoVoucher.iPax = objVoucher.iPax
            objInfoVoucher.lCliente = lClienteDoc
            objInfoVoucher.sNome = sNomeCliente
            objInfoVoucher.lNumIntDoc = lNumIntDocOCR
            
            If sTipoDoc = TRV_TIPODOC_VOU_TEXTO Then
                objInfoVoucher.dValorCambio = objVoucher.dValorCambio
                objInfoVoucher.lCodigoAporte = lCodigoAporte
                objInfoVoucher.lNumIntDocAportePagto = lNumIntDocAportePagto
                objInfoVoucher.dValorComissao = objVoucher.dValorComissao
                objInfoVoucher.dValorBruto = objVoucher.dValorBruto
                objInfoVoucher.dtDataEmissao = objVoucher.dtData
                objInfoVoucher.dValor = objVoucher.dValor
                objInfoVoucher.dValorAporte = dValorAporte
            Else
                objInfoVoucher.dValorCambio = 0
                objInfoVoucher.lCodigoAporte = 0
                objInfoVoucher.lNumIntDocAportePagto = 0
                objInfoVoucher.dValorComissao = 0
                objInfoVoucher.dValorBruto = dValorItem
                objInfoVoucher.dtDataEmissao = dtDataItem
                objInfoVoucher.dValor = dValorItem
                objInfoVoucher.dValorAporte = 0
            End If
            
            objInfoVoucher.lFatura = 1
            objInfoVoucher.lNumVou = objVoucher.lNumVou
            objInfoVoucher.sCodGrupo = objVoucher.sCodGrupo
            objInfoVoucher.sControle = objVoucher.sControle
            objInfoVoucher.sMoeda = objVoucher.sMoeda
            objInfoVoucher.sProduto = objVoucher.sProduto
            objInfoVoucher.sSerie = sSerie
            objInfoVoucher.sTipoDoc = sTipoDoc
            objInfoVoucher.sTipoVou = sTipVou
            
            If objInfoVoucher.sTipoDoc = TRV_TIPODOC_CMC_TEXTO Or objInfoVoucher.sTipoDoc = TRV_TIPODOC_CMR_TEXTO Then
                objInfoVoucher.sControle = ""
            End If
            
            If objInfoVoucher.sTipoDoc = TRV_TIPODOC_NVL_TEXTO Then
                objInfoVoucher.dValorAporte = dValorAporte
                objInfoVoucher.lCodigoAporte = lCodigoAporte
                objInfoVoucher.iParcelaAporte = iParcelaAporte
                objInfoVoucher.lNumIntDocAportePagto = lNumIntDocAportePagto
            End If
            
            objInfoVoucher.lCliVou = objInfoVoucher.lCliente
            objInfoVoucher.sNomeCliVou = objInfoVoucher.sNome
            
            If objInfoVoucher.sTipoDoc = TRV_TIPODOC_OVER_TEXTO Then
                objInfoFatura.iTipoDoc = TRV_TIPODOC_FAT_OVER
            End If
                        
            objInfoVoucher.sTitular = objVoucher.sPassageiroNome & " " & objVoucher.sPassageiroSobreNome
                        
            If objVoucher.lEmissor <> 0 Or objInfoFatura.iTipoDoc = TRV_TIPODOC_FAT_OVER Then

                Set objForn = New ClassFornecedor

                If objInfoFatura.iTipoDoc = TRV_TIPODOC_FAT_OVER Then
                    objForn.lCodigo = objInfoVoucher.lCliente
                Else
                    objForn.lCodigo = objVoucher.lEmissor
                End If
                
                lErro = CF("Fornecedor_Le", objForn)
                If lErro <> SUCESSO And lErro <> 12729 Then gError 194210
                
                objInfoVoucher.sEmissor = objForn.sRazaoSocial
            
            End If
        
            If objInfoVoucher.sTipoDoc = TRV_TIPODOC_CMC_TEXTO Or objInfoVoucher.sTipoDoc = TRV_TIPODOC_CMR_TEXTO Or (objVoucher.iCartao = MARCADO And objInfoVoucher.sTipoDoc = TRV_TIPODOC_VOU_TEXTO) Or ((objInfoVoucher.sTipoDoc = TRV_TIPODOC_NVL_TEXTO Or objInfoVoucher.sTipoDoc = TRV_TIPODOC_OCR_TEXTO) And objInfoVoucher.lCliente <> objVoucher.lClienteVou) Then
                
                If objVoucher.lClienteVou <> 0 Then
                
                    Set objCliente = New ClassCliente
        
                    objCliente.lCodigo = objVoucher.lClienteVou
            
                    lErro = CF("Cliente_Le", objCliente, alComando(9), alComando(15))
                    If lErro <> SUCESSO And lErro <> 12293 Then gError 192840
                    
                    objInfoVoucher.lCliVou = objVoucher.lClienteVou
                    objInfoVoucher.sNomeCliVou = objCliente.sRazaoSocial
                    
                    If objInfoVoucher.sTipoDoc = TRV_TIPODOC_CMC_TEXTO Or objInfoVoucher.sTipoDoc = TRV_TIPODOC_CMR_TEXTO Or ((objInfoVoucher.sTipoDoc = TRV_TIPODOC_NVL_TEXTO Or objInfoVoucher.sTipoDoc = TRV_TIPODOC_OCR_TEXTO) And objInfoVoucher.lCliente <> objVoucher.lClienteVou) Then
                        'Se for comissão deve sair o cliente do voucher como titular
                        objInfoVoucher.sTitular = objCliente.sNomeReduzido
                    End If
                    
                End If
                
            End If
            
            If objInfoFatura.iTipoDoc = TRV_TIPODOC_FAT_OVER Then
                objInfoVoucher.sControle = objInfoVoucher.sEmissor
            End If
            
            'Se for voucher pago com cartão o titular é o titular do cartão
            If objVoucher.iCartao = MARCADO And objInfoVoucher.sTipoDoc = TRV_TIPODOC_VOU_TEXTO Then
                objInfoVoucher.sTitular = objVoucher.sTitular
            End If
            
            objInfoFatura.iParcelaAporte = iParcelaAporte

            objInfoFatura.colInfoVouchers.Add objInfoVoucher
            
            If sTipoDoc = TRV_TIPODOC_VOU_TEXTO Then
                       
                lErro = Comando_Executar(alComando(4), "SELECT TipoPagtoAporte, NumIntDocPagtoAporte, ValorAporte, ParcelaAporte, CodigoAporte FROM TRVVoucherAporte WHERE TipVou= ? AND Serie = ? AND NumVou = ? ", _
                        iTipoPagtoAporte, lNumIntDocAportePagto, dValorAporte, iParcelaAporte, lCodigoAporte, objInfoVoucher.sTipoVou, objInfoVoucher.sSerie, objInfoVoucher.lNumVou)
                If lErro <> AD_SQL_SUCESSO Then gError 196486
        
                'Busca Primeiro
                lErro = Comando_BuscarPrimeiro(alComando(4))
                If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196487
                
                Do While lErro = AD_SQL_SUCESSO
            
                    Set objVouAporte = New ClassTRVVoucherAporte
                    
                    objVouAporte.dValorAporte = dValorAporte
                    objVouAporte.iParcelaAporte = iParcelaAporte
                    objVouAporte.iTipoPagtoAporte = iTipoPagtoAporte
                    objVouAporte.lCodigoAporte = lCodigoAporte
                    objVouAporte.lNumIntDocPagtoAporte = lNumIntDocAportePagto
                    objVouAporte.lNumVou = objInfoVoucher.lNumVou
                    objVouAporte.sSerie = objInfoVoucher.sSerie
                    objVouAporte.sTipVou = objInfoVoucher.sTipoVou

                    objInfoVoucher.colAportes.Add objVouAporte
                    
                    'Busca Próximo
                    lErro = Comando_BuscarProximo(alComando(4))
                    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196488
                    
                Loop
      
            ElseIf sTipoDoc = TRV_TIPODOC_NVL_TEXTO Or sTipoDoc = TRV_TIPODOC_OCR_TEXTO Then
            
                lErro = Comando_Executar(alComando(5), "SELECT TipoPagtoAporte, NumIntDocPagtoAporte, ValorAporte, ParcelaAporte, CodigoAporte FROM TRVOcorrenciaAporte WHERE NumIntDocOCR = ? ", _
                        iTipoPagtoAporte, lNumIntDocAportePagto, dValorAporte, iParcelaAporte, lCodigoAporte, objInfoVoucher.lNumIntDoc)
                If lErro <> AD_SQL_SUCESSO Then gError 196489
        
                'Busca Primeiro
                lErro = Comando_BuscarPrimeiro(alComando(5))
                If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196490
                
                Do While lErro = AD_SQL_SUCESSO
            
                    Set objOCRAporte = New ClassTRVOcorrenciaAporte
                    
                    objOCRAporte.dValorAporte = dValorAporte
                    objOCRAporte.iParcelaAporte = iParcelaAporte
                    objOCRAporte.iTipoPagtoAporte = iTipoPagtoAporte
                    objOCRAporte.lCodigoAporte = lCodigoAporte
                    objOCRAporte.lNumIntDocPagtoAporte = lNumIntDocAportePagto
                    objOCRAporte.lNumIntDocOCR = objInfoVoucher.lNumIntDoc

                    objInfoVoucher.colAportes.Add objOCRAporte
                    
                    'Busca Próximo
                    lErro = Comando_BuscarProximo(alComando(5))
                    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196491
                    
                Loop
            
            End If

            'Busca Proximo
            lErro = Comando_BuscarProximo(alComando(1))
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192839
        
        Loop

        dValorItens = 0
        dValorComissao = 0
        dValorAporte = 0
        dValorCreditos = 0
        dValorDebitos = 0
        lLinha = lLinha + 1
        
        objInfoFatura.lLinha = lLinha
        
        Call objInfoFatura.Agrupa_Itens
        
        For Each objInfoVoucher In objInfoFatura.colInfoVouchersAG
        
            If objInfoVoucher.iMarcado = MARCADO Then
                dValorItens = dValorItens + objInfoVoucher.dValor - objInfoVoucher.dValorAporte
                dValorComissao = dValorComissao + objInfoVoucher.dValorComissao
                dValorAporte = dValorAporte + objInfoVoucher.dValorAporte
                
                'Se for negativo é um crédito
                If objInfoVoucher.dValor < 0 Then
                    dValorCreditos = dValorCreditos + objInfoVoucher.dValor
                End If
                'Se for um documento fora voucher que acrescebta no valor é um débito
                If objInfoVoucher.dValor > 0 And objInfoVoucher.sTipoDoc <> TRV_TIPODOC_VOU_TEXTO Then
                    dValorDebitos = dValorDebitos + objInfoVoucher.dValor
                End If
                'Se existe um investimento é um crédito
                If objInfoVoucher.dValorAporte > 0 Then
                    dValorCreditos = dValorCreditos - objInfoVoucher.dValorAporte
                End If
                'Se está sendo devolvido um investimento é um débito
                If objInfoVoucher.dValorAporte < 0 Then
                    dValorDebitos = dValorDebitos - objInfoVoucher.dValorAporte
                End If
                
            End If
    
        Next
        
        If dValorItens = 0 Then
            objInfoFatura.iMarcado = DESMARCADO
        End If
        
        objInfoFatura.dValor = dValor
        objInfoFatura.dValorAporte = dValorAporte
        objInfoFatura.dValorComissao = dValorComissao
        objInfoFatura.dValorCreditos = dValorCreditos - objInfoFatura.dValorAporteCred
        objInfoFatura.dValorDebitos = dValorDebitos
        
        Set objCliente = New ClassCliente
        Set objFilialCliente = New ClassFilialCliente
        Set objEndereco = New ClassEndereco
        Set objFilialEmpresa = New AdmFiliais
    
        objCliente.lCodigo = objInfoFatura.lCliente
        objFilialCliente.lCodCliente = objInfoFatura.lCliente
        objFilialCliente.iCodFilial = FILIAL_MATRIZ
        
        lErro = CF("Cliente_Le", objCliente, alComando(9), alComando(15))
        If lErro <> SUCESSO And lErro <> 12293 Then gError 192840

        If lErro = SUCESSO Then
        
 sParteErro = sParteErro & " Cli"
 
            lErro = CF("Cliente_Le_Customizado", objCliente, False, alComando(10), alComando(11), alComando(12))
            If lErro <> SUCESSO Then gError 192841
        
            lErro = CF("FilialCliente_Le", objFilialCliente, alComando(13))
            If lErro <> SUCESSO And lErro <> 12567 Then gError 192841
            
        Else
            
 sParteErro = sParteErro & " Forn"
            
            Set objForn = New ClassFornecedor
            Set objFilialForn = New ClassFilialFornecedor
            
            objForn.lCodigo = objInfoFatura.lCliente
            objFilialForn.lCodFornecedor = objInfoFatura.lCliente
            objFilialForn.iCodFilial = FILIAL_MATRIZ
            
            lErro = CF("Fornecedor_Le", objForn)
            If lErro <> SUCESSO And lErro <> 12729 Then gError 192841

            lErro = CF("FilialFornecedor_Le", objFilialForn)
            If lErro <> SUCESSO And lErro <> 12929 Then gError 192841
            
            objCliente.sNomeReduzido = objForn.sNomeReduzido
            objCliente.sRazaoSocial = objForn.sRazaoSocial
            
            objFilialCliente.lEndereco = objFilialForn.lEndereco
            objFilialCliente.sCgc = objFilialForn.sCgc
            objFilialCliente.sInscricaoEstadual = objFilialForn.sInscricaoEstadual
            objFilialCliente.sInscricaoMunicipal = objFilialForn.sInscricaoMunicipal
            objFilialCliente.sNome = objFilialForn.sNome

        End If

        objFaturamento.colFatClientes.Add objCliente
        objFaturamento.colFatFiliaisCliente.Add objFilialCliente
                
        objEndereco.lCodigo = objFilialCliente.lEndereco
        
 sParteErro = sParteErro & " End" & CStr(objFilialCliente.lEndereco)
        
        lErro = CF("Endereco_Le", objEndereco, alComando(14))
 sParteErro = sParteErro & " EndError " & CStr(lErro)
        
        If lErro <> SUCESSO Then gError 192842
                
        objFaturamento.colFatEnderecos.Add objEndereco
                
        objFilialEmpresa.iCodFilial = objInfoFatura.iFilialEmpresa
        
        lErro = CF("FilialEmpresa_Le", objFilialEmpresa)
        If lErro <> SUCESSO Then gError 192843

        objFaturamento.colFatFiliais.Add objFilialEmpresa
        
        objInfoFatura.lLinhaFatFilial = objFaturamento.colFatFiliais.Count
    
        objFaturamento.colFatEnderecos.Add objFilialEmpresa.objEndereco
        
        If objInfoFatura.lNumeroFaturaReal > 999999 Then
            sArquivo = sDiretorio & gsEmpresaTRVHTML & String(8 - Len(CStr(objInfoFatura.lNumeroFaturaReal)), "0") & CStr(objInfoFatura.lNumeroFaturaReal) & ".html"
        Else
            sArquivo = sDiretorio & gsEmpresaTRVHTML & String(6 - Len(CStr(objInfoFatura.lNumeroFaturaReal)), "0") & CStr(objInfoFatura.lNumeroFaturaReal) & ".html"
        End If
        
        If sSiglaDocumento = TIPODOC_CARTAO_CRED_DEB Or objInfoFatura.dValor < 0 Then
            lErro = Gera_Arquivo_Html(objFaturamento, sModeloCP, sArquivo, sConteudoHtml)
        Else
            lErro = Gera_Arquivo_Html(objFaturamento, sModelo, sArquivo, sConteudoHtml)
        End If

        If lErro <> SUCESSO Then gError 192844
    
        'Busca Proximo
        lErro = Comando_BuscarProximo(alComando(0))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 192845
    
        If bAcompanhamento Then
            Call objFrmAguardeTela.ProcessouItem
            
            If objFrmAguarde.iCancelar = MARCADO Then Exit Do
        End If

    Loop
    
    If bAcompanhamento Then
        Set objFrmAguardeTela = Nothing
        If objFrmAguarde.iCancelar = MARCADO Then gError 192844
    End If
 
    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVFaturas_Regera_Html = SUCESSO

    Exit Function

Erro_TRVFaturas_Regera_Html:

    TRVFaturas_Regera_Html = gErr
    
    'MsgBox sParteErro

    Select Case gErr

        Case 192830
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 192831, 192832, 192845
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TITULOSREC", gErr)
            
        Case 192833, 192838, 192840 To 192844, 194207

        Case 192834, 192835
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_PARCELASREC", gErr)
            
        Case 192836, 192837, 192839
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVVOUCHERS", gErr)
            
        Case 196486 To 196488
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVVOUCHERAPORTE", gErr)
        
        Case 196489 To 196491
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVOCORRENCIAAPORTE", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 192845)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    If Not (objFrmAguardeTela Is Nothing) Then
        Call objFrmAguardeTela.Trata_Erro
    End If
    
    Exit Function

End Function

Function Browse_Formata_Campo_Customizado(objBrowse As AdmBrowse, colRegCampo As Collection, objValorCampo As AdmValorCampo, vCampo As Variant, iProximoCampo As Integer, iLinha As Integer, iIndice As Integer, iExercicio As Integer, iPeriodo As Integer, sNomeExterno As String) As Long

Dim lErro As Long

On Error GoTo Erro_Browse_Formata_Campo_Customizado

    Select Case objValorCampo.iTipo

        Case ADM_TIPO_DOUBLE
        
            Select Case objValorCampo.iSubTipo
        
                Case ADM_SUBTIPO_APORTE
                    objBrowse.objGrid.TextMatrix(iLinha, objValorCampo.iPosicaoTela - 1) = Format(vCampo, "#,##0.00##")
                    
            End Select

        Case ADM_TIPO_DATE
           

        Case ADM_TIPO_SMALLINT
    
            Select Case objValorCampo.iSubTipo
        
                Case ADM_SUBTIPO_STATUS
'                    Call CF("Converte_Status", vCampo, sStatus)
'                    objBrowse.objGrid.TextMatrix(iLinha, objValorCampo.iPosicaoTela - 1) = sStatus

            End Select
    
        Case Else
            
            Select Case objValorCampo.iSubTipo

                Case ADM_SUBTIPO_CGC
                
                    'objBrowse.objGrid.TextMatrix(iLinha, objValorCampo.iPosicaoTela - 1) = sContaMascarada

            End Select
            
    End Select
    
    Browse_Formata_Campo_Customizado = SUCESSO
    
    Exit Function
    
Erro_Browse_Formata_Campo_Customizado:

    Browse_Formata_Campo_Customizado = gErr

    Select Case gErr
            
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error$, 192874)

    End Select

    Exit Function

End Function

Public Function DocFaturadosLista_BotaoConsulta(ByVal objVoucher As ClassTRVVouchers) As Long

Dim sTela As String
Dim objObjeto As Object

On Error GoTo Erro_DocFaturadosLista_BotaoConsulta

    Select Case objVoucher.iTipoDocDestino
    
        Case TRV_TIPO_DOC_DESTINO_CREDFORN
            sTela = TRV_TIPO_DOC_DESTINO_CREDFORN_TELA
            Set objObjeto = New ClassCreditoPagar
            
        Case TRV_TIPO_DOC_DESTINO_DEBCLI
            sTela = TRV_TIPO_DOC_DESTINO_DEBCLI_TELA
            Set objObjeto = New ClassDebitoRecCli
    
        Case TRV_TIPO_DOC_DESTINO_TITPAG
            sTela = TRV_TIPO_DOC_DESTINO_TITPAG_TELA
            Set objObjeto = New ClassTituloPagar
    
        Case TRV_TIPO_DOC_DESTINO_TITREC
            sTela = TRV_TIPO_DOC_DESTINO_TITREC_TELA
            Set objObjeto = New ClassTituloReceber
    
        Case TRV_TIPO_DOC_DESTINO_NFSPAG
            sTela = TRV_TIPO_DOC_DESTINO_NFSPAG_TELA
            Set objObjeto = New ClassNFsPag
    
    End Select
    
    If Not (objObjeto Is Nothing) Then
    
        objObjeto.lNumIntDoc = objVoucher.lNumIntDocDestino
        
        Call Chama_Tela(sTela, objObjeto)
        
    End If
    
    DocFaturadosLista_BotaoConsulta = SUCESSO

    Exit Function

Erro_DocFaturadosLista_BotaoConsulta:

    DocFaturadosLista_BotaoConsulta = gErr

    Select Case gErr

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 192879)

    End Select

    Exit Function

End Function

Public Function TRVAPortesPagtoFatHistResLista_BotaoConsulta(ByVal objVoucher As ClassTRVVouchers) As Long

Dim colSelecao As New Collection

On Error GoTo Erro_TRVAPortesPagtoFatHistResLista_BotaoConsulta

    colSelecao.Add objVoucher.lNumIntDocPagtoAporteFat
    colSelecao.Add objVoucher.iTipoPagtoAporte
    colSelecao.Add objVoucher.iTipoDocDestino
    colSelecao.Add objVoucher.lNumIntDocDestino
     
    Call Chama_Tela("TRVAPortesPagtoFatHistLista", colSelecao, Nothing, Nothing, "NumIntDocPagtoAporteFat = ? AND TipoPagtoAporte = ? AND TipoDocDestino = ? AND NumIntDocDestino = ?")

    TRVAPortesPagtoFatHistResLista_BotaoConsulta = SUCESSO

    Exit Function

Erro_TRVAPortesPagtoFatHistResLista_BotaoConsulta:

    TRVAPortesPagtoFatHistResLista_BotaoConsulta = gErr

    Select Case gErr

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 192879)

    End Select

    Exit Function

End Function

Public Function TRVOcorrencias_Importa(ByVal objImpOcr As ClassImpCoinfoOcor, Optional ByVal bConsiderarFatSigav As Boolean = False) As Long

Dim lErro As Long
Dim alComando(0 To 3) As Long
Dim iIndice As Integer
Dim objOCR As New ClassTRVOcorrencias
Dim objOCRBD As New ClassTRVOcorrencias
Dim objOcrDet As New ClassTRVOcorrenciaDet
Dim lNumFat As Long
Dim lNumIntDocDest As Long
Dim iTipoNumIntDocDest As Integer
Dim iCancelado As Integer
Dim lNumIntDocOCR As Long
Dim iTipoDestino As Integer
Dim iExcluido As Integer

On Error GoTo Erro_TRVOcorrencias_Importa

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 194435
    Next

    objOCR.lCodigo = objImpOcr.lnumocorr + FATOR_COD_OCR_IMPORTACAO
    objOCR.lCliente = objImpOcr.lcodemp
    objOCR.iFilialCliente = FILIAL_MATRIZ
    objOCR.dtDataEmissao = objImpOcr.dtData
    
    objOCR.dValorTotal = objImpOcr.dValor
    If objImpOcr.idc = DESMARCADO Then objOCR.dValorTotal = -objOCR.dValorTotal
    
    objOCR.sObservacao = ""
    objOCR.iOrigem = IMPORTACAO_OCORRENCIA_CODIGO
    objOCR.sHistorico = left(objImpOcr.stexto1 & objImpOcr.stexto2 & objImpOcr.stexto3 & objImpOcr.stexto4 & objImpOcr.stexto5 & objImpOcr.stexto6, STRING_TRV_OCR_HISTORICO)
    
    If objImpOcr.iliberado = MARCADO Then
        objOCR.iStatus = STATUS_TRV_OCR_BLOQUEADO
    Else
        objOCR.iStatus = STATUS_TRV_VOU_ABERTO
    End If
    
    objOCR.iFormaPagto = FORMAPAGTO_TRV_OCR_FAT
    objOCR.lNumVou = objImpOcr.lNumVou
    objOCR.sSerie = objImpOcr.sSerie
    objOCR.sTipoDoc = objImpOcr.sTipVou

    objOcrDet.iTipo = IMPORTACAO_OCORRENCIA_TIPO_IMP_CODIGO
    objOcrDet.iSeq = 1
    objOcrDet.dValor = objOCR.dValorTotal
    
    objOCR.colDetalhamento.Add objOcrDet
    
    objOCRBD.lCodigo = objOCR.lCodigo
    
    'Le a ocorrência
    lErro = CF("TRVOcorrencias_Le", objOCRBD)
    If lErro <> SUCESSO And lErro <> ERRO_LEITURA_SEM_DADOS Then gError 194436
    
    If objOCRBD.lNumIntDocDestino = 0 Then
    
        'Se já existe exclui para poder relançar
        If lErro = SUCESSO Then
            lErro = CF("TRVOcorrencias_Exclui_EmTrans", objOCRBD)
            If lErro <> SUCESSO Then gError 194436
        End If
        
        'Le a tabela TitulosRecTRV
        lErro = Comando_Executar(alComando(0), "SELECT NumFat, Excluido FROM CoinfoItemFatura WHERE TipoDoc = ? AND CodEst = ? AND NumDoc = ? ORDER BY  NumIntArq DESC,  NumRegArqTexto DESC", lNumFat, iExcluido, TRV_TIPODOC_OCR_TEXTO, gsEmpresaTRV, objOCR.lCodigo - FATOR_COD_OCR_IMPORTACAO)
        If lErro <> AD_SQL_SUCESSO Then gError 194437
    
        'Busca Primeiro
        lErro = Comando_BuscarPrimeiro(alComando(0))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 194438
        
        If lErro <> AD_SQL_SUCESSO Then
            lNumFat = 0
            iExcluido = 0
        End If
        
        If (lErro = AD_SQL_SUCESSO And iExcluido = DESMARCADO) Or (lErro <> AD_SQL_SUCESSO) Then
        
            lErro = CF("TRVOcorrencias_Grava_EmTrans", objOCR, True, True)
            If lErro <> SUCESSO Then gError 194436
        
            'Le a tabela TitulosRecTRV
            lErro = Comando_Executar(alComando(1), "SELECT Cancelado, TipoDocCorporator, NumIntDocCorporator FROM CoinfoFatura WHERE CodEst = ? AND NumFat = ? AND NumIntDocCorporator <> 0 ORDER BY  NumIntArq DESC,  NumRegArqTexto DESC", iCancelado, iTipoNumIntDocDest, lNumIntDocDest, gsEmpresaTRV, lNumFat)
            If lErro <> AD_SQL_SUCESSO Then gError 194439
        
            'Busca Primeiro
            lErro = Comando_BuscarPrimeiro(alComando(1))
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 194440
        
            If iCancelado = DESMARCADO Then
            
                lErro = Comando_ExecutarPos(alComando(2), "SELECT NumIntDoc FROM TRVOcorrencias WHERE Codigo= ? ", _
                            0, lNumIntDocOCR, objOCR.lCodigo)
                If lErro <> AD_SQL_SUCESSO Then gError 194441
            
                'Busca Primeiro
                lErro = Comando_BuscarPrimeiro(alComando(2))
                If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 194442
                
                If lErro = AD_SQL_SEM_DADOS Then gError 194433
            
                'Trava registro contra alterações/Leituras
                lErro = Comando_LockExclusive(alComando(2))
                If lErro <> SUCESSO Then gError 194434
                
                Select Case iTipoNumIntDocDest
                
                    Case TIPO_TITULO_PAGAR_TRV
                        iTipoDestino = TRV_TIPO_DOC_DESTINO_TITPAG
                        
                    Case TIPO_TITULO_RECEBER_TRV
                        iTipoDestino = TRV_TIPO_DOC_DESTINO_TITREC
                
                    Case TIPO_NF_PAGAR_TRV
                        iTipoDestino = TRV_TIPO_DOC_DESTINO_NFSPAG
                
                End Select
        
                'Importa sem marcar como já faturado (Faturamento em pararelo)
                If Not bConsiderarFatSigav Then
                    lErro = Comando_ExecutarPos(alComando(3), "UPDATE TRVOcorrencias SET Status = ? ", alComando(2), _
                    STATUS_TRV_OCR_LIBERADO)
                Else
                    lErro = Comando_ExecutarPos(alComando(3), "UPDATE TRVOcorrencias SET TipoDocDestino= ?, NumIntDocDestino=?, NumTitulo = ?, Status = ? ", alComando(2), _
                    iTipoDestino, lNumIntDocDest, lNumFat, STATUS_TRV_OCR_LIBERADO)
                End If
                If lErro <> AD_SQL_SUCESSO Then gError 194435
            
            End If
        
        End If
        
        objImpOcr.lNumIntDoc = objOCR.lNumIntDoc
    
    Else
        objImpOcr.lNumIntDoc = objOCRBD.lNumIntDoc
    
    End If
    
    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVOcorrencias_Importa = SUCESSO

    Exit Function

Erro_TRVOcorrencias_Importa:

    TRVOcorrencias_Importa = gErr

    Select Case gErr

        Case 194435
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 194436
        
        Case 194437 To 194432
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVOCORRENCIAS", gErr)
    
        Case 194433 'ERRO_OCORRENCIA_NAO_CADASTRADA
            Call Rotina_Erro(vbOKOnly, "ERRO_OCORRENCIA_NAO_CADASTRADA", gErr, objOCR.lCodigo)
        
        Case 194434
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVOCORRENCIAS", gErr)
        
        Case 194435
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVOCORRENCIAS", gErr)
               
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 194436)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Public Function Endereco_Grava_Customizado(ByVal objEndereco As ClassEndereco) As Long

Dim lErro As Long
Dim alComando(0 To 1) As Long
Dim iIndice As Integer
Dim lCodigo As Long

On Error GoTo Erro_Endereco_Grava_Customizado

    If Not (objEndereco.objInfoUsu Is Nothing) Then

        'Abertura de Comando
        For iIndice = LBound(alComando) To UBound(alComando)
            alComando(iIndice) = Comando_Abrir()
            If alComando(iIndice) = 0 Then gError 196215
        Next
    
        'Le a tabelaTRVOcorrencias
        lErro = Comando_ExecutarPos(alComando(0), "SELECT Codigo FROM Enderecos WHERE Codigo= ? ", 0, lCodigo, objEndereco.lCodigo)
        If lErro <> AD_SQL_SUCESSO Then gError 196216
    
        'Busca Primeiro
        lErro = Comando_BuscarPrimeiro(alComando(0))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196217
    
        If lErro <> AD_SQL_SUCESSO Then gError 196218
    
        'Trava registro contra alterações/Leituras
        lErro = Comando_LockExclusive(alComando(0))
        If lErro <> SUCESSO Then gError 196219
    
        lErro = Comando_ExecutarPos(alComando(1), "UPDATE Enderecos SET Email2= ? ", alComando(0), objEndereco.objInfoUsu.sEmail2)
        If lErro <> AD_SQL_SUCESSO Then gError 196220
            
        'Fecha Comando
        For iIndice = LBound(alComando) To UBound(alComando)
            Call Comando_Fechar(alComando(iIndice))
        Next
        
    End If

    Endereco_Grava_Customizado = SUCESSO

    Exit Function

Erro_Endereco_Grava_Customizado:

    Endereco_Grava_Customizado = gErr

    Select Case gErr
        
        Case 196215
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 196216, 196217
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_ENDERECOS", gErr)

        Case 196218
            Call Rotina_Erro(vbOKOnly, "ERRO_ENDERECOS_NAO_CADASTRADO", gErr)

        Case 196219
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_ENDERECOS", gErr)

        Case 196220
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_ENDERECOS", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 196221)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Public Function TRVTitulosExp_Insere(ByVal objTRVTitulosExp As ClassTRVTitulosExp, Optional lComandoP1 As Long = 0, Optional lComandoP2 As Long = 0) As Long

Dim lErro As Long
Dim alComando(1 To 2) As Long
Dim iIndice As Integer
Dim lNumIntDoc As Long
Dim objFaturaAporte As ClassTRVFaturaAporte

On Error GoTo Erro_TRVTitulosExp_Insere

    If lComandoP1 <> 0 And lComandoP2 <> 0 Then
        alComando(1) = lComandoP1
        alComando(2) = lComandoP2
    Else
        'Abertura de Comando
        For iIndice = LBound(alComando) To UBound(alComando)
            alComando(iIndice) = Comando_Abrir()
            If alComando(iIndice) = 0 Then gError 196236
        Next
    End If

    'Obter NumIntDoc
    lErro = CF("Config_ObterNumInt", "TRVConfig", "NUM_INT_PROX_TRVTITULOSEXP", lNumIntDoc)
    If lErro <> SUCESSO Then gError 196237

    objTRVTitulosExp.lNumIntDoc = lNumIntDoc

    lErro = Comando_Executar(alComando(1), "INSERT INTO TRVTitulosExp( NumIntDoc, Usuario, Data, Hora, " & _
            "TipoDocOrigem, NumIntDocOrigem, NumTitulo, Excluido, Exportado, Motivo, TemQueContabilizar," & _
            "ValorAporteCred,ValorAporte,ValorComissao,ValorCreditos,ValorDebitos,ValorTarifa,ValorDeducoes) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)", _
            objTRVTitulosExp.lNumIntDoc, gsUsuario, Date, CDbl(Time), _
            objTRVTitulosExp.iTipoDocOrigem, objTRVTitulosExp.lNumIntDocOrigem, objTRVTitulosExp.lNumTitulo, objTRVTitulosExp.iExcluido, objTRVTitulosExp.iExportado, objTRVTitulosExp.sMotivo, objTRVTitulosExp.iTemQueContabilizar, _
            objTRVTitulosExp.dValorAporteCred, objTRVTitulosExp.dValorAporte, objTRVTitulosExp.dValorComissao, objTRVTitulosExp.dValorCreditos, objTRVTitulosExp.dValorDebitos, _
            objTRVTitulosExp.dValorTarifa, objTRVTitulosExp.dValorDeducoes)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196238
    
    For Each objFaturaAporte In objTRVTitulosExp.colFatAporteCred
    
        lErro = Comando_Executar(alComando(2), "INSERT INTO TRVTitulosExpAporte( NumIntDocTitExp,CodigoAporte,ParcelaAporte,NumParcelas,ValorAporte,NumIntDocCredito,PagtoParcial) VALUES (?,?,?,?,?,?,?)", _
                objTRVTitulosExp.lNumIntDoc, objFaturaAporte.lCodigoAporte, objFaturaAporte.iParcelaAporte, objFaturaAporte.iNumParcelas, objFaturaAporte.dValorAporte, objFaturaAporte.lNumIntDocCredito, objFaturaAporte.iPagtoParcial)
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196238
    
    Next

    If lComandoP1 = 0 Or lComandoP2 = 0 Then
        'Fecha Comando
        For iIndice = LBound(alComando) To UBound(alComando)
            Call Comando_Fechar(alComando(iIndice))
        Next
    End If

    TRVTitulosExp_Insere = SUCESSO

    Exit Function

Erro_TRVTitulosExp_Insere:

    TRVTitulosExp_Insere = gErr

    Select Case gErr

        Case 196236
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 196237

        Case 196238
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_TRVTITULOSEXP", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 196239)

    End Select

    If lComandoP1 = 0 Or lComandoP2 = 0 Then
        'Fecha Comando
        For iIndice = LBound(alComando) To UBound(alComando)
            Call Comando_Fechar(alComando(iIndice))
        Next
    End If

    Exit Function

End Function

Public Function TRVTitulos_Insere(ByVal objTRVTitulos As ClassTRVTitulos, Optional lComandoP1 As Long = 0) As Long

Dim lErro As Long
Dim alComando(1 To 1) As Long
Dim iIndice As Integer
Dim lNumIntDoc As Long

On Error GoTo Erro_TRVTitulos_Insere

    If lComandoP1 <> 0 Then
        alComando(1) = lComandoP1
    Else
        'Abertura de Comando
        For iIndice = LBound(alComando) To UBound(alComando)
            alComando(iIndice) = Comando_Abrir()
            If alComando(iIndice) = 0 Then gError 200228
        Next
    End If

    'Obter NumIntDoc
    lErro = CF("Config_ObterNumInt", "TRVConfig", "NUM_INT_PROX_TRVTITULOS", lNumIntDoc)
    If lErro <> SUCESSO Then gError 200229

    objTRVTitulos.lNumIntDoc = lNumIntDoc

    lErro = Comando_Executar(alComando(1), "INSERT INTO TRVTitulos( NumIntDoc, TipoDocOrigem, NumIntDocOrigem, TipoDoc) VALUES (?,?,?,?)", _
            objTRVTitulos.lNumIntDoc, objTRVTitulos.iTipoDocOrigem, objTRVTitulos.lNumIntDocOrigem, objTRVTitulos.sTipoDoc)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200230
    

    If lComandoP1 = 0 Then
        'Fecha Comando
        For iIndice = LBound(alComando) To UBound(alComando)
            Call Comando_Fechar(alComando(iIndice))
        Next
    End If

    TRVTitulos_Insere = SUCESSO

    Exit Function

Erro_TRVTitulos_Insere:

    TRVTitulos_Insere = gErr

    Select Case gErr

        Case 200228
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 200229

        Case 200230
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_TRVTITULOS", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 200231)

    End Select

    If lComandoP1 = 0 Then
        'Fecha Comando
        For iIndice = LBound(alComando) To UBound(alComando)
            Call Comando_Fechar(alComando(iIndice))
        Next
    End If

    Exit Function

End Function

Public Function TRVTitulos_Exporta_Sigav() As Long

Dim lErro As Long
Dim lTransacao As Long
Dim alComando(1 To 5) As Long
Dim iIndice As Integer
Dim objTRVTitulosExp As ClassTRVTitulosExp
Dim colTitulos As New Collection
Dim colRegTitulos As New Collection
Dim colRegItens As New Collection
Dim sRegistroTit As String
Dim sRegistroItens As String
Dim dtDataEmissao As Date
Dim dtDataVencimento As Date
Dim lcodemp As Long
Dim dValor As Double
Dim iCpCr As Integer
Dim objTitPag As ClassTituloPagar
Dim objTitRec As ClassTituloReceber
Dim objNFsPag As ClassNFsPag
Dim dTotalAporte As Double
Dim dValorAporte As Double
Dim dtDataVou As Date
Dim lNumVou As Long
Dim dValorVou As Double
Dim lNumeroDoc As Long
Dim sTipoDoc As String
Dim sSerie As String
Dim sTipVou As String
Dim sCodGrupo As String
Dim sNomeArq1 As String
Dim sNomeArq2 As String
Dim sParteNomeArq As String
Dim vRegistro As Variant
Dim bArq1Aberto As Boolean
Dim bArq2Aberto As Boolean
Dim sDiretorio As String
Dim colParcelaReceber As colParcelaReceber
Dim colParcelasPag As colParcelaPagar
Dim sUsuario As String
Dim dtdatareg As Date
Dim iMarca As Integer
Dim lrecnsica As Long
Dim iQtdPax As Integer
Dim icondpag As Integer
Dim sControle As String
Dim iCartao As Integer
Dim sCodPro As String
Dim sGrupo As String
Dim sValidCC As String
Dim iQuantParc As Integer
Dim dVlCartao As Double
Dim sNumAuto As String
Dim sCiaCart As String
Dim idiasantc As Integer
Dim imaster As Integer
Dim lnummstr As Long
Dim lKit As Long
Dim lRetorno As Long
Dim tTRVTitulosExp As typeTRVTitulosExp
Dim bIgnora As Boolean
Dim sDiretorioTemp As String

On Error GoTo Erro_TRVTitulos_Exporta_Sigav

    'Abertura de transação
    lTransacao = Transacao_Abrir()
    If lTransacao = 0 Then gError 196243

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 196244
    Next
    
    sParteNomeArq = Format(Now, "YYYYMMDDHHMMSS")
    
    sNomeArq1 = gsEmpresaTRV & "cabecfat" & sParteNomeArq & ".d"
    sNomeArq2 = gsEmpresaTRV & "itemfatu" & sParteNomeArq & ".d"
    
    'Obtém o diretório onde estão os arquivos
    sDiretorio = String(512, 0)
    lRetorno = GetPrivateProfileString("Geral", "dirArqImpCorpFat", "c:\travelace\corporator\", sDiretorio, 512, "ADM100.INI")
    sDiretorio = left(sDiretorio, lRetorno)
    
    'Obtém o diretório onde estão os arquivos
    sDiretorioTemp = String(512, 0)
    lRetorno = GetPrivateProfileString("Geral", "dirArqImpCoinfo", "c:\travelace\corporator\", sDiretorioTemp, 512, "ADM100.INI")
    sDiretorioTemp = left(sDiretorioTemp, lRetorno)
    sDiretorioTemp = sDiretorioTemp & "temp\"
    
    'Alocação de espaço no buffer
    tTRVTitulosExp.sUsuario = String(STRING_USUARIO, 0)

    'Le a tabelaTRVTitulosExp
    lErro = Comando_ExecutarPos(alComando(1), "SELECT NumIntDoc, Usuario, Data, Hora, TipoDocOrigem, NumIntDocOrigem, " & _
                "NumTitulo, Excluido, Exportado FROM TRVTitulosExp WHERE Exportado = ? OR NomeArq = ? ORDER BY NumIntDoc ", 0, _
                tTRVTitulosExp.lNumIntDoc, tTRVTitulosExp.sUsuario, tTRVTitulosExp.dtData, tTRVTitulosExp.dHora, _
                tTRVTitulosExp.iTipoDocOrigem, tTRVTitulosExp.lNumIntDocOrigem, tTRVTitulosExp.lNumTitulo, tTRVTitulosExp.iExcluido, tTRVTitulosExp.iExportado, DESMARCADO, sNomeArq1)
    If lErro <> AD_SQL_SUCESSO Then gError 196245

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(1))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196246

    Do While lErro <> AD_SQL_SEM_DADOS
    
        bIgnora = False
    
        Set objTRVTitulosExp = New ClassTRVTitulosExp

        objTRVTitulosExp.lNumIntDoc = tTRVTitulosExp.lNumIntDoc
        objTRVTitulosExp.sUsuario = tTRVTitulosExp.sUsuario
        objTRVTitulosExp.dtData = tTRVTitulosExp.dtData
        objTRVTitulosExp.dHora = tTRVTitulosExp.dHora
        objTRVTitulosExp.iTipoDocOrigem = tTRVTitulosExp.iTipoDocOrigem
        objTRVTitulosExp.lNumIntDocOrigem = tTRVTitulosExp.lNumIntDocOrigem
        objTRVTitulosExp.lNumTitulo = tTRVTitulosExp.lNumTitulo
        objTRVTitulosExp.iExcluido = tTRVTitulosExp.iExcluido
        objTRVTitulosExp.iExportado = tTRVTitulosExp.iExportado
        
        Select Case objTRVTitulosExp.iTipoDocOrigem
        
            Case TRV_TIPO_DOC_DESTINO_TITPAG
            
                Set objTitPag = New ClassTituloPagar
                Set colParcelasPag = New colParcelaPagar
                
                objTitPag.lNumIntDoc = objTRVTitulosExp.lNumIntDocOrigem
                
                lErro = CF("TituloPagar_Le_Todos", objTitPag, True)
                If lErro <> SUCESSO Then gError 196247
                
                'Lê as Parcelas a Pagar vinculadas ao Título
                lErro = CF("ParcelasPagar_Le_Todas", objTitPag, colParcelasPag, True)
                If lErro <> SUCESSO Then gError 196248
        
                iCpCr = MARCADO
                dtDataEmissao = objTitPag.dtDataEmissao
                lcodemp = objTitPag.lFornecedor
                dValor = -objTitPag.dValorTotal
                dtDataVencimento = colParcelasPag.Item(1).dtDataVencimento
                
                If objTitPag.sSiglaDocumento <> TIPODOC_FATURA_SERVICO_CP Then
                    bIgnora = True
                End If
        
            Case TRV_TIPO_DOC_DESTINO_TITREC
            
                Set objTitRec = New ClassTituloReceber
                Set colParcelaReceber = New colParcelaReceber
                
                objTitRec.lNumIntDoc = objTRVTitulosExp.lNumIntDocOrigem

                'Lê o Título
                lErro = CF("TituloReceber_Le", objTitRec, MARCADO)
                If lErro <> SUCESSO And lErro <> 26061 Then gError 196249
        
                'Se não achou o Título
                If lErro <> SUCESSO Then
        
                    'Lê o Título a Receber baixado
                    lErro = CF("TituloReceberBaixado_Le", objTitRec, MARCADO)
                    If lErro <> SUCESSO And lErro <> 56570 Then gError 196250
        
                End If
        
                'Lê as Parcelas a Receber vinculadas ao Título
                lErro = CF("ParcelasReceber_Le_Todas", objTitRec, colParcelaReceber, True)
                If lErro <> SUCESSO And lErro <> 58990 Then gError 196251
    
                iCpCr = DESMARCADO
                dtDataEmissao = objTitRec.dtDataEmissao
                lcodemp = objTitRec.lCliente
                dValor = objTitRec.dValor
                dtDataVencimento = colParcelaReceber.Item(1).dtDataVencimento
                
                If objTitRec.sSiglaDocumento <> TIPODOC_FATURA_SERVICO_CR And objTitRec.sSiglaDocumento <> TIPODOC_CARTAO_CRED_DEB Then
                    bIgnora = True
                End If
                
            Case TRV_TIPO_DOC_DESTINO_NFSPAG
            
                Set objNFsPag = New ClassNFsPag
                
                objNFsPag.lNumIntDoc = objTRVTitulosExp.lNumIntDocOrigem
                
                'Lê o Título
                lErro = CF("NFPag_Le_Todos2", objNFsPag, MARCADO)
                If lErro <> SUCESSO And lErro <> 18257 Then gError 196252
        
                iCpCr = MARCADO
                dtDataEmissao = objNFsPag.dtDataEmissao
                lcodemp = objNFsPag.lFornecedor
                dValor = -objNFsPag.dValorTotal
                dtDataVencimento = objNFsPag.dtDataVencimento
        
        End Select
        
        dTotalAporte = 0
        
        If Not bIgnora Then
        
            sTipoDoc = String(STRING_TRV_OCR_TIPODOC, 0)
            sSerie = String(STRING_TRV_OCR_SERIE, 0)
            sCodGrupo = String(STRING_TRV_OCR_CODGRUPO, 0)
            sTipVou = String(STRING_TRV_OCR_TIPOVOU, 0)
            
            'Le a view DocFaturados
            lErro = Comando_Executar(alComando(2), "SELECT Data, NumVou, Valor, Numero, TipoDoc, Serie, TipVou, CodGrupo, ValorAporte FROM DocFaturados WHERE TipoDocDestino = ? AND NumIntDocDestino = ? ", _
            dtDataVou, lNumVou, dValorVou, lNumeroDoc, sTipoDoc, sSerie, sTipVou, sCodGrupo, dValorAporte, objTRVTitulosExp.iTipoDocOrigem, objTRVTitulosExp.lNumIntDocOrigem)
            If lErro <> AD_SQL_SUCESSO Then gError 196253
        
            'Busca Primeiro
            lErro = Comando_BuscarPrimeiro(alComando(2))
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196254
        
            Do While lErro <> AD_SQL_SEM_DADOS
            
                sUsuario = String(255, 0)
                sControle = String(255, 0)
                sGrupo = String(255, 0)
                sValidCC = String(255, 0)
                sCiaCart = String(255, 0)
                sCodPro = String(255, 0)
                sNumAuto = String(255, 0)
    
                'Le a tabela TRVTitulosExp
                lErro = Comando_Executar(alComando(3), "SELECT NumDoc, Usuario, DataReg, marca, recnsica,QtdPax,condpag, Controle, cartao, CodPro, Grupo, ValidCC, QuantParc, VlCartao, NumAuto, CiaCart,diasantc,master,nummstr,kit FROM CoinfoItemFatura WHERE TipVou = ? AND TipoDoc = ? AND NumVou = ? AND Serie = ? ORDER BY NumIntArq DESC, NumRegArqTexto DESC", _
                lNumeroDoc, sUsuario, dtdatareg, iMarca, lrecnsica, iQtdPax, icondpag, sControle, iCartao, sCodPro, sGrupo, sValidCC, iQuantParc, dVlCartao, sNumAuto, sCiaCart, idiasantc, imaster, lnummstr, lKit, sTipVou, sTipoDoc, lNumVou, sSerie)
                If lErro <> AD_SQL_SUCESSO Then gError 196255
            
                'Busca Primeiro
                lErro = Comando_BuscarPrimeiro(alComando(3))
                If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196256
            
                dTotalAporte = dTotalAporte + dValorAporte
                
                sRegistroItens = CStr(lcodemp) & " " & Format(dtDataVou, "dd/mm/yy") & " " & CStr(lNumVou) & " " & _
                """BRL""" & " " & Format(dValorVou, "STANDARD") & " " & """" & gsEmpresaTRV & """" & " " & CStr(objTRVTitulosExp.lNumTitulo) & " " & _
                Format(dtDataVencimento, "dd/mm/yy") & " " & CStr(lNumeroDoc) & " " & """" & sUsuario & """" & " " & Format(dtdatareg, "dd/mm/yy") & " " & _
                IIf(iMarca = 0, "no", "yes") & " " & """" & sTipoDoc & """" & " " & CStr(iQtdPax) & " " & CStr(lrecnsica) & " " & _
                CStr(icondpag) & " " & """" & sSerie & """" & " " & """" & sTipVou & """" & " " & """" & sCodGrupo & """" & " " & """" & sControle & """" & " " & _
                IIf(iCartao = 0, "no", "yes") & " " & """" & sCodPro & """" & " " & """" & sGrupo & """" & " " & "?" & " " & IIf(sValidCC = "", "?", """" & sValidCC & """") & " " & _
                CStr(iQuantParc) & " " & Format(dVlCartao, "STANDARD") & " " & _
                sNumAuto & " " & IIf(sCiaCart = "", "?", """" & sCiaCart & """") & _
                " no no ? " & IIf(idiasantc = MARCADO, "yes", "no") & " " & IIf(imaster = MARCADO, "yes", "no") & " " & _
                CStr(lnummstr) & " " & CStr(lKit)
                
                colRegItens.Add sRegistroItens
            
                'Busca Primeiro
                lErro = Comando_BuscarPrimeiro(alComando(2))
                If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196257
            
            Loop
            
            sRegistroTit = CStr(objTRVTitulosExp.lNumTitulo) & " " & Format(dtDataEmissao, "dd/mm/yy") & " " & _
            CStr(lcodemp) & " " & """BRL""" & " " & Format(dValor, "STANDARD") & " " & """" & gsEmpresaTRV & """" & " " & _
            Format(dtDataVencimento, "dd/mm/yy") & " " & IIf(objTRVTitulosExp.iExcluido = MARCADO, "yes", "no") & " " & _
            IIf(iCpCr = MARCADO, "yes", "no") & " " & """" & gsUsuario & """" & " " & _
            Format(objTRVTitulosExp.dtData, "dd/mm/yy") & " 0 0 " & _
            Format(dTotalAporte / (dValor + dTotalAporte), "STANDARD") & " " & Format(dTotalAporte, "STANDARD") & _
            " " & Format(dValor + dTotalAporte, "STANDARD") & " " & _
            IIf(objTRVTitulosExp.iExcluido = MARCADO, Format(objTRVTitulosExp.dtData, "dd/mm/yy"), "?") & _
            " no ? 0 yes " & Format(Date, "dd/mm/yy")
            
            colTitulos.Add objTRVTitulosExp
            colRegTitulos.Add sRegistroTit
        
            'Marca como exportado
            lErro = Comando_ExecutarPos(alComando(4), "UPDATE TRVTitulosExp SET Exportado = ?, DataExportacao = ?, HoraExportacao = ?, UsuarioExportacao = ?, NomeArq = ?", alComando(1), MARCADO, Date, CDbl(Time), gsUsuario, sNomeArq1)
        Else
            'Marca como exportado
            lErro = Comando_ExecutarPos(alComando(4), "UPDATE TRVTitulosExp SET Exportado = ?, DataExportacao = ?, HoraExportacao = ?, UsuarioExportacao = ?, NomeArq = ?", alComando(1), MARCADO, Date, CDbl(Time), gsUsuario, "")
        End If
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196258
        
        'Busca Próximo
        lErro = Comando_BuscarProximo(alComando(1))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196259
    
    Loop
    
    Open sDiretorio & sNomeArq1 For Output As #1
    bArq1Aberto = True
    
    For Each vRegistro In colRegTitulos
        Print #1, vRegistro
    Next
    
    Close #1
    bArq1Aberto = False
    
    Open sDiretorio & sNomeArq2 For Output As #2
    bArq2Aberto = True
    
    For Each vRegistro In colRegItens
        Print #2, vRegistro
    Next
    
    Close #2
    bArq2Aberto = False
    
    Open sDiretorioTemp & sNomeArq1 For Output As #1
    bArq1Aberto = True
    
    For Each vRegistro In colRegTitulos
        Print #1, vRegistro
    Next
    
    Close #1
    bArq1Aberto = False
    
    Open sDiretorioTemp & sNomeArq2 For Output As #2
    bArq2Aberto = True
    
    For Each vRegistro In colRegItens
        Print #2, vRegistro
    Next
    
    Close #2
    bArq2Aberto = False
    
    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next
    
    'Confirma a transação
    lErro = Transacao_Commit()
    If lErro <> AD_SQL_SUCESSO Then gError 196260

    TRVTitulos_Exporta_Sigav = SUCESSO

    Exit Function

Erro_TRVTitulos_Exporta_Sigav:

    TRVTitulos_Exporta_Sigav = gErr

    Select Case gErr

        Case 196243
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_TRANSACAO", gErr)
            
        Case 196244
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 196245, 196246, 196259
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVTITULOSEXP", gErr)
            
        Case 196247 To 196252
        
        Case 196253 To 196257
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVVOUCHERS", gErr)

        Case 196258
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVTITULOSEXP", gErr)

        Case 196260
            Call Rotina_Erro(vbOKOnly, "ERRO_COMMIT", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 196261)

    End Select

    If bArq1Aberto Then Close #1
    If bArq2Aberto Then Close #2

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next
    'Desfaz Transação
    Call Transacao_Rollback

    Exit Function

End Function

Function Faturamento_Excluir_PorEmissao(ByVal dtDataEmissao As Date) As Long

Dim lErro As Long
Dim alComando(0 To 7) As Long
Dim iIndice As Integer, iFilialEmpresa As Integer
Dim lNumIntDoc As Long, objTitPag As ClassTituloPagar, objTitRec As ClassTituloReceber
Dim colTP As New Collection, colTR As New Collection

On Error GoTo Erro_Faturamento_Excluir_PorEmissao

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 1001
    Next
        
'    lErro = Comando_Executar(alComando(0), "SELECT NumIntDoc, FilialEmpresa FROM TitulosPag WHERE DataEmissao = ? AND sigladocumento = ? AND Status <> ? ORDER BY NumIntDoc", _
'        lNumIntDoc, iFilialEmpresa, dtDataEmissao, "FSCP", STATUS_EXCLUIDO)
'    If lErro <> AD_SQL_SUCESSO Then gError 1002
'
'    lErro = Comando_BuscarProximo(alComando(0))
'    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 1003
'
'    Do While lErro = AD_SQL_SUCESSO
'
'        Set objTitPag = New ClassTituloPagar
'
'        With objTitPag
'            .lNumIntDoc = lNumIntDoc
'            .iFilialEmpresa = iFilialEmpresa
'            .sSiglaDocumento = "FSCP"
'        End With
'
'        colTP.Add objTitPag
'
'        lErro = Comando_BuscarProximo(alComando(0))
'        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 1005
'
'    Loop
'
'    For Each objTitPag In colTP
'
'        lErro = CF("NFFatPag_Exclui", objTitPag, Nothing)
'        If lErro <> SUCESSO Then gError 1004
'
'    Next
    
    lErro = Comando_Executar(alComando(1), "SELECT NumIntDoc, FilialEmpresa FROM TitulosRec WHERE DataEmissao = ? AND sigladocumento = ? AND Status <> ? ORDER BY NumIntDoc", _
        lNumIntDoc, iFilialEmpresa, dtDataEmissao, "FSCR", STATUS_EXCLUIDO)
    If lErro <> AD_SQL_SUCESSO Then gError 1006
    
    lErro = Comando_BuscarProximo(alComando(1))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 1007
    
    Do While lErro = AD_SQL_SUCESSO
    
        Set objTitRec = New ClassTituloReceber
    
        With objTitRec
            .lNumIntDoc = lNumIntDoc
            .iFilialEmpresa = iFilialEmpresa
            .sSiglaDocumento = "FSCR"
        End With
        
        colTR.Add objTitRec
        
        lErro = Comando_BuscarProximo(alComando(1))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 1009
    
    Loop
    
    For Each objTitRec In colTR
    
        lErro = CF("TituloReceber_Exclui", objTitRec, Nothing)
        If lErro <> SUCESSO Then gError 1008
        
    Next
    
    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next
    
    Faturamento_Excluir_PorEmissao = SUCESSO
    
    Exit Function
    
Erro_Faturamento_Excluir_PorEmissao:

    Faturamento_Excluir_PorEmissao = gErr

    Select Case gErr

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error$, 1010)

    End Select
    
    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next
    
    Exit Function

End Function

Public Function Cliente_Grava_Customizado(ByVal objCliente As ClassCliente) As Long

Dim lErro As Long
Dim alComando(1 To 12) As Long
Dim iIndice As Integer
Dim lCliente As Long
Dim objClienteTRV As ClassClienteTRV
Dim objCliEmissoresTRV As ClassCliEmissoresTRV
Dim lNumIntDoc As Long
Dim lNumIntDoc1 As Long
Dim iIndice1 As Integer
Dim objCliEmissoresExcTRV As ClassCliEmissoresExcTRV
Dim objTRVCliRep As ClassTRVClienteRepProd
Dim objTRVCliCor As ClassTRVClienteCorProd
Dim objExcComisCli As ClassTRVExcComissaoCli
Dim colClientesContatos As New Collection
Dim colClientesContatosAux As New Collection
Dim objClienteContato As New ClassClienteContatos
Dim objClienteContatoAux As ClassClienteContatos
Dim bAchou As Boolean
Dim objEndereco As ClassEndereco
Dim colEnderecos As New colEndereco
Dim objClienteBD As New ClassCliente
Dim objDataCall As ClassTRVCliDataCallCenter
Dim dPercCITotal As Double

On Error GoTo Erro_Cliente_Grava_Customizado

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 195811
    Next
            
    iIndice = 0

    If Not (objCliente.objInfoUsu Is Nothing) Then
    
        Set objClienteTRV = objCliente.objInfoUsu
        
        If objClienteTRV.iFilialEmpresa = 0 Then gError 209736
        If Len(Trim(objClienteTRV.sGrupo)) = 0 Then gError 209737
        
        lErro = Comando_Executar(alComando(1), "DELETE FROM TRVCliEmissoresExc WHERE NumIntDocCliEmi IN (Select NumIntDoc FROM TRVCliEmissores WHERE Cliente = ?)", objCliente.lCodigo)
        If lErro <> AD_SQL_SUCESSO Then gError 195812
    
        lErro = Comando_Executar(alComando(2), "DELETE FROM TRVCliEmissores WHERE Cliente = ?", objCliente.lCodigo)
        If lErro <> AD_SQL_SUCESSO Then gError 195813
        
        lErro = Comando_Executar(alComando(10), "DELETE FROM TRVCliDataCallCenter WHERE Cliente = ?", objCliente.lCodigo)
        If lErro <> AD_SQL_SUCESSO Then gError 195813
        
        If objClienteTRV.colCliEmissoresTRV.Count > 0 Then
        
            lErro = CF("Config_ObterNumInt", "TRVConfig", TRVCONFIG_NUM_INT_PROX_TRVCLIEMISSORES, lNumIntDoc, objClienteTRV.colCliEmissoresTRV.Count)
            If lErro <> SUCESSO Then gError 195814

            dPercCITotal = 0
            For Each objCliEmissoresTRV In objClienteTRV.colCliEmissoresTRV
            
                iIndice = iIndice + 1
                
                objCliEmissoresTRV.lNumIntDoc = lNumIntDoc
                objCliEmissoresTRV.iSeq = iIndice
                
                dPercCITotal = dPercCITotal + objCliEmissoresTRV.dPercCI
                
                lNumIntDoc = lNumIntDoc + 1
    
                lErro = Comando_Executar(alComando(3), "INSERT INTO TRVCliEmissores (NumIntDoc, Cliente, Seq, FornEmissor, PercComissao, Cargo, NumCartao, PercCI) VALUES (?,?,?,?,?,?,?,?)", _
                         objCliEmissoresTRV.lNumIntDoc, objCliente.lCodigo, objCliEmissoresTRV.iSeq, objCliEmissoresTRV.lFornEmissor, objCliEmissoresTRV.dPercComissao, objCliEmissoresTRV.lCargo, objCliEmissoresTRV.sNumCartao, objCliEmissoresTRV.dPercCI)
                If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 195815
                
                lErro = Comando_Executar(alComando(12), "UPDATE FiliaisFornecedores SET CGC = ? WHERE CodFornecedor = ? AND CodFilial = ?", objCliEmissoresTRV.sCPF, objCliEmissoresTRV.lFornEmissor, FILIAL_MATRIZ)
                If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 195815
    
                If objCliEmissoresTRV.colCliEmissoresExcTRV.Count > 0 Then
    
                    lErro = CF("Config_ObterNumInt", "TRVConfig", TRVCONFIG_NUM_INT_PROX_TRVCLIEMISSORESEXC, lNumIntDoc1, objCliEmissoresTRV.colCliEmissoresExcTRV.Count)
                    If lErro <> SUCESSO Then gError 195816
                    
                    iIndice1 = 0
                    
                    For Each objCliEmissoresExcTRV In objCliEmissoresTRV.colCliEmissoresExcTRV
                        
                        iIndice1 = iIndice1 + 1
                        
                        objCliEmissoresExcTRV.lNumIntDoc = lNumIntDoc1
                        objCliEmissoresExcTRV.lNumIntDocCliEmi = objCliEmissoresTRV.lNumIntDoc
                        objCliEmissoresExcTRV.iSeq = iIndice1
                        
                        lNumIntDoc1 = lNumIntDoc1 + 1
                        
                        lErro = Comando_Executar(alComando(4), "INSERT INTO TRVCliEmissoresExc (NumIntDoc, NumIntDocCliEmi, Seq, Produto, PercComissao) VALUES (?,?,?,?,?)", _
                                 objCliEmissoresExcTRV.lNumIntDoc, objCliEmissoresExcTRV.lNumIntDocCliEmi, objCliEmissoresExcTRV.iSeq, objCliEmissoresExcTRV.sProduto, objCliEmissoresExcTRV.dPercComissao)
                        If lErro <> AD_SQL_SUCESSO Then gError 195817
                        
                    Next
    
                End If
    
            Next
            
            If dPercCITotal > 1 Then gError 206580
    
        End If
    
        lErro = Comando_Executar(alComando(5), "DELETE FROM FiliaisClientesTRV WHERE CodCliente = ?  AND CodFilial = ?", objCliente.lCodigo, FILIAL_MATRIZ)
        If lErro <> AD_SQL_SUCESSO Then gError 195859
        
        If objClienteTRV.iFilialCoinfo = 0 Then
            objClienteTRV.iFilialCoinfo = Filial_Corporator_Retorna_Coinfo(objClienteTRV.iFilialEmpresa)
        End If
    
        lErro = Comando_Executar(alComando(6), "INSERT INTO FiliaisClientesTRV (CodCliente, CodFilial, Representante, ComissaoRep, Correntista, ComissaoCorr, ComissaoAg, Aporte, EmpresaPai, FilialNF, Grupo, FilialEmpresa, FilialCoinfo, FilialFat, CondPagtoCC,PercFatorDevCMCC) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)", objCliente.lCodigo, FILIAL_MATRIZ, _
        objClienteTRV.lCodRepresentante, objClienteTRV.dPercComiRep, objClienteTRV.lCodCorrentista, objClienteTRV.dPercComiCorr, objClienteTRV.dPercComiAg, objClienteTRV.iConsiderarAporte, objClienteTRV.lEmpresaPai, objClienteTRV.iFilialNF, objClienteTRV.sGrupo, objClienteTRV.iFilialEmpresa, objClienteTRV.iFilialCoinfo, objClienteTRV.iFilialFat, objClienteTRV.iCondPagtoCC, objClienteTRV.dPercFatorDevCMCC)
        If lErro <> AD_SQL_SUCESSO Then gError 195860
        
        lErro = TRVClienteCorProd_Exclui(objCliente)
        If lErro <> SUCESSO Then gError 196955
        
        lErro = TRVClienteRepProd_Exclui(objCliente)
        If lErro <> SUCESSO Then gError 196956
        
        If objCliente.lCodigo = objClienteTRV.lEmpresaPai Then
            lErro = TRVExcComissaoCli_Exclui(objCliente)
            If lErro <> SUCESSO Then gError 196956
        End If
                
        For Each objTRVCliCor In objClienteTRV.colExcCor
            objTRVCliCor.lCliente = objCliente.lCodigo
            lErro = TRVClienteCorProd_Insere(alComando(7), objTRVCliCor)
            If lErro <> SUCESSO Then gError 196957
        Next
        
        For Each objTRVCliRep In objClienteTRV.colExcRep
            objTRVCliRep.lCliente = objCliente.lCodigo
            lErro = TRVClienteRepProd_Insere(alComando(8), objTRVCliRep)
            If lErro <> SUCESSO Then gError 196958
        Next
        
        For Each objDataCall In objClienteTRV.colDataCallCenter
            lErro = Comando_Executar(alComando(11), "INSERT INTO TRVCliDataCallCenter( Cliente, DataDe, DataAte) VALUES (?,?,?)", _
                    objCliente.lCodigo, objDataCall.dtDataDe, objDataCall.dtDataAte)
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 195860
        Next
        
        If objCliente.lCodigo = objClienteTRV.lEmpresaPai Then
            For Each objExcComisCli In objClienteTRV.colExcComissaoCli
                objExcComisCli.lCliente = objCliente.lCodigo
                lErro = TRVExcComissaoCli_Insere(alComando(9), objExcComisCli)
                If lErro <> SUCESSO Then gError 196957
            Next
        End If
    
    End If
        
    objClienteBD.lCodigo = objCliente.lCodigo
    
    lErro = CF("Cliente_Le", objClienteBD)
    If lErro <> SUCESSO And lErro <> 12293 Then gError 196957
    
    objClienteContato.lCliente = objCliente.lCodigo
    objClienteContato.iFilialCliente = FILIAL_MATRIZ
    
    'Le os contatos já cadastrados
    lErro = CF("ClienteContatos_Le_Todos", colClientesContatos, objClienteContato)
    If lErro <> SUCESSO And lErro <> 102574 Then gError 196957
        
    'Lê os dados dos tres tipos de enderecos
    lErro = CF("Enderecos_Le_Cliente", colEnderecos, objClienteBD)
    If lErro <> SUCESSO Then gError 196957
    
    For Each objEndereco In colEnderecos
        lErro = CF("Endereco_Le_Customizado", objEndereco)
        If lErro <> SUCESSO And lErro <> ERRO_LEITURA_SEM_DADOS Then gError 196957
    Next
    
    'Adiciona os contatos que estão no endereço(telefone1, email1)
    bAchou = False
    iIndice = 0
    For Each objEndereco In colEnderecos
        iIndice = iIndice + 1
        For Each objClienteContato In colClientesContatos
            If Compara_Telefone(objClienteContato.sTelefone, objEndereco.sTelefone1) And Compara_Contato(objClienteContato.sContato, objEndereco.sContato) Then
                bAchou = True
                If iIndice = 1 Then
                    objClienteContato.iPadrao = MARCADO
                    If objClienteContato.sContato = "Sem nome" And Len(Trim(objEndereco.sContato)) > 0 Then
                        objClienteContato.sContato = objEndereco.sContato
                    End If
                End If
                Exit For
            End If
        Next
        If Not bAchou Then
        
            If Len(Trim(objEndereco.sTelefone1)) > 0 Then
            
                Set objClienteContato = New ClassClienteContatos
                
                If Len(Trim(objEndereco.sContato)) = 0 Then
                    objClienteContato.sContato = "Sem nome"
                Else
                    objClienteContato.sContato = objEndereco.sContato
                End If
                objClienteContato.sTelefone = objEndereco.sTelefone1
                objClienteContato.sEmail = objEndereco.sEmail
                objClienteContato.sFax = objEndereco.sFax
                
                If iIndice = 1 Then
                    objClienteContato.iPadrao = MARCADO
                End If
                
                colClientesContatos.Add objClienteContato
                
            End If
            
        End If
    Next
    
    'Adiciona os contatos que estão no endereço(telefone2, email2)
    bAchou = False
    For Each objEndereco In colEnderecos
        For Each objClienteContato In colClientesContatos
            If Compara_Telefone(objClienteContato.sTelefone, objEndereco.sTelefone2) And Compara_Contato(objClienteContato.sContato, objEndereco.sContato) Then
                bAchou = True
                If objClienteContato.sContato = "Sem nome" And Len(Trim(objEndereco.sContato)) > 0 Then
                    objClienteContato.sContato = objEndereco.sContato
                End If
                Exit For
            End If
        Next
        If Not bAchou Then
        
            If Len(Trim(objEndereco.sTelefone2)) > 0 Then
            
                Set objClienteContato = New ClassClienteContatos
                
                If Len(Trim(objEndereco.sContato)) = 0 Then
                    objClienteContato.sContato = "Sem nome"
                Else
                    objClienteContato.sContato = objEndereco.sContato
                End If
                objClienteContato.sTelefone = objEndereco.sTelefone2
                objClienteContato.sEmail = objEndereco.objInfoUsu.sEmail2
                objClienteContato.sFax = objEndereco.sFax
                
                colClientesContatos.Add objClienteContato
            
            End If
            
        End If
    Next
    
    iIndice = 0
    For Each objClienteContato In colClientesContatos
        If iIndice <= objClienteContato.iCodigo Then iIndice = objClienteContato.iCodigo
    Next
    For Each objClienteContato In colClientesContatos
        If objClienteContato.iCodigo = 0 Then
            iIndice = iIndice + 1
            objClienteContato.iCodigo = iIndice
        End If
        objClienteContato.lCliente = objCliente.lCodigo
        objClienteContato.iFilialCliente = FILIAL_MATRIZ
    Next
    
    If colClientesContatos.Count > 0 Then
        lErro = CF("ClienteContatos_Grava_EmTrans", colClientesContatos)
        If lErro <> SUCESSO Then gError 196957
    End If

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Cliente_Grava_Customizado = SUCESSO

    Exit Function

Erro_Cliente_Grava_Customizado:

    Cliente_Grava_Customizado = gErr

    Select Case gErr

        Case 195811
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 195812
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_TRVCLIEMISSORESEXC", gErr)

        Case 195813
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_TRVCLIEMISSORES", gErr)
        
        Case 195814, 195816, 196955 To 196958
        
        Case 195815
            Call Rotina_Erro(vbOKOnly, "ERRO_INCLUSAO_TRVCLIEMISSORES", gErr)

        Case 195817
            Call Rotina_Erro(vbOKOnly, "ERRO_INCLUSAO_TRVCLIEMISSORESEXC", gErr)

        Case 195859
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_FILIAISCLIENTESTRV", gErr)

        Case 195859
            Call Rotina_Erro(vbOKOnly, "ERRO_INCLUSAO_FILIAISCLIENTESTRV", gErr)
            
        Case 206580
            Call Rotina_Erro(vbOKOnly, "ERRO_PERC_CI_MAIOR_1", gErr)
            
        Case 209736
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVCLI_SEM_FILEMP", gErr, objCliente.lCodigo)

        Case 209737
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVCLI_SEM_GRUPO", gErr, objCliente.lCodigo)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 195818)

    End Select
    
    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Public Function Cliente_Exclui_Customizado(ByVal objCliente As ClassCliente) As Long

Dim lErro As Long
Dim alComando(1 To 4) As Long
Dim iIndice As Integer
Dim lCliente As Long

On Error GoTo Erro_Cliente_Exclui_Customizado

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 195819
    Next

    lErro = Comando_Executar(alComando(1), "DELETE FROM TRVCliEmissoresExc WHERE NumIntDocCliEmi IN (Select NumIntDoc FROM TRVCliEmissores WHERE Cliente = ?)", objCliente.lCodigo)
    If lErro <> AD_SQL_SUCESSO Then gError 195820

    lErro = Comando_Executar(alComando(2), "DELETE FROM TRVCliEmissores WHERE Cliente = ?", objCliente.lCodigo)
    If lErro <> AD_SQL_SUCESSO Then gError 195821

    lErro = Comando_Executar(alComando(3), "DELETE FROM TRVCliDataCallCenter WHERE Cliente = ?", objCliente.lCodigo)
    If lErro <> AD_SQL_SUCESSO Then gError 195821

    lErro = Comando_Executar(alComando(4), "DELETE FROM FiliaisClientesTRV WHERE CodCliente = ?  AND CodFilial = ?", objCliente.lCodigo, FILIAL_MATRIZ)
    If lErro <> AD_SQL_SUCESSO Then gError 195821

    lErro = TRVClienteCorProd_Exclui(objCliente)
    If lErro <> SUCESSO Then gError 196956
    
    lErro = TRVClienteRepProd_Exclui(objCliente)
    If lErro <> SUCESSO Then gError 196956
    
    If objCliente.lCodigo = objCliente.objInfoUsu.lEmpresaPai Then
        lErro = TRVExcComissaoCli_Exclui(objCliente)
        If lErro <> SUCESSO Then gError 196956
    End If

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Cliente_Exclui_Customizado = SUCESSO

    Exit Function

Erro_Cliente_Exclui_Customizado:

    Cliente_Exclui_Customizado = gErr

    Select Case gErr

        Case 195819
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 195820
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_TRVCLIEMISSORESEXC", gErr)

        Case 195821
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_TRVCLIEMISSORES", gErr)
            
        Case 196956
        
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 195822)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Public Function TRVAcordo_Grava(ByVal objTRVAcordo As ClassTRVAcordos, Optional ByVal bAbreTrans As Boolean = True) As Long
    
Dim lErro As Long
Dim alComando(0 To 5) As Long
Dim iIndice As Integer
Dim lNumIntDoc As Long
Dim lTransacao As Long
Dim bFazPergunta As Boolean
Dim vbMsgResult As VbMsgBoxResult
Dim sItemCobr As String
Dim sItemEmail As String
Dim lErroC As Long
Dim lErroE As Long

On Error GoTo Erro_TRVAcordo_Grava

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 197125
    Next
    
    bFazPergunta = False
    vbMsgResult = vbNo
    
    sItemCobr = String(STRING_CATEGORIACLIENTEITEM_ITEM, 0)
    
    'Le a tabelaTRVAcordos
    lErroC = Comando_Executar(alComando(2), "SELECT Item FROM FilialClienteCategorias WHERE Cliente = ? AND Filial = ? AND Categoria = ? ", _
                sItemCobr, objTRVAcordo.lCliente, objTRVAcordo.iFilialCliente, TRV_CATEGORIA_COBRANCA)
    If lErroC <> AD_SQL_SUCESSO Then gError 198626

    'Busca Primeiro
    lErroC = Comando_BuscarPrimeiro(alComando(2))
    If lErroC <> AD_SQL_SUCESSO And lErroC <> AD_SQL_SEM_DADOS Then gError 198627

    'Se não encontrou ou não está como acordo
    If lErroC <> AD_SQL_SUCESSO Or UCase(sItemCobr) <> UCase(TRV_CATEGORIA_COBRANCA_ACORDO) Then
        bFazPergunta = True
    End If
    
    sItemEmail = String(STRING_CATEGORIACLIENTEITEM_ITEM, 0)
    
    'Le a tabelaTRVAcordos
    lErroE = Comando_Executar(alComando(3), "SELECT Item FROM FilialClienteCategorias WHERE Cliente = ? AND Filial = ? AND Categoria = ? ", _
                sItemEmail, objTRVAcordo.lCliente, objTRVAcordo.iFilialCliente, TRV_CATEGORIA_ENVIODECOBRANCA)
    If lErroE <> AD_SQL_SUCESSO Then gError 198628

    'Busca Primeiro
    lErroE = Comando_BuscarPrimeiro(alComando(3))
    If lErroE <> AD_SQL_SUCESSO And lErroE <> AD_SQL_SEM_DADOS Then gError 198629

    'Se não encontrou ou não está como acordo
    If lErroE <> AD_SQL_SUCESSO Or UCase(sItemEmail) <> UCase(TRV_CATEGORIA_ENVIODECOBRANCA_NAO) Then
        bFazPergunta = True
    End If
    
    If Not bAbreTrans Then bFazPergunta = False

    'Deseja alterar a cobrança do cliente para o tipo Acordo e desabilitar o envio de email para esse cliente
    If bFazPergunta Then
        vbMsgResult = Rotina_Aviso(vbYesNo, "AVISO_ACORDO_ALTERACA_CAT_CLIENTE", TRV_CATEGORIA_COBRANCA, sItemCobr, TRV_CATEGORIA_ENVIODECOBRANCA, sItemEmail, TRV_CATEGORIA_COBRANCA, TRV_CATEGORIA_COBRANCA_ACORDO, TRV_CATEGORIA_ENVIODECOBRANCA, TRV_CATEGORIA_ENVIODECOBRANCA_NAO)
    End If

    If bAbreTrans Then
        'Abertura de transação
        lTransacao = Transacao_Abrir()
        If lTransacao = 0 Then gError 197124
    End If
    
    If vbMsgResult = vbYes Then
    
        If lErroE = AD_SQL_SUCESSO Then
            lErro = Comando_Executar(alComando(4), "UPDATE FilialClienteCategorias SET Item = ? WHERE Cliente = ? AND Filial = ? AND Categoria = ?", _
            TRV_CATEGORIA_COBRANCA_ACORDO, objTRVAcordo.lCliente, objTRVAcordo.iFilialCliente, TRV_CATEGORIA_COBRANCA)
            If lErro <> AD_SQL_SUCESSO Then gError 197129
        Else
            lErro = Comando_Executar(alComando(4), "INSERT INTO FilialClienteCategorias(Cliente, Filial, Categoria, Item) VALUES (?,?,?,?)", _
            objTRVAcordo.lCliente, objTRVAcordo.iFilialCliente, TRV_CATEGORIA_COBRANCA, TRV_CATEGORIA_COBRANCA_ACORDO)
            If lErro <> AD_SQL_SUCESSO Then gError 197129
        End If
        
        If lErroC = AD_SQL_SUCESSO Then
            lErro = Comando_Executar(alComando(4), "UPDATE FilialClienteCategorias SET Item = ? WHERE Cliente = ? AND Filial = ? AND Categoria = ?", _
            TRV_CATEGORIA_ENVIODECOBRANCA_NAO, objTRVAcordo.lCliente, objTRVAcordo.iFilialCliente, TRV_CATEGORIA_ENVIODECOBRANCA)
            If lErro <> AD_SQL_SUCESSO Then gError 197129
        Else
            lErro = Comando_Executar(alComando(4), "INSERT INTO FilialClienteCategorias(Cliente, Filial, Categoria, Item) VALUES (?,?,?,?)", _
            objTRVAcordo.lCliente, objTRVAcordo.iFilialCliente, TRV_CATEGORIA_ENVIODECOBRANCA, TRV_CATEGORIA_ENVIODECOBRANCA_NAO)
            If lErro <> AD_SQL_SUCESSO Then gError 197129
        End If
    
    End If

    'Le a tabelaTRVAcordos
    lErro = Comando_ExecutarPos(alComando(0), "SELECT NumIntDoc FROM TRVAcordos WHERE Numero = ? ", _
                0, lNumIntDoc, objTRVAcordo.lNumero)
    If lErro <> AD_SQL_SUCESSO Then gError 197126

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(0))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 197127

    'Se existir => UPDATE, senão => INSERT
    If lErro = AD_SQL_SUCESSO Then

        'Trava registro contra alterações/Leituras
        lErro = Comando_LockExclusive(alComando(0))
        If lErro <> SUCESSO Then gError 197128
        
        objTRVAcordo.lNumIntDoc = lNumIntDoc
        
        lErro = Comando_ExecutarPos(alComando(1), "UPDATE TRVAcordos SET Contrato = ?,  Cliente= ? , FilialCliente= ? , ValidadeDe = ? , ValidadeAte =?,  Observacao= ? , Descricao = ?", alComando(0), _
                objTRVAcordo.sContrato, objTRVAcordo.lCliente, objTRVAcordo.iFilialCliente, objTRVAcordo.dtValidadeDe, objTRVAcordo.dtValidadeAte, objTRVAcordo.sObservacao, objTRVAcordo.sDescricao)
        If lErro <> AD_SQL_SUCESSO Then gError 197129

    Else

        'Obter NumIntDoc
        lErro = CF("Config_ObterNumInt", "FATConfig", "NUM_INT_PROX_TRVACORDO", lNumIntDoc)
        If lErro <> SUCESSO Then gError 197130

        objTRVAcordo.lNumIntDoc = lNumIntDoc

        lErro = Comando_Executar(alComando(1), "INSERT INTO TRVAcordos( NumIntDoc, Numero, Contrato, Cliente, FilialCliente, " & _
                "ValidadeDe, ValidadeAte, Observacao, Descricao) VALUES (?,?,?,?,?,?,?,?,?)", _
                objTRVAcordo.lNumIntDoc, objTRVAcordo.lNumero, objTRVAcordo.sContrato, objTRVAcordo.lCliente, objTRVAcordo.iFilialCliente, _
                objTRVAcordo.dtValidadeDe, objTRVAcordo.dtValidadeAte, objTRVAcordo.sObservacao, objTRVAcordo.sDescricao)
        If lErro <> AD_SQL_SUCESSO Then gError 197131

    End If
    
    lErro = TRVAcordoComissaoTarifa_Exclui(objTRVAcordo)
    If lErro <> SUCESSO Then gError 197132

    lErro = TRVAcordoComissaoTarifa_Inclui(objTRVAcordo)
    If lErro <> SUCESSO Then gError 197133

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    If bAbreTrans Then
        'Confirma a transação
        lErro = Transacao_Commit()
        If lErro <> AD_SQL_SUCESSO Then gError 197134
    End If

    TRVAcordo_Grava = SUCESSO

    Exit Function

Erro_TRVAcordo_Grava:

    TRVAcordo_Grava = gErr

    Select Case gErr

        Case 197124
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_TRANSACAO", gErr)

        Case 197125
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 197126, 197127
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVACORDOS", gErr)

        Case 197128
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVACORDOS", gErr)

        Case 197129
            Call Rotina_Erro(vbOKOnly, "ERRO_ALTERACAO_TRVACORDOS", gErr)

        Case 197130, 197132, 197133
        
        Case 197131
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_TRVACORDOS", gErr)
            
        Case 197134
            Call Rotina_Erro(vbOKOnly, "ERRO_COMMIT", gErr)
            
        Case 198626 To 198629
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_FILIALCLIENTECATEGORIAS", gErr)
        
        Case 198630, 198632
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_FILIALCLIENTECATEGORIAS", gErr)

        Case 198631, 198633
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_FILIALCLIENTECATEGORIAS", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 197135)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    If bAbreTrans Then
        'Desfaz Transação
        Call Transacao_Rollback
    End If

    Exit Function

End Function

Function TRVAcordoComissaoTarifa_Exclui(ByVal objTRVAcordo As ClassTRVAcordos) As Long

Dim lErro As Long
Dim alComando(1 To 2) As Long
Dim iIndice As Integer
Dim lCliente As Long

On Error GoTo Erro_TRVAcordoComissaoTarifa_Exclui

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 197120
    Next

    lErro = Comando_Executar(alComando(1), "DELETE FROM TRVAcordoComissao WHERE NumIntAcordo IN (Select NumIntDoc FROM TRVAcordos WHERE Numero = ?)", objTRVAcordo.lNumero)
    If lErro <> AD_SQL_SUCESSO Then gError 197121

    lErro = Comando_Executar(alComando(2), "DELETE FROM TRVAcordoTarifaDif WHERE NumIntAcordo IN (Select NumIntDoc FROM TRVAcordos WHERE Numero = ?)", objTRVAcordo.lNumero)
    If lErro <> AD_SQL_SUCESSO Then gError 197122

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVAcordoComissaoTarifa_Exclui = SUCESSO

    Exit Function

Erro_TRVAcordoComissaoTarifa_Exclui:

    TRVAcordoComissaoTarifa_Exclui = gErr

    Select Case gErr

        Case 197120
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 197121
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_TRVACORDOCOMISSAO", gErr)

        Case 197122
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_TRVACORDOTARIFADIF", gErr)
        
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 197123)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Function TRVAcordoComissaoTarifa_Inclui(ByVal objTRVAcordo As ClassTRVAcordos) As Long

Dim lErro As Long
Dim alComando(1 To 2) As Long

Dim iIndice As Integer
Dim lCliente As Long
Dim objTRVAcordoComiss As ClassTRVAcordoComissao
Dim objTRVAcordoDif As ClassTRVAcordoTarifaDif
Dim lNumIntDoc As Long

On Error GoTo Erro_TRVAcordoComissaoTarifa_Inclui

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 197114
    Next

    iIndice = 0

    If objTRVAcordo.colTRVAcordoComiss.Count > 0 Then
    
        lErro = CF("Config_ObterNumInt", "TRVConfig", TRVCONFIG_NUM_INT_PROX_TRVACORDOCOMISS, lNumIntDoc, objTRVAcordo.colTRVAcordoComiss.Count)
        If lErro <> SUCESSO Then gError 197115

        For Each objTRVAcordoComiss In objTRVAcordo.colTRVAcordoComiss
        
            iIndice = iIndice + 1
            
            objTRVAcordoComiss.lNumIntDoc = lNumIntDoc
            objTRVAcordoComiss.lNumIntAcordo = objTRVAcordo.lNumIntDoc
            objTRVAcordoComiss.iSeq = iIndice
            
            lNumIntDoc = lNumIntDoc + 1

            lErro = Comando_Executar(alComando(1), "INSERT INTO TRVAcordoComissao (NumIntDoc, NumIntAcordo, Seq, Produto, Destino, PercComissao) VALUES (?,?,?,?,?,?)", _
                     objTRVAcordoComiss.lNumIntDoc, objTRVAcordoComiss.lNumIntAcordo, objTRVAcordoComiss.iSeq, objTRVAcordoComiss.sProduto, objTRVAcordoComiss.iDestino, objTRVAcordoComiss.dPercComissao)
            If lErro <> AD_SQL_SUCESSO Then gError 197116

        Next

    End If

    iIndice = 0

    If objTRVAcordo.colTRVAcordoDif.Count > 0 Then

        lErro = CF("Config_ObterNumInt", "TRVConfig", TRVCONFIG_NUM_INT_PROX_TRVACORDODIF, lNumIntDoc, objTRVAcordo.colTRVAcordoDif.Count)
        If lErro <> SUCESSO Then gError 197117

        For Each objTRVAcordoDif In objTRVAcordo.colTRVAcordoDif
        
            iIndice = iIndice + 1
            
            objTRVAcordoDif.lNumIntDoc = lNumIntDoc
            objTRVAcordoDif.lNumIntAcordo = objTRVAcordo.lNumIntDoc
            objTRVAcordoDif.iSeq = iIndice
            
            lNumIntDoc = lNumIntDoc + 1

            lErro = Comando_Executar(alComando(2), "INSERT INTO TRVAcordoTarifaDif (NumIntDoc, NumIntAcordo, Seq, Produto, Preco, Moeda, Destino,PercComissao) VALUES (?,?,?,?,?,?,?,?)", _
                     objTRVAcordoDif.lNumIntDoc, objTRVAcordoDif.lNumIntAcordo, objTRVAcordoDif.iSeq, objTRVAcordoDif.sProduto, objTRVAcordoDif.dPreco, objTRVAcordoDif.iMoeda, objTRVAcordoDif.iDestino, objTRVAcordoDif.dPercComissao)
            If lErro <> AD_SQL_SUCESSO Then gError 197118

        Next

    End If

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVAcordoComissaoTarifa_Inclui = SUCESSO
    
    Exit Function

Erro_TRVAcordoComissaoTarifa_Inclui:

    TRVAcordoComissaoTarifa_Inclui = gErr

    Select Case gErr

        Case 197114
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 197115, 197117

        Case 197116
            Call Rotina_Erro(vbOKOnly, "ERRO_INCLUSAO_TRVACORDOCOMISSAO", gErr)

        Case 197118
            Call Rotina_Erro(vbOKOnly, "ERRO_INCLUSAO_TRVACORDOTARIFADIF", gErr)
            
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 197119)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Function TRVAcordo_Exclui(ByVal objTRVAcordo As ClassTRVAcordos) As Long

Dim lErro As Long
Dim alComando(1 To 1) As Long
Dim iIndice As Integer
Dim lTransacao As Long

On Error GoTo Erro_TRVAcordo_Exclui

    'Abertura de transação
    lTransacao = Transacao_Abrir()
    If lTransacao = 0 Then gError 197139

    lErro = CF("TRVAcordo_Exclui_EmTrans", objTRVAcordo)
    If lErro <> SUCESSO Then gError 197142

    'Confirma a transação
    lErro = Transacao_Commit()
    If lErro <> AD_SQL_SUCESSO Then gError 197143

    TRVAcordo_Exclui = SUCESSO

    Exit Function

Erro_TRVAcordo_Exclui:

    TRVAcordo_Exclui = gErr

    Select Case gErr

        Case 197139
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_TRANSACAO", gErr)

        Case 197142
        
        Case 197143
            Call Rotina_Erro(vbOKOnly, "ERRO_COMMIT", gErr)
        
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 197144)

    End Select


    'Desfaz Transação
    Call Transacao_Rollback
    
    Exit Function

End Function

Function TRVAcordo_Exclui_EmTrans(ByVal objTRVAcordo As ClassTRVAcordos) As Long

Dim lErro As Long
Dim alComando(1 To 1) As Long
Dim iIndice As Integer

On Error GoTo Erro_TRVAcordo_Exclui_EmTrans

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 197140
    Next

    lErro = Comando_Executar(alComando(1), "DELETE FROM TRVAcordos WHERE Numero = ?", objTRVAcordo.lNumero)
    If lErro <> AD_SQL_SUCESSO Then gError 197141

    lErro = TRVAcordoComissaoTarifa_Exclui(objTRVAcordo)
    If lErro <> SUCESSO Then gError 197142

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVAcordo_Exclui_EmTrans = SUCESSO

    Exit Function

Erro_TRVAcordo_Exclui_EmTrans:

    TRVAcordo_Exclui_EmTrans = gErr

    Select Case gErr


        Case 197140
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 197141
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_TRVACORDOS", gErr)

        Case 197142
                
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 197144)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next
    
    Exit Function

End Function

Public Function TRVVou_Gera_Comis(ByVal objVou As ClassTRVVouchers, ByVal dValorBase As Double, ByVal dValorBaseComis As Double, ByVal iTipoValorBase As Integer, ByVal dtData As Date, ByVal sHistorico As String, ByVal iTipoTratamento As Integer, Optional ByVal objOCR As ClassTRVOcorrencias = Nothing, Optional ByVal bForcaCanc As Boolean = False) As Long
'Gera a comissão externa relacionada ao voucher
'PS-> As alterações na comissão indireta (C.I.) é tratada na função TRVVouEmiCI_Acerta

Dim lErro As Long
Dim alComando(0 To 45) As Long
Dim iIndice As Integer
Dim lContador As Long
Dim iTipoLiberacao As Integer
Dim lNumIntDocLiberacao As Long
Dim lNumIntDocOCR As Long
Dim objTipoOCR As New ClassTRVTiposOcorrencia
Dim iStatus As Integer
Dim dPercValVou As Double
Dim dValorBrutoBase As Double
Dim sTipoDoc As String
Dim dPercBase As Double
Dim objVoucherInfo As New ClassTRVVoucherInfo
Dim iTipoLiberacaoCMCC As Integer
Dim lNumIntDocLiberacaoCMCC As Long
Dim iStatusOVER As Integer
Dim iStatusCMCC As Integer
Dim iTipoLiberacaoOVER As Integer
Dim lNumIntDocLiberacaoOVER As Long
Dim dPercCITotal As Double
Dim objVouEmiCI As ClassTRVVouEmiCI
Dim iStatusAux As Integer

On Error GoTo Erro_TRVVou_Gera_Comis

    If giVersaoTRV >= TRV_VERSAO_COMISSIONAMENTO Then
    
'        If iTipoTratamento = TRV_TIPO_TRATAMENTO_COMI_VOU_TRANSF_CLI And objVou.lNumVou = 782626 Then
'            Call MsgBox("Chamou a rotina para estornar os valores antigos")
'        End If
    
        'Le todas as informações do voucher
        lErro = CF("TRVVouchers_Le", objVou)
        If lErro <> SUCESSO And lErro <> ERRO_LEITURA_SEM_DADOS Then gError 198156
                
        'Se não está cadastrado dá erro
        If lErro = ERRO_LEITURA_SEM_DADOS Then gError 198157
        
        lErro = CF("TRVVouEmiCI_Le", objVou)
        If lErro <> SUCESSO Then gError 198156
        
        objVoucherInfo.lNumVou = objVou.lNumVou
        objVoucherInfo.sSerie = objVou.sSerie
        objVoucherInfo.sTipo = objVou.sTipVou
        
        lErro = CF("TRVVoucherInfoSigav_Le", objVoucherInfo)
        If lErro <> SUCESSO And lErro <> ERRO_LEITURA_SEM_DADOS Then gError 198156
            
        'Se o voucher foi emitido antes da implantação do comissionamento ou ainda não é a versão de comissionamento
        'Ou ainda não extraiu as informações por completo
        'não faz nada
        If gdtDataInicioComisCorp <= objVou.dtData And lErro <> ERRO_LEITURA_SEM_DADOS And (objVou.iStatus <> STATUS_TRV_VOU_CANCELADO Or iTipoTratamento = TRV_TIPO_TRATAMENTO_COMI_NVL Or bForcaCanc) Then
    
            'Abertura de Comando
            For iIndice = LBound(alComando) To UBound(alComando)
                alComando(iIndice) = Comando_Abrir()
                If alComando(iIndice) = 0 Then gError 198158
            Next
            
            iStatus = TRV_VOU_INFO_STATUS_BLOQUEADO
                    
            'Se for uma ocorrência pega o numintdoc e o tipo
            If Not (objOCR Is Nothing) Then
            
                lNumIntDocOCR = objOCR.lNumIntDoc
                
                objTipoOCR.iCodigo = objOCR.iOrigem
                
                'Le o tipo da ocorrência para dar o tratamento adequado
                lErro = CF("TRVTiposOcorrencia_Le", objTipoOCR)
                If lErro <> SUCESSO And lErro <> ERRO_LEITURA_SEM_DADOS Then gError 198159
            
                If lErro <> SUCESSO Then gError 198160
                
            End If
            
            'Pega o último sequencial do último item gerado para esse voucher
            lErro = TRVVou_Gera_Comis_Obtem_Seq(alComando(0), objVou, lContador)
            If lErro <> SUCESSO Then gError 198161
            
            'Verifica se o a receber já está baixado, se sim coloca o status como liberado e guarda o tipo de liberação e o numintbaixa
            'Existem 3 liberações diferentes:
            '1 - o do OVER que é configurado de acordo com a agência (De Cartão é liberado direto)
            '2 - o do CMCC que é liberado no faturamento
            '3 - e o do resto que é liberado após a primeira baixa
            lErro = TRVVou_Gera_Comis_Obtem_Status(alComando(1), alComando(41), objVou, iStatus, iTipoLiberacao, lNumIntDocLiberacao, iStatusCMCC, iTipoLiberacaoCMCC, lNumIntDocLiberacaoCMCC, iStatusOVER, iTipoLiberacaoOVER, lNumIntDocLiberacaoOVER)
            If lErro <> SUCESSO Then gError 198162
                       
            'Se é um voucher novo
            If iTipoTratamento = TRV_TIPO_TRATAMENTO_COMI_VOU_NOVO Then
            
                'Insere as informações iniciais do voucher e preenche o obj com as informações sobre o comissionamento
                'Aqui só acerta TRVVoucher sem gerar nada em TRVVoucherInfo
                lErro = TRVVou_Gera_Comis_Insere_Novo(alComando(2), alComando(3), alComando(4), alComando(5), alComando(6), alComando(7), alComando(8), alComando(9), alComando(10), alComando(11), alComando(12), alComando(42), alComando(43), alComando(44), alComando(45), objVou)
                If lErro <> SUCESSO Then gError 198163
            
            End If
            
            'Calcula o bruto base com base na comissão da agência e o valor líquido base passado para essa função
            Select Case iTipoValorBase
            
                'O valor passado é o líquido (Ocorrências - Inclusão, Alteração ou Exclusão)
                Case TRV_TIPO_VALOR_BASE_LIQ
                
                    If objVou.iCartao = MARCADO Then
                        dValorBrutoBase = dValorBase
                    Else
                        'O valor bruto é o valor líquido acrescido da comissão descontada
                        dValorBrutoBase = dValorBase / (1 - objVou.dComissaoAg)
                    End If
                    dPercBase = 0
                
                'O Valor passado já é o bruto (Vouchers - Inclusão ou alteração de valor)
                Case TRV_TIPO_VALOR_BASE_BRU
                    dValorBrutoBase = dValorBase
                    dPercBase = 0
                
                'O valor passado é um acerto de percentual
                Case TRV_TIPO_VALOR_BASE_PER
                    dValorBrutoBase = objVou.dValorBruto
                    dPercBase = dValorBase
                    
                Case Else
                    gError 198164
                
            End Select
                                    
            'Se for tratamento para OCR ou NVL
            'lança as informações conforme o tipo de OCR
            If iTipoTratamento = TRV_TIPO_TRATAMENTO_COMI_OCR Or iTipoTratamento = TRV_TIPO_TRATAMENTO_COMI_NVL Then
        
                If objOCR Is Nothing Then gError 198165
                
                'Percentual que o valor considerado tem em cima do voucher
                If objVou.dValorBruto <> 0 Then
                    dPercValVou = -objOCR.dValorOCRBrutoVou / objVou.dValorBruto
                Else
                    dPercValVou = 0
                End If
                                
                'Lança o valor Bruto registrado na ocorrência
                lErro = TRVVou_Gera_Comis_Insere_Info(alComando(19), alComando(20), alComando(21), objVou, TRV_TIPODOC_BRUTO_TEXTO, dtData, objOCR.dValorOCRBrutoVou, sHistorico, TRV_VOU_INFO_STATUS_BLOQUEADO, 0, 0, objOCR.lNumIntDoc, TRV_CLIENTEINFO_TIPO_CLIENTE, objVou.lClienteVou, TRV_TIPO_ESTORNO_LANC_NORMAL, 0, lContador)
                If lErro <> AD_SQL_SUCESSO Then gError 198166
                
                'Lança o valor da comissão retida na agência registrado na ocorrência
                lErro = TRVVou_Gera_Comis_Insere_Info(alComando(19), alComando(20), alComando(21), objVou, TRV_TIPODOC_CMA_TEXTO, dtData, objOCR.dValorOCRCMAVou, sHistorico, TRV_VOU_INFO_STATUS_BLOQUEADO, 0, 0, objOCR.lNumIntDoc, TRV_CLIENTEINFO_TIPO_CLIENTE, objVou.lClienteVou, TRV_TIPO_ESTORNO_LANC_NORMAL, 0, lContador)
                If lErro <> AD_SQL_SUCESSO Then gError 198166
                                                        
                'Se estiver com a informação que a OCR afeta a comissão do correntista, estorna
                'conforme % de alteração da OCR no valor bruto do voucher
                If objTipoOCR.iAlteraCMC = MARCADO Then
                    lErro = TRVVou_Gera_Comis_Trata_Estorno(alComando(13), alComando(14), alComando(15), alComando(16), alComando(17), objVou, dtData, sHistorico, TRV_TIPODOC_CMC_TEXTO, lContador, , , lNumIntDocOCR, dPercValVou)
                    If lErro <> SUCESSO Then gError 198168
                End If
    
                'Se estiver com a informação que a OCR afeta a comissão de cartão, estorna
                'conforme % de alteração da OCR no valor bruto do voucher
                If objTipoOCR.iAlteraCMCC = MARCADO Then
                    lErro = TRVVou_Gera_Comis_Trata_Estorno(alComando(13), alComando(14), alComando(15), alComando(16), alComando(17), objVou, dtData, sHistorico, TRV_TIPODOC_CMCC_TEXTO, lContador, , , lNumIntDocOCR, dPercValVou)
                    If lErro <> SUCESSO Then gError 198169
                End If
                
                'Se estiver com a informação que a OCR afeta a comissão do representante, estorna
                'conforme % de alteração da OCR no valor bruto do voucher
                If objTipoOCR.iAlteraCMR = MARCADO Then
                    lErro = TRVVou_Gera_Comis_Trata_Estorno(alComando(13), alComando(14), alComando(15), alComando(16), alComando(17), objVou, dtData, sHistorico, TRV_TIPODOC_CMR_TEXTO, lContador, , , lNumIntDocOCR, dPercValVou)
                    If lErro <> SUCESSO Then gError 198170
                End If
                
                'Se estiver com a informação que a OCR afeta a comissão do emissor, estorna
                'conforme % de alteração da OCR no valor bruto do voucher
                If objTipoOCR.iAlteraOVER = MARCADO Then
                    lErro = TRVVou_Gera_Comis_Trata_Estorno(alComando(13), alComando(14), alComando(15), alComando(16), alComando(17), objVou, dtData, sHistorico, TRV_TIPODOC_OVER_TEXTO, lContador, , , lNumIntDocOCR, dPercValVou)
                    If lErro <> SUCESSO Then gError 198171
                End If
            
            End If
                                
            'Se for tratamento para exclusão de OCR ou NVL
            'Apenas relança documento gerados pelo OCR anterior com sinal invertido
            If iTipoTratamento = TRV_TIPO_TRATAMENTO_COMI_OCR_EXCLUSAO Or iTipoTratamento = TRV_TIPO_TRATAMENTO_COMI_NVL_EXCLUSAO Then
            
                'Gera o estorno através do NumIntDocOCR e do voucher que está sendo mexido
                lErro = TRVVou_Gera_Comis_Trata_Estorno2(alComando(22), alComando(23), alComando(24), alComando(25), alComando(26), objVou, dtData, sHistorico, lNumIntDocOCR, lContador)
                If lErro <> SUCESSO Then gError 198172
            
            End If
            
            'Se mexeu no valor do voucher ou ele é novo tem que inserir o valor bruto e as comissões
            If iTipoTratamento = TRV_TIPO_TRATAMENTO_COMI_VOU_VLR_ALTERADO Or iTipoTratamento = TRV_TIPO_TRATAMENTO_COMI_VOU_NOVO Then
            
                'Insere o registro do valor bruto
                lErro = TRVVou_Gera_Comis_Insere_Info(alComando(19), alComando(20), alComando(21), objVou, TRV_TIPODOC_BRUTO_TEXTO, dtData, dValorBrutoBase, sHistorico, iStatus, iTipoLiberacao, lNumIntDocLiberacao, 0, TRV_CLIENTEINFO_TIPO_CLIENTE, objVou.lClienteVou, TRV_TIPO_ESTORNO_LANC_NORMAL, 0, lContador)
                If lErro <> AD_SQL_SUCESSO Then gError 198173
                
                If objVou.iCartao = DESMARCADO Then
                
                    If Abs(Arredonda_Moeda(dValorBrutoBase * objVou.dComissaoAg)) > DELTA_VALORMONETARIO Then
                        'Insere a CMA (Comissão da agência)
                        lErro = TRVVou_Gera_Comis_Insere_Info(alComando(19), alComando(20), alComando(21), objVou, TRV_TIPODOC_CMA_TEXTO, dtData, Arredonda_Moeda(dValorBaseComis * objVou.dComissaoAg), sHistorico, iStatus, iTipoLiberacao, lNumIntDocLiberacao, 0, TRV_CLIENTEINFO_TIPO_CLIENTE, objVou.lClienteComissao, TRV_TIPO_ESTORNO_LANC_NORMAL, 0, lContador)
                        If lErro <> AD_SQL_SUCESSO Then gError 198174
                    End If
                
                Else
                    'If Abs(Arredonda_Moeda(dValorBrutoBase * objVou.dComissaoAg)) > DELTA_VALORMONETARIO Then
                    If Abs(Arredonda_Moeda(dValorBaseComis * objVou.dComissaoAg)) > DELTA_VALORMONETARIO Then
                        'Insere a CMCC (Comissão da agência em venda sobre cartão de crédito)
                        'lErro = TRVVou_Gera_Comis_Insere_Info(alComando(19), alComando(20), alComando(21), objVou, TRV_TIPODOC_CMCC_TEXTO, dtData, Arredonda_Moeda(dValorBrutoBase * objVou.dComissaoAg), sHistorico, iStatus, iTipoLiberacao, lNumIntDocLiberacao, 0, TRV_CLIENTEINFO_TIPO_CLIENTE, objVou.lClienteComissao, TRV_TIPO_ESTORNO_LANC_NORMAL, 0, lContador)
                        'Acerta de acordo com o valor base para comissão que para cartão de crédito pode ser diferente
                        lErro = TRVVou_Gera_Comis_Insere_Info(alComando(19), alComando(20), alComando(21), objVou, TRV_TIPODOC_CMCC_TEXTO, dtData, Arredonda_Moeda(dValorBaseComis * objVou.dComissaoAg), sHistorico, iStatusCMCC, iTipoLiberacaoCMCC, lNumIntDocLiberacaoCMCC, 0, TRV_CLIENTEINFO_TIPO_CLIENTE, objVou.lClienteComissao, TRV_TIPO_ESTORNO_LANC_NORMAL, 0, lContador)
                        If lErro <> AD_SQL_SUCESSO Then gError 198175
                        
                    End If
                End If
                
                'Lança as comissões de representante de correntista e over
                iStatusAux = iStatus
                If objVou.lClienteVou = 146052 Then
                    '[08/09/2015 18:12:12] Desenv-Corporator Forprint Informática Ltda: blz, código 146052 o CMR vai ser gerado já liberado, ok ?
                    '[08/09/2015 18:12:32] TRV - Adriano: otimo, muito obrigado
                    iStatusAux = TRV_VOU_INFO_STATUS_LIBERADO
                End If
                
                lErro = TRVVou_Gera_Comis_Lanca_Comis(alComando(31), alComando(32), alComando(33), alComando(34), objVou, dValorBaseComis, dtData, sHistorico, iStatusAux, iTipoLiberacao, lNumIntDocLiberacao, iStatusOVER, iTipoLiberacaoOVER, lNumIntDocLiberacaoOVER, lContador)
                If lErro <> AD_SQL_SUCESSO Then gError 198176
                
            End If
            
            'Se o voucher passou a ser de cartão ou deixou de ser
            'Tem que estornar um tipo e relançar no outro
            If iTipoTratamento = TRV_TIPO_TRATAMENTO_COMI_VOU_TRANSF_CARTAO Then
                
                'Deixou de ser cartão
                If objVou.iCartao = DESMARCADO Then
                    
                    'Estorna a comissão de cartão e lança a comissão retida na agência
                    lErro = TRVVou_Gera_Comis_Trata_Estorno(alComando(26), alComando(27), alComando(28), alComando(29), alComando(30), objVou, dtData, sHistorico, TRV_TIPODOC_CMCC_TEXTO, lContador, MARCADO, TRV_TIPODOC_CMA_TEXTO, , , , , TRV_VOU_INFO_STATUS_BLOQUEADO, 0, 0)
                    If lErro <> SUCESSO Then gError 198177
                                                    
                Else
                'Passou a ser venda de cartão
                    
                    'Estorna a comissão retida na agência e lança a comissão de cartão
                    lErro = TRVVou_Gera_Comis_Trata_Estorno(alComando(26), alComando(27), alComando(28), alComando(29), alComando(30), objVou, dtData, sHistorico, TRV_TIPODOC_CMA_TEXTO, lContador, MARCADO, TRV_TIPODOC_CMCC_TEXTO, , , , , iStatusCMCC, iTipoLiberacaoCMCC, lNumIntDocLiberacaoCMCC)
                    If lErro <> SUCESSO Then gError 198178
                End If
                
                'Se o OVER tem que estar bloqueado
                If iStatusOVER = TRV_VOU_INFO_STATUS_BLOQUEADO Then
                    'Busca os dados de over e bloqueia se possível
                    lErro = TRVVouchers_Comissao_Deslibera2(objVou.sTipVou, objVou.sSerie, objVou.lNumVou, TRV_TIPODOC_OVER_TEXTO)
                    If lErro <> SUCESSO Then gError 198177
                ElseIf iStatusOVER = TRV_VOU_INFO_STATUS_LIBERADO Then
                    'Busca os dados de over e libera
                    lErro = TRVVouchers_Comissao_Libera(objVou.sTipVou, objVou.sSerie, objVou.lNumVou, TRV_TIPODOC_OVER_TEXTO, iTipoLiberacaoOVER, lNumIntDocLiberacaoOVER)
                    If lErro <> SUCESSO Then gError 198177
                End If
    
            End If
            
            'Se o voucher passou a ter outro representante
            If iTipoTratamento = TRV_TIPO_TRATAMENTO_COMI_VOU_TRANSF_REP Then
    
                lErro = TRVVou_Gera_Comis_Trata_Estorno(alComando(26), alComando(27), alComando(28), alComando(29), alComando(30), objVou, dtData, sHistorico, TRV_TIPODOC_CMR_TEXTO, lContador, MARCADO, , , , dPercBase, objVou.lRepresentante)
                If lErro <> SUCESSO Then gError 198179
    
            End If
            
            'Se o voucher passou a ter outro correntista
            If iTipoTratamento = TRV_TIPO_TRATAMENTO_COMI_VOU_TRANSF_COR Then
    
                lErro = TRVVou_Gera_Comis_Trata_Estorno(alComando(26), alComando(27), alComando(28), alComando(29), alComando(30), objVou, dtData, sHistorico, TRV_TIPODOC_CMC_TEXTO, lContador, MARCADO, , , , dPercBase, objVou.lCorrentista)
                If lErro <> SUCESSO Then gError 198180
    
            End If
            
            'Se o voucher passou a ter outro emissor
            If iTipoTratamento = TRV_TIPO_TRATAMENTO_COMI_VOU_TRANSF_EMI Then
    
                lErro = TRVVou_Gera_Comis_Trata_Estorno(alComando(26), alComando(27), alComando(28), alComando(29), alComando(30), objVou, dtData, sHistorico, TRV_TIPODOC_OVER_TEXTO, lContador, MARCADO, , , , dPercBase, objVou.lEmissor)
                If lErro <> SUCESSO Then gError 198181
    
            End If
            
            'Se o voucher passou a ter outro cliente
            If iTipoTratamento = TRV_TIPO_TRATAMENTO_COMI_VOU_TRANSF_CLI Then
    
                'Estorna o valor bruto
                lErro = TRVVou_Gera_Comis_Trata_Estorno(alComando(26), alComando(27), alComando(28), alComando(29), alComando(30), objVou, dtData, sHistorico, TRV_TIPODOC_BRUTO_TEXTO, lContador, MARCADO, , , , 1, objVou.lClienteVou)
                If lErro <> SUCESSO Then gError 198182
    
                'Estorna a comissão da agência
                If objVou.iCartao = MARCADO Then
                    lErro = TRVVou_Gera_Comis_Trata_Estorno(alComando(26), alComando(27), alComando(28), alComando(29), alComando(30), objVou, dtData, sHistorico, TRV_TIPODOC_CMCC_TEXTO, lContador, MARCADO, , , , dPercBase, objVou.lClienteComissao)
                    If lErro <> SUCESSO Then gError 198182
                Else
                    
                    lErro = TRVVou_Gera_Comis_Trata_Estorno(alComando(26), alComando(27), alComando(28), alComando(29), alComando(30), objVou, dtData, sHistorico, TRV_TIPODOC_CMA_TEXTO, lContador, MARCADO, , , , dPercBase, objVou.lClienteComissao)
                    If lErro <> SUCESSO Then gError 198183
                End If
    
            End If
            
            'Se alterou o percentual de comissão do representante
            If iTipoTratamento = TRV_TIPO_TRATAMENTO_COMI_CMR_ALT_PERCCOMI Then
            
                If objVou.lRepresentante <> 0 Then
            
                    iStatusAux = iStatus
                    If objVou.lClienteVou = 146052 Then
                        '[08/09/2015 18:12:12] Desenv-Corporator Forprint Informática Ltda: blz, código 146052 o CMR vai ser gerado já liberado, ok ?
                        '[08/09/2015 18:12:32] TRV - Adriano: otimo, muito obrigado
                        iStatusAux = TRV_VOU_INFO_STATUS_LIBERADO
                    End If
                    
                    'Se for passado o percentual de acerto
                    If iTipoValorBase = TRV_TIPO_VALOR_BASE_PER Then
                        lErro = TRVVou_Gera_Comis_Insere_Info(alComando(19), alComando(20), alComando(21), objVou, TRV_TIPODOC_CMR_TEXTO, dtData, objVou.dValorBaseComis * dPercBase, sHistorico, iStatusAux, iTipoLiberacao, lNumIntDocLiberacao, 0, TRV_CLIENTEINFO_TIPO_CLIENTE, objVou.lRepresentante, TRV_TIPO_ESTORNO_LANC_NORMAL, 0, lContador)
                        If lErro <> AD_SQL_SUCESSO Then gError 198184
                    Else
                    'Se for passado o valor de acerto
                        lErro = TRVVou_Gera_Comis_Insere_Info(alComando(19), alComando(20), alComando(21), objVou, TRV_TIPODOC_CMR_TEXTO, dtData, dValorBase, sHistorico, iStatusAux, iTipoLiberacao, lNumIntDocLiberacao, 0, TRV_CLIENTEINFO_TIPO_CLIENTE, objVou.lRepresentante, TRV_TIPO_ESTORNO_LANC_NORMAL, 0, lContador)
                        If lErro <> AD_SQL_SUCESSO Then gError 198184
                    End If
                End If
            
            End If
    
            'Se alterou o percentual de comissão do correntista
            If iTipoTratamento = TRV_TIPO_TRATAMENTO_COMI_CMC_ALT_PERCCOMI Then
            
                If objVou.lCorrentista <> 0 Then
            
                    'Se for passado o percentual de acerto
                    If iTipoValorBase = TRV_TIPO_VALOR_BASE_PER Then
                    
                        If objVou.lClienteVou = objVou.lCorrentista Then
                            lErro = TRVVou_Gera_Comis_Insere_Info(alComando(19), alComando(20), alComando(21), objVou, TRV_TIPODOC_CMC_TEXTO, dtData, objVou.dValorBaseComis * dPercBase, sHistorico, iStatusCMCC, iTipoLiberacaoCMCC, lNumIntDocLiberacaoCMCC, 0, TRV_CLIENTEINFO_TIPO_CLIENTE, objVou.lCorrentista, TRV_TIPO_ESTORNO_LANC_NORMAL, 0, lContador)
                        Else
                            lErro = TRVVou_Gera_Comis_Insere_Info(alComando(19), alComando(20), alComando(21), objVou, TRV_TIPODOC_CMC_TEXTO, dtData, objVou.dValorBaseComis * dPercBase, sHistorico, iStatus, iTipoLiberacao, lNumIntDocLiberacao, 0, TRV_CLIENTEINFO_TIPO_CLIENTE, objVou.lCorrentista, TRV_TIPO_ESTORNO_LANC_NORMAL, 0, lContador)
                        End If
                        If lErro <> AD_SQL_SUCESSO Then gError 198185
                    Else
                    'Se for passado o valor de acerto
                        If objVou.lClienteVou = objVou.lCorrentista Then
                            lErro = TRVVou_Gera_Comis_Insere_Info(alComando(19), alComando(20), alComando(21), objVou, TRV_TIPODOC_CMC_TEXTO, dtData, dValorBase, sHistorico, iStatusCMCC, iTipoLiberacaoCMCC, lNumIntDocLiberacaoCMCC, 0, TRV_CLIENTEINFO_TIPO_CLIENTE, objVou.lCorrentista, TRV_TIPO_ESTORNO_LANC_NORMAL, 0, lContador)
                        Else
                            lErro = TRVVou_Gera_Comis_Insere_Info(alComando(19), alComando(20), alComando(21), objVou, TRV_TIPODOC_CMC_TEXTO, dtData, dValorBase, sHistorico, iStatus, iTipoLiberacao, lNumIntDocLiberacao, 0, TRV_CLIENTEINFO_TIPO_CLIENTE, objVou.lCorrentista, TRV_TIPO_ESTORNO_LANC_NORMAL, 0, lContador)
                        End If
                        If lErro <> AD_SQL_SUCESSO Then gError 198185
                    End If
                
                End If
            
            End If
            
            'Se alterou o percentual de comissão do emissor
            If iTipoTratamento = TRV_TIPO_TRATAMENTO_COMI_OVER_ALT_PERCCOMI Then
            
                If objVou.lEmissor <> 0 And objVou.idiasantc = DESMARCADO Then
            
                    'Se for passado o percentual de acerto
                    If iTipoValorBase = TRV_TIPO_VALOR_BASE_PER Then
                    
                        dPercCITotal = 0
                        For Each objVouEmiCI In objVou.colEmiCI
                            dPercCITotal = dPercCITotal + objVouEmiCI.dPercCI
                            
                            lErro = TRVVou_Gera_Comis_Insere_Info(alComando(19), alComando(20), alComando(21), objVou, TRV_TIPODOC_OVER_TEXTO, dtData, objVou.dValorBaseComis * dPercBase * objVouEmiCI.dPercCI, sHistorico, iStatusOVER, iTipoLiberacaoOVER, lNumIntDocLiberacaoOVER, 0, TRV_CLIENTEINFO_TIPO_FORNECEDOR, objVouEmiCI.lFornEmissor, TRV_TIPO_ESTORNO_LANC_NORMAL, 0, lContador, , MARCADO)
                            If lErro <> AD_SQL_SUCESSO Then gError 198119
                        Next
                        
                        lErro = TRVVou_Gera_Comis_Insere_Info(alComando(19), alComando(20), alComando(21), objVou, TRV_TIPODOC_OVER_TEXTO, dtData, objVou.dValorBaseComis * dPercBase * (1 - dPercCITotal), sHistorico, iStatusOVER, iTipoLiberacaoOVER, lNumIntDocLiberacaoOVER, 0, TRV_CLIENTEINFO_TIPO_FORNECEDOR, objVou.lEmissor, TRV_TIPO_ESTORNO_LANC_NORMAL, 0, lContador)
                        If lErro <> AD_SQL_SUCESSO Then gError 198186
                        
                    Else
                    'Se for passado o valor de acerto
                    
                        dPercCITotal = 0
                        For Each objVouEmiCI In objVou.colEmiCI
                            dPercCITotal = dPercCITotal + objVouEmiCI.dPercCI
                            
                            lErro = TRVVou_Gera_Comis_Insere_Info(alComando(19), alComando(20), alComando(21), objVou, TRV_TIPODOC_OVER_TEXTO, dtData, dValorBase * objVouEmiCI.dPercCI, sHistorico, iStatusOVER, iTipoLiberacaoOVER, lNumIntDocLiberacaoOVER, 0, TRV_CLIENTEINFO_TIPO_FORNECEDOR, objVouEmiCI.lFornEmissor, TRV_TIPO_ESTORNO_LANC_NORMAL, 0, lContador, , MARCADO)
                            If lErro <> AD_SQL_SUCESSO Then gError 198119
                        Next
                    
                        lErro = TRVVou_Gera_Comis_Insere_Info(alComando(19), alComando(20), alComando(21), objVou, TRV_TIPODOC_OVER_TEXTO, dtData, dValorBase * (1 - dPercCITotal), sHistorico, iStatusOVER, iTipoLiberacaoOVER, lNumIntDocLiberacaoOVER, 0, TRV_CLIENTEINFO_TIPO_FORNECEDOR, objVou.lEmissor, TRV_TIPO_ESTORNO_LANC_NORMAL, 0, lContador)
                        If lErro <> AD_SQL_SUCESSO Then gError 198186
                    End If

                End If
            
            End If
            
            'Se alterou o percntual de comissão da agência
            If iTipoTratamento = TRV_TIPO_TRATAMENTO_COMI_CMA_CMCC_ALT_PERCCOMI Then
            
                'Se for cartão
                If objVou.iCartao = MARCADO Then
            
                    'Se for passado o percentual de acerto
                    If iTipoValorBase = TRV_TIPO_VALOR_BASE_PER Then
                        lErro = TRVVou_Gera_Comis_Insere_Info(alComando(19), alComando(20), alComando(21), objVou, TRV_TIPODOC_CMCC_TEXTO, dtData, objVou.dValorBaseComis * dPercBase, sHistorico, iStatusCMCC, iTipoLiberacaoCMCC, lNumIntDocLiberacaoCMCC, 0, TRV_CLIENTEINFO_TIPO_CLIENTE, objVou.lClienteVou, TRV_TIPO_ESTORNO_LANC_NORMAL, 0, lContador)
                        If lErro <> AD_SQL_SUCESSO Then gError 198187
                    Else
                    'Se for passado o valor de acerto
                        lErro = TRVVou_Gera_Comis_Insere_Info(alComando(19), alComando(20), alComando(21), objVou, TRV_TIPODOC_CMCC_TEXTO, dtData, dValorBase, sHistorico, iStatusCMCC, iTipoLiberacaoCMCC, lNumIntDocLiberacaoCMCC, 0, TRV_CLIENTEINFO_TIPO_CLIENTE, objVou.lClienteVou, TRV_TIPO_ESTORNO_LANC_NORMAL, 0, lContador)
                        If lErro <> AD_SQL_SUCESSO Then gError 198187
                    End If
                Else
          
                    'Se for passado o percentual de acerto
                    If iTipoValorBase = TRV_TIPO_VALOR_BASE_PER Then
                        lErro = TRVVou_Gera_Comis_Insere_Info(alComando(19), alComando(20), alComando(21), objVou, TRV_TIPODOC_CMA_TEXTO, dtData, objVou.dValorBruto * dPercBase, sHistorico, iStatus, iTipoLiberacao, lNumIntDocLiberacao, 0, TRV_CLIENTEINFO_TIPO_CLIENTE, objVou.lClienteVou, TRV_TIPO_ESTORNO_LANC_NORMAL, 0, lContador)
                        If lErro <> AD_SQL_SUCESSO Then gError 198188
                    Else
                    'Se for passado o valor de acerto
                        lErro = TRVVou_Gera_Comis_Insere_Info(alComando(19), alComando(20), alComando(21), objVou, TRV_TIPODOC_CMA_TEXTO, dtData, dValorBase, sHistorico, iStatus, iTipoLiberacao, lNumIntDocLiberacao, 0, TRV_CLIENTEINFO_TIPO_CLIENTE, objVou.lClienteVou, TRV_TIPO_ESTORNO_LANC_NORMAL, 0, lContador)
                        If lErro <> AD_SQL_SUCESSO Then gError 198188
                    End If
                End If
            
            End If
            
            'Acerta o valor líquido do voucher e a comissão da agência
            lErro = CF("TRVVouchers_Grava", objVou, 0, False, TRV_TIPO_GRAVACAO_ACERTO_VALOR_LIQ)
            If lErro <> SUCESSO Then gError 198188
            
            'Fecha Comando
            For iIndice = LBound(alComando) To UBound(alComando)
                Call Comando_Fechar(alComando(iIndice))
            Next
        
        End If
        
    End If
 
    TRVVou_Gera_Comis = SUCESSO

    Exit Function

Erro_TRVVou_Gera_Comis:

    TRVVou_Gera_Comis = gErr

    Select Case gErr

        Case 198119, 198156, 198159, 198161 To 198163, 198166 To 198188
            
        Case 198157 'Voucher não cadastrado
            Call Rotina_Erro(vbOKOnly, "ERRO_VOUCHER_NAO_CADASTRADO", gErr, objVou.lNumVou, objVou.sSerie, objVou.sTipVou)
        
        Case 198158
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)
            
        Case 198160 'Tipo de ocorrência não cadastrado
            Call Rotina_Erro(vbOKOnly, "ERRO_CODIGO_TRVTIPOSOCORRENCIA_NAO_PREENCHIDO", gErr)
        
        Case 198164 'Tipo de valor base desconhecido iTipoValorBase
            Call Rotina_Erro(vbOKOnly, "ERRO_TRV_TIPOVALOR_DESCONHECIDO", gErr, iTipoValorBase)
        
        Case 198165 'Ocorrência não passada
            Call Rotina_Erro(vbOKOnly, "ERRO_TRV_OCR_NAO_INFORMADA", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 198189)

    End Select

    Call Rotina_Erro(vbOKOnly, "ERRO_COMISSAO_VOU", gErr, objVou.lNumVou, objVou.sSerie, objVou.sTipVou)

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Private Function TRVVou_Gera_Comis_Obtem_Seq(ByVal lComando As Long, ByVal objVou As ClassTRVVouchers, lContador As Long) As Long
'Gera a comissão externa relacionada ao voucher

Dim lErro As Long

On Error GoTo Erro_TRVVou_Gera_Comis_Obtem_Seq

     'Le o sequencial do histórico do Voucher
    lErro = Comando_Executar(lComando, "SELECT MAX(Seq) FROM TRVVoucherInfo WHERE TipVou = ? AND Serie = ? AND NumVou = ? ", _
                lContador, objVou.sTipVou, objVou.sSerie, objVou.lNumVou)
    If lErro <> AD_SQL_SUCESSO Then gError 198095

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(lComando)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 198096
    
    If lErro <> AD_SQL_SUCESSO Then lContador = 0
 
    TRVVou_Gera_Comis_Obtem_Seq = SUCESSO

    Exit Function

Erro_TRVVou_Gera_Comis_Obtem_Seq:

    TRVVou_Gera_Comis_Obtem_Seq = gErr

    Select Case gErr

        Case 198095, 198096
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVVOUCHERINFO", gErr)
            
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 198097)

    End Select

    Exit Function

End Function

Private Function TRVVou_Gera_Comis_Insere_Info(ByVal lComando1 As Long, ByVal lComando2 As Long, ByVal lComando3 As Long, ByVal objVou As ClassTRVVouchers, ByVal sTipoDoc As String, ByVal dtData As Date, ByVal dValor As Double, ByVal sHistorico As String, ByVal iStatus As Integer, ByVal iTipoLiberacao As Integer, ByVal lNumIntDocLiberacao As Long, ByVal lNumIntDocOCR As Long, ByVal iTipoCliForn As Integer, ByVal lCliForn As Long, ByVal iEstorno As Integer, ByVal lNumIntDocEstorno As Long, lContador As Long, Optional lNumInDocInfo As Long, Optional ByVal iIndireta As Integer = 0) As Long
'Gera a comissão externa relacionada ao voucher

Dim lErro As Long
Dim lNumIntDoc As Long

On Error GoTo Erro_TRVVou_Gera_Comis_Insere_Info

    If Abs(dValor) > DELTA_VALORMONETARIO Then

        'Obter NumIntDoc
        lErro = CF("Config_ObterNumInt2", lComando1, lComando2, "TRVConfig", "NUM_INT_PROX_TRVVOURCHERINFO", lNumIntDoc)
        If lErro <> SUCESSO Then gError 198153
        
        lContador = lContador + 1
        
        'Insere em TRVVoucherInfo
        lErro = Comando_Executar(lComando3, "INSERT INTO TRVVoucherInfo (NumIntDoc,TipoDoc,TipVou,Serie,NumVou,Seq,Data,TipoDocDestino,NumIntDocDestino,NumIntDocComiInt,Valor,Historico,NumTitulo, Status,TipoLiberacao,NumIntDocLiberacao, NumIntDocOcr,TipoCliForn,CliForn, Estorno, NumIntDocEstorno, DataRegistro, HoraRegistro, Usuario, Indireta) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) ", _
                     lNumIntDoc, sTipoDoc, objVou.sTipVou, objVou.sSerie, objVou.lNumVou, lContador, dtData, 0, 0, 0, Arredonda_Moeda(dValor), sHistorico, 0, iStatus, iTipoLiberacao, lNumIntDocLiberacao, lNumIntDocOCR, iTipoCliForn, lCliForn, iEstorno, lNumIntDocEstorno, Date, CDbl(Time), gsUsuario, iIndireta)
        If lErro <> AD_SQL_SUCESSO Then gError 198154
           
    End If
            
    lNumInDocInfo = lNumIntDoc
            
    TRVVou_Gera_Comis_Insere_Info = SUCESSO

    Exit Function

Erro_TRVVou_Gera_Comis_Insere_Info:

    TRVVou_Gera_Comis_Insere_Info = gErr

    Select Case gErr

        Case 198153
            
        Case 198154
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERT_TRVVOUCHERINFO", gErr)
            
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 198155)

    End Select

    Exit Function

End Function

Private Function TRVVou_Gera_Comis_Obtem_Status(ByVal lComando1 As Long, ByVal lComando2 As Long, ByVal objVou As ClassTRVVouchers, iStatus As Integer, iTipoLiberacao As Integer, lNumIntDocLiberacao As Long, iStatusCMCC As Integer, iTipoLiberacaoCMCC As Integer, lNumIntDocLiberacaoCMCC As Long, iStatusOVER As Integer, iTipoLiberacaoOVER As Integer, lNumIntDocLiberacaoOVER As Long) As Long
'Gera a comissão externa relacionada ao voucher

Dim lErro As Long
Dim lNumIntDocBaixa As Long
Dim sItem As String

On Error GoTo Erro_TRVVou_Gera_Comis_Obtem_Status

    iStatusCMCC = iStatus
    iTipoLiberacaoCMCC = iTipoLiberacao
    lNumIntDocLiberacaoCMCC = lNumIntDocLiberacao

    'Se era para gerar a comissão bloqueada e o voucher já tiver faturado, verifica se o título já está baixado, se sim muda
    'o status para liberado e guarda as informações de quem o liberou
    If objVou.lNumIntDocDestino <> 0 And objVou.iTipoDocDestino = TRV_TIPO_DOC_DESTINO_TITREC Then
        
        'Le o Voucher
        lErro = Comando_Executar(lComando1, "SELECT B.NumIntDoc FROM ParcelasRecTodas AS P, BaixasParcRec AS B WHERE P.NumIntTiTulo = ? AND P.NumIntDoc = B.NumIntParcela AND B.Status <> ? ", _
                    lNumIntDocBaixa, objVou.lNumIntDocDestino, STATUS_EXCLUIDO)
        If lErro <> AD_SQL_SUCESSO Then gError 198150
    
        'Busca Primeiro
        lErro = Comando_BuscarPrimeiro(lComando1)
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 198151
    
        If lErro = AD_SQL_SUCESSO Then
            iStatus = TRV_VOU_INFO_STATUS_LIBERADO
            iTipoLiberacao = TRV_TIPO_LIBERACAO_COMISSAO_BAIXA
            lNumIntDocLiberacao = lNumIntDocBaixa
        End If
        
        iStatusCMCC = TRV_VOU_INFO_STATUS_LIBERADO
        iTipoLiberacaoCMCC = TRV_TIPO_LIBERACAO_COMISSAO_FAT
        lNumIntDocLiberacaoCMCC = objVou.lNumIntDocDestino
        
    End If
    
    iStatusOVER = iStatus
    iTipoLiberacaoOVER = iTipoLiberacao
    lNumIntDocLiberacaoOVER = lNumIntDocLiberacao

    sItem = String(255, 0)

    'Procura na agência
    'Verifica o tipo de tratamento (Se o pagamento é na baixa ou na emissão)
    lErro = Comando_Executar(lComando2, "SELECT Item FROM FilialFornecedorCategorias WHERE Fornecedor = ? AND Filial = ? AND Categoria = ? ", sItem, objVou.lClienteVou, FILIAL_MATRIZ, "OVER")
    If lErro <> AD_SQL_SUCESSO Then gError 198117
    
    'Busca a primeira
    lErro = Comando_BuscarProximo(lComando2)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 198118
    
    'Se não encontrou o tipo de tratamento então é porque é na baixa
    If lErro = AD_SQL_SUCESSO Then
        'Se não for na baixa libera o over para pagamento
        If InStr(1, UCase(sItem), "BAIXA") = 0 Then
            iStatusOVER = TRV_VOU_INFO_STATUS_LIBERADO
            iTipoLiberacaoOVER = 0
            lNumIntDocLiberacaoOVER = 0
        End If
    End If
    
    sItem = String(255, 0)

    'Procura no emissor
    'Verifica o tipo de tratamento (Se o pagamento é na baixa ou na emissão)
    lErro = Comando_Executar(lComando2, "SELECT Item FROM FilialFornecedorCategorias WHERE Fornecedor = ? AND Filial = ? AND Categoria = ? ", sItem, objVou.lEmissor, FILIAL_MATRIZ, "OVER")
    If lErro <> AD_SQL_SUCESSO Then gError 198117
    
    'Busca a primeira
    lErro = Comando_BuscarProximo(lComando2)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 198118
    
    'Se não encontrou o tipo de tratamento então é porque é na baixa
    If lErro = AD_SQL_SUCESSO Then
        'Se não for na baixa libera o over para pagamento
        If InStr(1, UCase(sItem), "BAIXA") = 0 Then
            iStatusOVER = TRV_VOU_INFO_STATUS_LIBERADO
            iTipoLiberacaoOVER = 0
            lNumIntDocLiberacaoOVER = 0
        End If
    End If
    
    If objVou.iCartao = MARCADO Then
        iStatusOVER = TRV_VOU_INFO_STATUS_LIBERADO
        iTipoLiberacaoOVER = 0
        lNumIntDocLiberacaoOVER = 0
    End If
    
    TRVVou_Gera_Comis_Obtem_Status = SUCESSO

    Exit Function

Erro_TRVVou_Gera_Comis_Obtem_Status:

    TRVVou_Gera_Comis_Obtem_Status = gErr

    Select Case gErr

        Case 198150, 198151
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_BAIXASPARCREC", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 198152)

    End Select

    Exit Function

End Function

Public Function TRVVou_Le_Dados_Comis_Cliente(ByVal objVou As ClassTRVVouchers) As Long

Dim lErro As Long
Dim alComando(0 To 14) As Long
Dim iIndice As Integer

On Error GoTo Erro_TRVVou_Le_Dados_Comis_Cliente

    If giVersaoTRV >= TRV_VERSAO_COMISSIONAMENTO Then

        'Abertura de Comando
        For iIndice = LBound(alComando) To UBound(alComando)
            alComando(iIndice) = Comando_Abrir()
            If alComando(iIndice) = 0 Then gError 198190
        Next
        
        lErro = TRVVou_Gera_Comis_Insere_Novo(alComando(0), alComando(1), alComando(2), alComando(3), alComando(4), alComando(5), alComando(6), alComando(7), alComando(8), alComando(9), alComando(10), alComando(11), alComando(12), alComando(13), alComando(14), objVou, True)
        If lErro <> SUCESSO Then gError 198191
        
        'Fecha Comando
        For iIndice = LBound(alComando) To UBound(alComando)
            Call Comando_Fechar(alComando(iIndice))
        Next
    
    End If
    
    TRVVou_Le_Dados_Comis_Cliente = SUCESSO

    Exit Function

Erro_TRVVou_Le_Dados_Comis_Cliente:

    TRVVou_Le_Dados_Comis_Cliente = gErr

    Select Case gErr

        Case 198190
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)
            
        Case 198191

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 198192)

    End Select
    
    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Public Function TRVVoucher_Exclui_Comissao(ByVal objVou As ClassTRVVouchers) As Long

Dim lErro As Long
Dim alComando(0 To 1) As Long
Dim iIndice As Integer
Dim lNumIntDoc As Long
Dim lTransacao As Long

On Error GoTo Erro_TRVVoucher_Exclui_Comissao

    'Abertura de transação
    lTransacao = Transacao_Abrir()
    If lTransacao = 0 Then gError 198203
   
    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 198204
    Next
    
    'Le a tabelaTRVTiposOcorrencia
    lErro = Comando_ExecutarPos(alComando(0), "SELECT NumIntDoc FROM TRVVoucherInfo WHERE TipVou  = ? AND Serie  = ? AND NumVou = ? ", _
                0, lNumIntDoc, objVou.sTipVou, objVou.sSerie, objVou.lNumVou)
    If lErro <> AD_SQL_SUCESSO Then gError 198205

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(0))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 198206

    Do While lErro <> AD_SQL_SEM_DADOS

        'Trava registro contra alterações/Leituras
        lErro = Comando_LockExclusive(alComando(0))
        If lErro <> SUCESSO Then gError 198207
    
        lErro = Comando_ExecutarPos(alComando(1), "DELETE FROM TRVVoucherInfo", alComando(0))
        If lErro <> AD_SQL_SUCESSO Then gError 198208
        
        'Busca Próximo
        lErro = Comando_BuscarProximo(alComando(0))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 198209
        
    Loop
    
    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next
    
    'Confirma a transação
    lErro = Transacao_Commit()
    If lErro <> AD_SQL_SUCESSO Then gError 198210
    
    TRVVoucher_Exclui_Comissao = SUCESSO

    Exit Function

Erro_TRVVoucher_Exclui_Comissao:

    TRVVoucher_Exclui_Comissao = gErr

    Select Case gErr

        Case 198203
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_TRANSACAO", gErr)

        Case 198204
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)
            
        Case 198205, 198206, 198209
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVVOUCHERINFO", gErr)
            
        Case 198207
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVVOUCHERINFO", gErr)
        
        Case 198208
            Call Rotina_Erro(vbOKOnly, "ERRO_DELETE_TRVVOUCHERINFO", gErr)
        
        Case 198210
            Call Rotina_Erro(vbOKOnly, "ERRO_COMMIT", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 198211)

    End Select
    
    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    'Desfaz Transação
    Call Transacao_Rollback
    
    Exit Function

End Function

Public Function TRVVouComi_Grava(ByVal objVou As ClassTRVVouchers, Optional ByVal bSimulaNovo As Boolean = False, Optional ByVal bSimulaImport As Boolean = False) As Long

Dim lErro As Long
Dim lTransacao As Long
Dim iTipoGravacao As Integer
Dim colVend As New Collection
Dim objVend As Variant

On Error GoTo Erro_TRVVouComi_Grava

    'Abertura de transação
    lTransacao = Transacao_Abrir()
    If lTransacao = 0 Then gError 198212
      
    For Each objVend In objVou.colVendedores
        colVend.Add objVend
    Next
      
    If bSimulaImport Then
    
        'Grava o/a TRVTiposOcorrencia no Banco de Dados
        lErro = TRVVouchers_Grava(objVou, , , TRV_TIPO_GRAVACAO_VOU_IMPORTACAO, False)
        If lErro <> SUCESSO Then gError 198213
    
        'Grava o/a TRVTiposOcorrencia no Banco de Dados
        lErro = TRVVouchers_Grava(objVou, , , TRV_TIPO_GRAVACAO_VOU_EXTRACAO, False)
        If lErro <> SUCESSO Then gError 198213

        Set objVou.colVendedores = colVend
    
    End If
    
    If bSimulaNovo Then Set objVou.colVendedores = New Collection
   
    'Grava o/a TRVTiposOcorrencia no Banco de Dados
    lErro = TRVVouchers_Grava(objVou, , bSimulaNovo, TRV_TIPO_GRAVACAO_VOU_TELA)
    If lErro <> SUCESSO Then gError 198213
     
    lErro = TRVVouchers_Ajusta_Valida_Dif_Comis(objVou)
    If lErro <> SUCESSO Then gError 198213
    
    'Confirma a transação
    lErro = Transacao_Commit()
    If lErro <> AD_SQL_SUCESSO Then gError 198214
    
    TRVVouComi_Grava = SUCESSO

    Exit Function

Erro_TRVVouComi_Grava:

    TRVVouComi_Grava = gErr

    Select Case gErr

        Case 198212
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_TRANSACAO", gErr)

        Case 198213

        Case 198214
            Call Rotina_Erro(vbOKOnly, "ERRO_COMMIT", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 198215)

    End Select
    
    'Desfaz Transação
    Call Transacao_Rollback

    Exit Function

End Function

Private Function TRVVou_Gera_Comis_Insere_Novo(ByVal lComando1 As Long, ByVal lComando2 As Long, ByVal lComando3 As Long, ByVal lComando4 As Long, ByVal lComando5 As Long, ByVal lComando6 As Long, ByVal lComando7 As Long, ByVal lComando8 As Long, ByVal lComando9 As Long, ByVal lComando10 As Long, ByVal lComando11 As Long, ByVal lComando12 As Long, ByVal lComando13 As Long, ByVal lComando14 As Long, ByVal lComando15 As Long, ByVal objVou As ClassTRVVouchers, Optional ByVal bSoLe As Boolean = False) As Long
'Gera a comissão externa relacionada ao voucher

Dim lErro As Long
Dim lCodDestino As Long
Dim sProdutoFormatado As String
Dim iProdutoPreenchido As Integer
Dim lCliCMR As Long
Dim dPercCMR As Double
Dim lCliCMC As Long
Dim dPercCMC As Double
Dim dPercAgencia As Double
Dim dPercOVER As Double
Dim lNumVou As Long
Dim lNumIntDocCliEmi As Long
Dim dValorAux As Double, lEmissorCI As Long, dPercCI As Double
Dim objVouEmiCI As ClassTRVVouEmiCI, sProdAux As String
Dim bSem As Boolean, bProdSemOVER As Boolean
Dim colEmiCI As New Collection, bComisBEST As Boolean, iAux As Integer
Dim dPercFatorDevCMCC As Double, dPercFatorDevCMCCPadrao As Double, sConteudo As String

On Error GoTo Erro_TRVVou_Gera_Comis_Insere_Novo

    Set objVou.colEmiCI = New Collection

    bSem = False
'    If InStr(1, UCase(objVou.sProduto), "BEST") <> 0 And objVou.dtData >= #1/1/2011# Then
'        bComisBEST = True
'    Else
        bComisBEST = False
'    End If

    lErro = CF("TRVConfig_Le", TRVCONFIG_PERC_FATOR_DEV_CMCC, EMPRESA_TODA, sConteudo)
    If lErro <> SUCESSO Then gError 192318
    
    dPercFatorDevCMCCPadrao = StrParaDbl(sConteudo)

    'Le as informações padrões, depois acerta as exceções
    'Le o representante e o correntista e o percentual de comissao
    lErro = Comando_Executar(lComando1, "SELECT Representante, ComissaoRep, Correntista, ComissaoCorr, ComissaoAg, PercFatorDevCMCC FROM FiliaisClientesTRV WHERE CodCliente = ? ", _
                lCliCMR, dPercCMR, lCliCMC, dPercCMC, dPercAgencia, dPercFatorDevCMCC, objVou.lClienteVou)
    If lErro <> AD_SQL_SUCESSO Then gError 198128

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(lComando1)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 198129
    
    If lErro = AD_SQL_SUCESSO Then
        objVou.lRepresentante = lCliCMR
        objVou.dComissaoRep = dPercCMR
        objVou.lCorrentista = lCliCMC
        objVou.dComissaoCorr = dPercCMC
        objVou.dComissaoAg = dPercAgencia
    End If
    
'    'Se o voucher é de cartão e o correntista é a agência transfere a comissão para agência
'    'Gambiarra para solução FITTA
'    If objVou.iCartao = MARCADO Then
'        If objVou.dComissaoAg = 0 And objVou.dComissaoCorr <> 0 And objVou.lCorrentista = objVou.lClienteVou Then
'            objVou.dComissaoAg = objVou.dComissaoCorr
'            objVou.dComissaoCorr = 0
'            objVou.lCorrentista = 0
'        End If
'    End If
'    'FIM
    
    lErro = CF("Produto_Formata", objVou.sProduto, sProdutoFormatado, iProdutoPreenchido)
    If lErro <> SUCESSO Then gError 198130
    
    'Exceção de Representante por produto
    'Le o representante e o percentual de comissao
    lErro = Comando_Executar(lComando2, "SELECT Representante, PercComis FROM TRVClienteRepProd WHERE Cliente = ? AND Produto = ? ", _
                lCliCMR, dPercCMR, objVou.lClienteVou, sProdutoFormatado)
    If lErro <> AD_SQL_SUCESSO Then gError 198131

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(lComando2)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 198132
    
    If lErro = AD_SQL_SUCESSO Then
        objVou.lRepresentante = lCliCMR
        objVou.dComissaoRep = dPercCMR
    End If
    
    'Exceção de Correntista por produto
    'Le o correntista e o percentual de comissao
    lErro = Comando_Executar(lComando3, "SELECT Correntista, PercComis FROM TRVClienteCorProd WHERE Cliente = ? AND Produto = ? ", _
                lCliCMC, dPercCMC, objVou.lClienteVou, sProdutoFormatado)
    If lErro <> AD_SQL_SUCESSO Then gError 198133

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(lComando3)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 198134
    
    If lErro = AD_SQL_SUCESSO Then
        objVou.lCorrentista = lCliCMC
        objVou.dComissaoCorr = dPercCMC
    End If

    'Se não for um produto BEST
    If Not bComisBEST Then
        
        'Le o destino do voucher e pega o valor do campo no corporator
        lErro = TRVVou_Gera_Comis_Obtem_Destino(lComando4, lComando5, objVou, lCodDestino)
        If lErro <> SUCESSO Then gError 198135
        
        'Percentual da agência exceção nível 1
        'Le o percentual de comissão da agência no acordo
        lErro = Comando_Executar(lComando6, "SELECT C.PercComissao FROM TRVExcComissaoCli AS C, FiliaisClientesTrv AS F WHERE C.Cliente = F.EmpresaPai AND F.CodCliente = ? AND C.Produto = ? ", _
                    dPercAgencia, objVou.lClienteVou, sProdutoFormatado)
        If lErro <> AD_SQL_SUCESSO Then gError 198136
    
        'Busca Primeiro
        lErro = Comando_BuscarPrimeiro(lComando6)
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 198137
        
        'Se existir acordo o percentual de comissão da agência vem dele
        If lErro = AD_SQL_SUCESSO Then
            objVou.dComissaoAg = dPercAgencia
        End If
    
        'Percentual da agência exceção nível 2
        'Le a tabela de acordos por produto\destino
        lErro = Comando_Executar(lComando7, "SELECT C.PercComissao FROM TRVAcordoComissao AS C, TRVAcordos AS A, FiliaisClientesTrv AS F WHERE C.NumIntAcordo = A.NumIntDoc AND A.Cliente = F.EmpresaPai AND F.CodCliente = ? AND A.FilialCliente = ? AND (A.ValidadeDe <= ? OR A.ValidadeDe = ?) AND (A.ValidadeAte >= ? OR A.ValidadeAte = ?) AND C.Produto = ? AND Destino = ? ", _
                    dPercAgencia, objVou.lClienteVou, FILIAL_MATRIZ, objVou.dtData, DATA_NULA, objVou.dtData, DATA_NULA, sProdutoFormatado, lCodDestino)
        If lErro <> AD_SQL_SUCESSO Then gError 198138
    
        'Busca Primeiro
        lErro = Comando_BuscarPrimeiro(lComando7)
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 198139
        
        'Se tem tarifa diferenciada não tem comissão para agência
        If lErro = AD_SQL_SUCESSO Then
            objVou.dComissaoAg = dPercAgencia
        End If
    
        'Se tem emissor
        If objVou.lEmissor <> 0 Then
        
            sProdAux = String(STRING_PRODUTO, 0)
        
            'Lê a categoria do produto para ver se ele permite OVER
            lErro = Comando_Executar(lComando15, "SELECT Produto FROM ProdutoCategoria WHERE Produto = ? AND Categoria = ? AND Item = ?", _
                        sProdAux, sProdutoFormatado, "OVER", "Não Gerar")
            If lErro <> AD_SQL_SUCESSO Then gError 198133
        
            'Busca Primeiro
            lErro = Comando_BuscarPrimeiro(lComando15)
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 198134
            
            If lErro = AD_SQL_SUCESSO Then
                bProdSemOVER = True
            Else
                bProdSemOVER = False
            End If
        
            If bProdSemOVER Then
                objVou.dComissaoEmissor = 0
                Set objVou.colEmiCI = New Collection
            Else
          
                'Le o Emissor e sua comissão
                lErro = Comando_Executar(lComando8, "SELECT NumIntDoc, PercComissao FROM TRVCliEmissores WHERE Cliente = ? AND FornEmissor = ? ", _
                             lNumIntDocCliEmi, dPercOVER, objVou.lClienteVou, objVou.lEmissor)
                If lErro <> AD_SQL_SUCESSO Then gError 198140
            
                'Busca Primeiro
                lErro = Comando_BuscarPrimeiro(lComando8)
                If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 198141
            
                If lErro <> AD_SQL_SUCESSO Then 'gError 198142 'Esse emissor não está associado a esse cliente
                    objVou.dComissaoEmissor = 0 'Aceita com comissão zero, depois trocará o CliVou (Troca de cliente, se não for o erro é do Sisweb)
                    Set objVou.colEmiCI = New Collection
                Else
                    
                    objVou.dComissaoEmissor = dPercOVER
                    
                    'Over exceção nível 1
                    'Le as exceções
                    lErro = Comando_Executar(lComando9, "SELECT PercComissao FROM TRVCliEmissoresExc WHERE NumIntDocCliEmi = ? AND Produto = ? ", _
                                 dPercOVER, lNumIntDocCliEmi, sProdutoFormatado)
                    If lErro <> AD_SQL_SUCESSO Then gError 198143
                
                    'Busca Primeiro
                    lErro = Comando_BuscarPrimeiro(lComando9)
                    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 198144
                        
                    If lErro = AD_SQL_SUCESSO Then
                        objVou.dComissaoEmissor = dPercOVER
                    End If
                    
                    If objVou.dComissaoEmissor > 0 Then
                    
                        'Le o Emissor e sua comissão
                        lErro = Comando_Executar(lComando12, "SELECT FornEmissor, PercCI FROM TRVCliEmissores WHERE Cliente = ? AND PercCI > ?", _
                                     lEmissorCI, dPercCI, objVou.lClienteVou, 0)
                        If lErro <> AD_SQL_SUCESSO Then gError 198140
                    
                        'Busca Primeiro
                        lErro = Comando_BuscarPrimeiro(lComando12)
                        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 198141
                        
                        Do While lErro <> AD_SQL_SEM_DADOS
                        
                            Set objVouEmiCI = New ClassTRVVouEmiCI
                        
                            objVouEmiCI.dPercCI = dPercCI
                            objVouEmiCI.lFornEmissor = lEmissorCI
                        
                            colEmiCI.Add objVouEmiCI
                            
                            'Não dá C.I se o próprio emissor a receber
                            If objVou.lEmissor = lEmissorCI Then bSem = True
                        
                            lErro = Comando_BuscarProximo(lComando12)
                            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 198141
                        
                        Loop
                    
                    End If
                    
                    If Not bSem Then Set objVou.colEmiCI = colEmiCI
                    
                End If
                
            End If
    
        End If
                        
    Else
        'Exceção para os produtos BEST
        '[09:51:25] Wagner: Data de emissão maior ou igual a 01/01/2011 e codigo do produto com a palavra "BEST" a comissão da agência, tanto CMA quanto CMCC fica em 15% ?
        '[09:54:08] TRV - Daniel: exato...
        '[09:54:28] TRV - Daniel: porém para este produto não pago, CMC, CMR ou over...
        '[09:54:37] TRV - Daniel: pq o total é 15%..
        '[09:55:16] Wagner: OK, então vou colocar para ignorar os % dessas comissões também
        
        'Zera a comissão indireta
        Set objVou.colEmiCI = New Collection
        
        'Verifica se é uma venda interna ou pela internet, ou seja, sem agência
        lErro = Comando_Executar(lComando4, "SELECT Filial FROM FilialClienteCategorias WHERE Categoria = ? AND Cliente = ? AND Item = ?", _
        iAux, "Venda", objVou.lClienteVou, "Direta")
        If lErro <> AD_SQL_SUCESSO Then gError 200400
        
        'Busca Primeiro
        lErro = Comando_BuscarPrimeiro(lComando4)
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200401
        
        If lErro = AD_SQL_SUCESSO Then
            objVou.dComissaoAg = 0
        Else
            objVou.dComissaoAg = 0.15
        End If
        
        'objVou.lRepresentante = 0
        objVou.dComissaoRep = 0
        'objVou.lCorrentista = 0
        objVou.dComissaoCorr = 0
        objVou.dComissaoEmissor = 0
    
        'Exceção para os produtos BEST
    End If
    
    objVou.lClienteComissao = objVou.lClienteVou
    
    'Orçamento de 4hs para forçar o redirecionamento da comissão de cartão dos clientes
    '1131483, 1131576, 1131577, 1131578, 1131482 e 1131484 para o cliente 1117140
    If objVou.lClienteComissao = 1131483 Or objVou.lClienteComissao = 1131576 Or objVou.lClienteComissao = 1131577 _
        Or objVou.lClienteComissao = 1131578 Or objVou.lClienteComissao = 1131482 Or objVou.lClienteComissao = 1131484 Then
        objVou.lClienteComissao = 1117140
    End If
    
    'Se o voucher é de cartão e o correntista é a agência transfere a comissão para agência
    'Gambiarra para solução FITTA
    If objVou.iCartao = MARCADO Then
        If objVou.dComissaoAg = 0 And objVou.dComissaoCorr <> 0 And objVou.lCorrentista = objVou.lClienteVou Then
            objVou.dComissaoAg = objVou.dComissaoCorr
            objVou.dComissaoCorr = 0
            objVou.lCorrentista = 0
        End If
    End If
    'FIM
            
    If objVou.iCartao = MARCADO Then
    
        If dPercFatorDevCMCC = 0 Then dPercFatorDevCMCC = dPercFatorDevCMCCPadrao
       
        If objVou.dValorBaseComis > DELTA_VALORMONETARIO Then
            dValorAux = (objVou.dValorBaseComis * objVou.dComissaoAg) + ((objVou.dValorBruto - objVou.dValorBaseComis) * dPercFatorDevCMCC)
            objVou.dComissaoAg = Arredonda_Moeda(dValorAux / objVou.dValorBaseComis, 6)
        End If
    End If
    
    If objVou.lNumBoleto <> 0 Then
        'Se já foi pago por boleto transfere a comissão da agência para o corretor
        objVou.dComissaoCorr = objVou.dComissaoAg
        objVou.lCorrentista = objVou.lClienteVou
        objVou.dComissaoAg = 0
    End If
    
    If Not bSoLe Then
    
        'Le o voucher para o update
        lErro = Comando_ExecutarPos(lComando10, "SELECT NumVou FROM TRVVouchers WHERE NumVou = ? AND TipoDoc = ? AND  Serie = ? AND TipVou= ?  ", 0, _
                     lNumVou, objVou.lNumVou, objVou.sTipoDoc, objVou.sSerie, objVou.sTipVou)
        If lErro <> AD_SQL_SUCESSO Then gError 198145
    
        'Busca Primeiro
        lErro = Comando_BuscarPrimeiro(lComando10)
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 198146
        
        'Trava registro contra alterações/Leituras
        lErro = Comando_LockExclusive(lComando10)
        If lErro <> SUCESSO Then gError 198147
        
        'Marca as informações pertinentes a comissão no voucher, a partir daí esses
        'serão os valores a serem considerados mesmo se houverem alterações no cadastro de clientes
        '(informações históricas - qual era o representante na emissão do voucher, qual o % de comissão, etc ...)
        lErro = Comando_ExecutarPos(lComando11, "UPDATE TRVVouchers SET Representante = ?, ComissaoRep = ?, Correntista = ?, ComissaoCorr = ?, ComissaoAg = ?, ComissaoEmissor = ?, ClienteComissao = ? ", _
                    lComando10, objVou.lRepresentante, objVou.dComissaoRep, objVou.lCorrentista, objVou.dComissaoCorr, objVou.dComissaoAg, objVou.dComissaoEmissor, objVou.lClienteComissao)
        If lErro <> AD_SQL_SUCESSO Then gError 198148
        
        lErro = Comando_Executar(lComando13, "DELETE TRVVouEmiCI WHERE NumVou = ? AND Serie = ? AND TipVou = ?", objVou.lNumVou, objVou.sSerie, objVou.sTipVou)
        If lErro <> AD_SQL_SUCESSO Then gError 198148
        
        For Each objVouEmiCI In objVou.colEmiCI
            lErro = Comando_Executar(lComando14, "INSERT INTO TRVVouEmiCI (NumVou, Serie, TipVou, FornEmissor, PercCI) VALUES (?,?,?,?,?) ", objVou.lNumVou, objVou.sSerie, objVou.sTipVou, objVouEmiCI.lFornEmissor, objVouEmiCI.dPercCI)
            If lErro <> AD_SQL_SUCESSO Then gError 198148
        Next
        
    End If
 
    TRVVou_Gera_Comis_Insere_Novo = SUCESSO

    Exit Function

Erro_TRVVou_Gera_Comis_Insere_Novo:

    TRVVou_Gera_Comis_Insere_Novo = gErr

    Select Case gErr

        Case 198128, 198129
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_FILIAISCLIENTESTRV", gErr)
        
        Case 198130, 198135
        
        Case 198131, 198132
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVCLIENTEREPPROD", gErr)

        Case 198133, 198134
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVCLIENTECORPROD", gErr)
            
        Case 198136 To 198139
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVACORDOS", gErr)

        Case 198140, 198141
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVCLIEMISSORES", gErr)
            
        Case 198142
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVCLIEMISSORES_NAO_CADASTRADO", gErr, objVou.lEmissor, objVou.lClienteVou)
        
        Case 198143, 198144
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVCLIEMISSORESEXC", gErr)
            
        Case 198145, 198146
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVVOUCHERS", gErr)
            
        Case 198147
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVVOUCHERS", gErr)
            
        Case 198148
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVVOUCHERS", gErr)
            
        Case 200400, 200401
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_FILIALCLIENTECATEGORIAS", gErr)
            
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 198149)

    End Select
    
    Call Rotina_Erro(vbOKOnly, "ERRO_COMISSAO_VOU", gErr, objVou.lNumVou, objVou.sSerie, objVou.sTipVou)

    Exit Function

End Function

Private Function TRVVou_Gera_Comis_Obtem_Destino(ByVal lComando1 As Long, ByVal lComando2 As Long, ByVal objVou As ClassTRVVouchers, lCodDestino As Long) As Long
'Gera a comissão externa relacionada ao voucher

Dim lErro As Long
Dim sDestino As String

On Error GoTo Erro_TRVVou_Gera_Comis_Obtem_Destino
       
    'Le o código do destino
    lErro = Comando_Executar(lComando2, "SELECT CodValor FROM CamposGenericosValores WHERE CodCampo = ? AND Valor = ? ", _
                lCodDestino, CAMPOSGENERICOS_DESTINO_VIAGEM, Trim(left(objVou.sDestino, 9)))
    If lErro <> AD_SQL_SUCESSO Then gError 198124

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(lComando2)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 198125
    
    If lErro <> SUCESSO Then gError 198126 'Destino não cadastrado
 
    TRVVou_Gera_Comis_Obtem_Destino = SUCESSO

    Exit Function

Erro_TRVVou_Gera_Comis_Obtem_Destino:

    TRVVou_Gera_Comis_Obtem_Destino = gErr

    Select Case gErr

        Case 198121, 198122
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVVOUCHERINFOSIGAV", gErr)

        Case 198123
            Call Rotina_Erro(vbOKOnly, "ERRO_VOUCHER_SEM_DADOS_SIGAV", gErr)
            
        Case 198124, 198125
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_CAMPOSGENERICOSVALORES", gErr)
            
        Case 198126
            Call Rotina_Erro(vbOKOnly, "ERRO_TRV_DESTINO_NAO_CADASTRADO", gErr, Trim(left(objVou.sDestino, 9)), objVou.sTipVou, objVou.sSerie, objVou.lNumVou)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 198127)

    End Select

    Exit Function

End Function

Private Function TRVVou_Gera_Comis_Trata_Estorno(ByVal lComando1 As Long, ByVal lComando2 As Long, ByVal lComando3 As Long, ByVal lComando4 As Long, ByVal lComando5 As Long, ByVal objVou As ClassTRVVouchers, ByVal dtData As Date, ByVal sHistorico As String, ByVal sTipoDocEstornado As String, lContador As Long, Optional ByVal iRelancarOutroTipo As Integer = DESMARCADO, Optional ByVal sTipoRelancamento As String = "", Optional ByVal lNumIntDocOCR As Long = 0, Optional ByVal dFatorEstorno As Double = 1, Optional ByVal dFatorRelanc As Double = 1, Optional ByVal lNovoCliForn As Long = 0, Optional ByVal iStatusRelanc As Integer = -1, Optional ByVal iTipoLiberacaoRelanc As Integer, Optional ByVal lNumIntDocLiberacaoRelanc As Long) As Long
'Gera a comissão externa relacionada ao voucher

Dim lErro As Long
Dim lNumIntDoc As Long
Dim dValorEstornar As Double
Dim dValorEstornarRelanc As Double
Dim dValorEstornarAux As Double
Dim lCliForn As Long
Dim iStatus As Integer
Dim iTipoCliForn As Integer
Dim iTipoLiberacao As Integer
Dim lNumIntDocLiberacao As Long
Dim lNumIntDocVouInfo As Long
Dim lNumIntDocEstorno As Long
Dim lSeq As Long
Dim objVouInfo As ClassTRVVoucherInfoN
Dim objVouInfoAux As ClassTRVVoucherInfoN
Dim colVouInfoItens As Collection
Dim colcolVouInfoItens As New Collection
Dim colVouInfoGrupado As New Collection
Dim bAchou As Boolean
Dim iIndice As Integer, iIndireta As Integer
Dim lNovoCliFornAux As Long

On Error GoTo Erro_TRVVou_Gera_Comis_Trata_Estorno

    'Le a TRVVoucherInfo para pegar o saldo do que foi lançado de comissão para estornar e relançar se necessário
    'Só le o que não é um documento estornado ou um documento estornador e gera os estornos
    lErro = Comando_ExecutarPos(lComando1, "SELECT NumIntDoc, Valor, TipoCliForn, CliForn,Status,TipoLiberacao,NumIntDocLiberacao, Indireta FROM TRVVoucherInfo WHERE TipoDoc = ? AND TipVou = ? AND Serie = ? AND NumVou = ? ", 0, _
                 lNumIntDocVouInfo, dValorEstornarAux, iTipoCliForn, lCliForn, iStatus, iTipoLiberacao, lNumIntDocLiberacao, iIndireta, sTipoDocEstornado, objVou.sTipVou, objVou.sSerie, objVou.lNumVou)
    If lErro <> AD_SQL_SUCESSO Then gError 198100

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(lComando1)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 198101

    Do While lErro <> AD_SQL_SEM_DADOS
    
        lErro = Comando_LockExclusive(lComando1)
        If lErro <> AD_SQL_SUCESSO Then gError 198102
        
        Set objVouInfo = New ClassTRVVoucherInfoN
        
        objVouInfo.lNumIntDoc = lNumIntDocVouInfo
        objVouInfo.dValor = dValorEstornarAux
        objVouInfo.iTipoCliForn = iTipoCliForn
        objVouInfo.lCliForn = lCliForn
        objVouInfo.iIndireta = iIndireta
        
        If iStatusRelanc <> -1 Then
            objVouInfo.iStatus = iStatusRelanc
            objVouInfo.iTipoLiberacao = iTipoLiberacaoRelanc
            objVouInfo.lNumIntDocLiberacao = lNumIntDocLiberacaoRelanc
        Else
            objVouInfo.iStatus = iStatus
            objVouInfo.iTipoLiberacao = iTipoLiberacao
            objVouInfo.lNumIntDocLiberacao = lNumIntDocLiberacao
        End If
        
        bAchou = False
        iIndice = 0
        For Each objVouInfoAux In colVouInfoGrupado
            iIndice = iIndice + 1
            If objVouInfo.iTipoCliForn = objVouInfoAux.iTipoCliForn And _
                        objVouInfo.lCliForn = objVouInfoAux.lCliForn And _
                        objVouInfo.iStatus = objVouInfoAux.iStatus And _
                        objVouInfo.iTipoLiberacao = objVouInfoAux.iTipoLiberacao And _
                        objVouInfo.iIndireta = objVouInfoAux.iIndireta And _
                        objVouInfo.lNumIntDocLiberacao = objVouInfoAux.lNumIntDocLiberacao Then
                bAchou = True
                objVouInfoAux.dValor = objVouInfoAux.dValor + objVouInfo.dValor
                Set colVouInfoItens = colcolVouInfoItens.Item(iIndice)
                colVouInfoItens.Add objVouInfo
                Exit For
            End If
        Next
        If Not bAchou Then
            colVouInfoGrupado.Add objVouInfo
            Set colVouInfoItens = New Collection
            colcolVouInfoItens.Add colVouInfoItens
            colVouInfoItens.Add objVouInfo
        End If
        
        'Busca Próximo
        lErro = Comando_BuscarProximo(lComando1)
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 198106
    
    Loop

    iIndice = 0
    For Each objVouInfo In colVouInfoGrupado
    
        iIndice = iIndice + 1
    
        dValorEstornar = objVouInfo.dValor
        dValorEstornarRelanc = objVouInfo.dValor
        If lNovoCliForn = 0 Or objVouInfo.iIndireta = MARCADO Then
            lNovoCliFornAux = objVouInfo.lCliForn
        Else
            lNovoCliFornAux = lNovoCliForn
        End If
        If sTipoRelancamento = "" Then
            sTipoRelancamento = sTipoDocEstornado
        End If
       
        dValorEstornar = dValorEstornar * dFatorEstorno
                
        'Insere o estorno
        If dFatorEstorno = 1 Then
            lErro = TRVVou_Gera_Comis_Insere_Info(lComando2, lComando3, lComando4, objVou, sTipoDocEstornado, dtData, -dValorEstornar, sHistorico, objVouInfo.iStatus, objVouInfo.iTipoLiberacao, objVouInfo.lNumIntDocLiberacao, lNumIntDocOCR, objVouInfo.iTipoCliForn, objVouInfo.lCliForn, TRV_TIPO_ESTORNO_LANC_ESTORNADOR, 0, lContador, lNumIntDocEstorno, objVouInfo.iIndireta)
        Else
            lErro = TRVVou_Gera_Comis_Insere_Info(lComando2, lComando3, lComando4, objVou, sTipoDocEstornado, dtData, -dValorEstornar, sHistorico, objVouInfo.iStatus, objVouInfo.iTipoLiberacao, objVouInfo.lNumIntDocLiberacao, lNumIntDocOCR, objVouInfo.iTipoCliForn, objVouInfo.lCliForn, TRV_TIPO_ESTORNO_LANC_NORMAL, 0, lContador, , objVouInfo.iIndireta)
            lNumIntDocEstorno = 0
        End If
        If lErro <> AD_SQL_SUCESSO Then gError 198103
                
        If iRelancarOutroTipo = MARCADO Then
        
            dValorEstornarRelanc = dValorEstornarRelanc * dFatorRelanc
        
            'Relança o documento com outro tipo
            lErro = TRVVou_Gera_Comis_Insere_Info(lComando2, lComando3, lComando4, objVou, sTipoRelancamento, dtData, dValorEstornarRelanc, sHistorico, objVouInfo.iStatus, objVouInfo.iTipoLiberacao, objVouInfo.lNumIntDocLiberacao, lNumIntDocOCR, objVouInfo.iTipoCliForn, lNovoCliFornAux, TRV_TIPO_ESTORNO_LANC_RELANCAMENTO, 0, lContador, , objVouInfo.iIndireta)
            If lErro <> AD_SQL_SUCESSO Then gError 198104
    
        End If
        
        Set colVouInfoItens = colcolVouInfoItens.Item(iIndice)
        
        If lNumIntDocEstorno <> 0 Then
        
            For Each objVouInfoAux In colVouInfoItens
                'Marca que o documento foi estornado e quem estornou
                lErro = Comando_Executar(lComando5, "UPDATE TRVVoucherInfo SET Estorno = ?, NumIntDocEstorno = ? WHERE NumIntDoc = ?", TRV_TIPO_ESTORNO_LANC_ESTORNADO, lNumIntDocEstorno, objVouInfoAux.lNumIntDoc)
                If lErro <> AD_SQL_SUCESSO Then gError 198105
            Next
            
        End If
        
    Next
 
    TRVVou_Gera_Comis_Trata_Estorno = SUCESSO

    Exit Function

Erro_TRVVou_Gera_Comis_Trata_Estorno:

    TRVVou_Gera_Comis_Trata_Estorno = gErr

    Select Case gErr
    
        Case 198100, 198101, 198106
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVVOUCHERINFO", gErr)

        Case 198102
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVVOUCHERINFO", gErr)
            
        Case 198103, 198104

        Case 198105
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVVOUCHERINFO", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 198107)

    End Select

    Exit Function

End Function

Private Function TRVVou_Gera_Comis_Trata_Estorno2(ByVal lComando1 As Long, ByVal lComando2 As Long, ByVal lComando3 As Long, ByVal lComando4 As Long, ByVal lComando5 As Long, ByVal objVou As ClassTRVVouchers, ByVal dtData As Date, ByVal sHistorico As String, ByVal lNumIntDocOCR As Long, lContador As Long) As Long
'Gera a comissão externa relacionada ao voucher

Dim lErro As Long
Dim lNumIntDoc As Long
Dim dValorEstornar As Double
Dim sTipoDocEstornado
Dim iStatus As Integer
Dim iTipoLiberacao As Integer
Dim lNumIntDocLiberacao As Long
Dim iTipoCliForn As Integer
Dim lCliForn As Long
Dim lNumIntDocEstornador As Long

On Error GoTo Erro_TRVVou_Gera_Comis_Trata_Estorno2

    sTipoDocEstornado = String(STRING_TRV_VOU_INFO_TIPODOC, 0)

    'Le a TRVVOucherInfo para pegar o saldo do que foi lançado de comissão de cartão para estornar e lançar para agência
    lErro = Comando_ExecutarPos(lComando1, "SELECT NumIntDoc, Valor, TipoDoc, Status, TipoLiberacao, NumIntDocLiberacao, TipoCliForn, CliForn FROM TRVVoucherInfo WHERE TipVou = ? AND Serie = ? AND NumVou = ? AND NumIntDocOCR = ? ", 0, _
                 lNumIntDoc, dValorEstornar, sTipoDocEstornado, iStatus, iTipoLiberacao, lNumIntDocLiberacao, iTipoCliForn, lCliForn, objVou.sTipVou, objVou.sSerie, objVou.lNumVou, lNumIntDocOCR)
    If lErro <> AD_SQL_SUCESSO Then gError 198108

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(lComando1)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 198109

    Do While lErro <> AD_SQL_SEM_DADOS
        
        lErro = Comando_LockExclusive(lComando1)
        If lErro <> AD_SQL_SUCESSO Then gError 198110

        'Relança o documento com outro tipo
        lErro = TRVVou_Gera_Comis_Insere_Info(lComando2, lComando3, lComando4, objVou, sTipoDocEstornado, dtData, -dValorEstornar, sHistorico, iStatus, iTipoLiberacao, lNumIntDocLiberacao, 0, iTipoCliForn, lCliForn, TRV_TIPO_ESTORNO_LANC_ESTORNADOR, lNumIntDoc, lContador, lNumIntDocEstornador)
        If lErro <> AD_SQL_SUCESSO Then gError 198111
        
        'Marca que o documento foi estornado e quem estornou
        lErro = Comando_ExecutarPos(lComando5, "UPDATE TRVVoucherInfo SET Estorno = ?, NumIntDocEstorno = ?", lComando1, TRV_TIPO_ESTORNO_LANC_ESTORNADO, lNumIntDocEstornador)
        If lErro <> AD_SQL_SUCESSO Then gError 198112
        
        'Busca Próximo
        lErro = Comando_BuscarProximo(lComando1)
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 198113
    
    Loop
 
    TRVVou_Gera_Comis_Trata_Estorno2 = SUCESSO

    Exit Function

Erro_TRVVou_Gera_Comis_Trata_Estorno2:

    TRVVou_Gera_Comis_Trata_Estorno2 = gErr

    Select Case gErr

        Case 198108, 198109, 198113
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVVOUCHERINFO", gErr)

        Case 198110
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVVOUCHERINFO", gErr)
            
        Case 198111

        Case 198112
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVVOUCHERINFO", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 198114)

    End Select

    Exit Function

End Function

Public Function TRVVou_Gera_Comis_Lanca_Comis(ByVal lComando1 As Long, ByVal lComando2 As Long, ByVal lComando3 As Long, ByVal lComando4 As Long, ByVal objVou As ClassTRVVouchers, ByVal dValorBrutoBase As Double, ByVal dtData As Date, ByVal sHistorico As String, ByVal iStatus As Integer, ByVal iTipoLiberacao As Integer, ByVal lNumIntDocLiberacao As Long, ByVal iStatusOVER As Integer, ByVal iTipoLiberacaoOVER As Integer, ByVal lNumIntDocLiberacaoOVER As Long, lContador As Long) As Long
'Gera a comissão externa relacionada ao voucher

Dim lErro As Long
Dim dValorCMR As Double
Dim dValorCMC As Double
Dim dValorOVER As Double
Dim dPercCITotal As Double
Dim sItem As String
Dim objVouEmiCI As ClassTRVVouEmiCI

On Error GoTo Erro_TRVVou_Gera_Comis_Lanca_Comis

    'CMR
    'Se tem representante
    If objVou.lRepresentante <> 0 Then
    
        dValorCMR = dValorBrutoBase * objVou.dComissaoRep
        
        lErro = TRVVou_Gera_Comis_Insere_Info(lComando1, lComando2, lComando3, objVou, TRV_TIPODOC_CMR_TEXTO, dtData, dValorCMR, sHistorico, iStatus, iTipoLiberacao, lNumIntDocLiberacao, 0, TRV_CLIENTEINFO_TIPO_CLIENTE, objVou.lRepresentante, TRV_TIPO_ESTORNO_LANC_NORMAL, 0, lContador)
        If lErro <> AD_SQL_SUCESSO Then gError 198115
        
    End If
        
    'CMC
    'Se tem representante
    If objVou.lCorrentista <> 0 Then
            
        dValorCMC = dValorBrutoBase * objVou.dComissaoCorr
            
        lErro = TRVVou_Gera_Comis_Insere_Info(lComando1, lComando2, lComando3, objVou, TRV_TIPODOC_CMC_TEXTO, dtData, dValorCMC, sHistorico, iStatus, iTipoLiberacao, lNumIntDocLiberacao, 0, TRV_CLIENTEINFO_TIPO_CLIENTE, objVou.lCorrentista, TRV_TIPO_ESTORNO_LANC_NORMAL, 0, lContador)
        If lErro <> AD_SQL_SUCESSO Then gError 198116
        
    End If
        
    'OVER (Não tem over quando for dias antecipados)
    If objVou.lEmissor <> 0 And objVou.idiasantc = DESMARCADO Then
    
        dPercCITotal = 0
        For Each objVouEmiCI In objVou.colEmiCI
            dPercCITotal = dPercCITotal + objVouEmiCI.dPercCI
            
            dValorOVER = dValorBrutoBase * (objVou.dComissaoEmissor * objVouEmiCI.dPercCI)
            
            lErro = TRVVou_Gera_Comis_Insere_Info(lComando1, lComando2, lComando3, objVou, TRV_TIPODOC_OVER_TEXTO, dtData, dValorOVER, sHistorico, iStatusOVER, iTipoLiberacaoOVER, lNumIntDocLiberacaoOVER, 0, TRV_CLIENTEINFO_TIPO_FORNECEDOR, objVouEmiCI.lFornEmissor, TRV_TIPO_ESTORNO_LANC_NORMAL, 0, lContador, , MARCADO)
            If lErro <> AD_SQL_SUCESSO Then gError 198119
        Next
    
        dValorOVER = dValorBrutoBase * (objVou.dComissaoEmissor * (1 - dPercCITotal))
        
        lErro = TRVVou_Gera_Comis_Insere_Info(lComando1, lComando2, lComando3, objVou, TRV_TIPODOC_OVER_TEXTO, dtData, dValorOVER, sHistorico, iStatusOVER, iTipoLiberacaoOVER, lNumIntDocLiberacaoOVER, 0, TRV_CLIENTEINFO_TIPO_FORNECEDOR, objVou.lEmissor, TRV_TIPO_ESTORNO_LANC_NORMAL, 0, lContador)
        If lErro <> AD_SQL_SUCESSO Then gError 198119
    
    End If
    
    TRVVou_Gera_Comis_Lanca_Comis = SUCESSO

    Exit Function

Erro_TRVVou_Gera_Comis_Lanca_Comis:

    TRVVou_Gera_Comis_Lanca_Comis = gErr

    Select Case gErr
    
        Case 198115, 198116, 198119
        
        Case 198117, 198118
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_FILIALFORNECEDORCATEGORIAS2", gErr, objVou.lEmissor)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 198120)

    End Select

    Exit Function

End Function

Public Function TRVCliente_Grava(ByVal objCliente As ClassCliente) As Long

Dim lErro As Long
Dim alComando(0 To 8) As Long
Dim iIndice As Integer
Dim objClienteTRV As New ClassClienteTRV
Dim objCliEmiTRV As ClassCliEmissoresTRV
Dim objCliEmiExcTRV As ClassCliEmissoresExcTRV
Dim lEmpPai As Long
Dim lCorrent As Long
Dim dComiss As Double
Dim lCodRep As Long
Dim iAporte As Integer
Dim dPercComiCorr As Double
Dim dPercComiRep As Double
Dim lEmissor As Long
Dim lEmissorAnt As Long
Dim dComissEmissor As Double
Dim iSeq As Integer
Dim sProduto As String
Dim dComissEmissorExc As Double
Dim scodgru As String
Dim iFilialEmp As Integer
Dim iFilialCoinfo As Integer
Dim iFilialNF As Integer
Dim iFilialFat As Integer
Dim iCondPagtoCC As Integer
Dim dComissaoRep As Double
Dim dComissaoCorr As Double
Dim tCliEmissoresTRV As typeCliEmissoresTRV

On Error GoTo Erro_TRVCliente_Grava

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 196320
    Next
    
    scodgru = String(255, 0)
    
    'Le a empresa do Sigav
    lErro = Comando_Executar(alComando(0), "SELECT emppai, empagt,comis, codRep, aporte, codgru FROM CoinfoEmpresaAtual WHERE CodEmp = ? ", _
                lEmpPai, lCorrent, dComiss, lCodRep, iAporte, scodgru, objCliente.lCodigo)
    If lErro <> AD_SQL_SUCESSO Then gError 196321

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(0))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196322
    
    If lErro = AD_SQL_SEM_DADOS Then gError 196323

    'Le a empresa do Sigav
    lErro = Comando_Executar(alComando(6), "SELECT Filial FROM CoinfoGrupoAtual WHERE Codigo = ? ", _
                iFilialCoinfo, scodgru)
    If lErro <> AD_SQL_SUCESSO Then gError 196321

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(6))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196322
    
    If lErro <> AD_SQL_SUCESSO Then
        iFilialCoinfo = 1
        iFilialEmp = 1
    Else
        iFilialEmp = Filial_Coinfo_Retorna_Corporator(iFilialCoinfo)
    End If

    'Se tem correntista
    If lCorrent <> 0 Then
    
        'Le a empresa do Sigav (Correntista)
        lErro = Comando_Executar(alComando(1), "SELECT comis FROM CoinfoEmpresa WHERE CodEmp = ? ORDER BY NumIntArq DESC, NumRegArqTexto DESC", _
                    dPercComiCorr, lCorrent)
        If lErro <> AD_SQL_SUCESSO Then gError 196324
    
        'Busca Primeiro
        lErro = Comando_BuscarPrimeiro(alComando(1))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196325
        
        If lErro <> SUCESSO Then gError 196326
    
    End If
    
    'Se tem representante
    If lCodRep <> 0 Then
    
        'Le a empresa do Sigav (Representante)
        lErro = Comando_Executar(alComando(0), "SELECT comis FROM CoinfoEmpresa WHERE CodEmp = ? ORDER BY NumIntArq DESC, NumRegArqTexto DESC", _
                    dPercComiRep, lCodRep)
        If lErro <> AD_SQL_SUCESSO Then gError 196327
    
        'Busca Primeiro
        lErro = Comando_BuscarPrimeiro(alComando(0))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196328
        
        If lErro <> SUCESSO Then gError 196329
    
    End If
    
    objClienteTRV.dPercComiAg = (dComiss) / 100
    If lCorrent <> 0 Then
        objClienteTRV.dPercComiCorr = objClienteTRV.dPercComiAg
        objClienteTRV.dPercComiAg = 0
    End If
    If lCodRep <> 0 Then objClienteTRV.dPercComiRep = (dPercComiRep - dComiss) / 100
    objClienteTRV.iConsiderarAporte = iAporte
    objClienteTRV.lCodCorrentista = lCorrent
    objClienteTRV.lCodRepresentante = lCodRep
    objClienteTRV.lEmpresaPai = lEmpPai
    objClienteTRV.sGrupo = scodgru
    objClienteTRV.iFilialCoinfo = iFilialCoinfo
    objClienteTRV.iFilialEmpresa = iFilialEmp
    
    If objClienteTRV.dPercComiCorr < 0 Then objClienteTRV.dPercComiCorr = 0
    If objClienteTRV.dPercComiRep < 0 Then objClienteTRV.dPercComiRep = 0
    
    Set objCliente.objInfoUsu = objClienteTRV
    
    'Le os emissores
    lErro = Comando_Executar(alComando(3), "SELECT CodEmi, percover FROM CoinfoEmissor WHERE CodEmp = ? ORDER BY CodEmi ASC, NumIntArq DESC, NumRegArqTexto DESC", _
                lEmissor, dComissEmissor, objCliente.lCodigo)
    If lErro <> AD_SQL_SUCESSO Then gError 196330

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(3))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196331
    
    lEmissorAnt = 0
    Do While lErro <> AD_SQL_SEM_DADOS
    
        If lEmissor <> lEmissorAnt Then
            
            lEmissorAnt = lEmissor
            
            Set objCliEmiTRV = New ClassCliEmissoresTRV
            
            objCliEmiTRV.dPercComissao = dComissEmissor / 100
            objCliEmiTRV.lCliente = objCliente.lCodigo
            objCliEmiTRV.lFornEmissor = lEmissor + FATOR_SOMA_COD_EMISSOR
            objCliEmiTRV.iSeq = objClienteTRV.colCliEmissoresTRV.Count + 1
            
            tCliEmissoresTRV.sCPF = String(STRING_CGC, 0)
            tCliEmissoresTRV.sNumCartao = String(255, 0)
            
             'Le a tabela TRVCliEmissores
            lErro = Comando_Executar(alComando(8), "SELECT E.NumIntDoc, E.Cliente, E.Seq, E.FornEmissor, E.PercComissao, E.Cargo, E.NumCartao, E.PercCI, F.CGC FROM TRVCliEmissores As E, FiliaisFornecedores As F WHERE E.FornEmissor = F.CodFornecedor AND E.FornEmissor = ? ", _
                        tCliEmissoresTRV.lNumIntDoc, tCliEmissoresTRV.lCliente, tCliEmissoresTRV.iSeq, tCliEmissoresTRV.lFornEmissor, tCliEmissoresTRV.dPercComissao, tCliEmissoresTRV.lCargo, tCliEmissoresTRV.sNumCartao, tCliEmissoresTRV.dPercCI, tCliEmissoresTRV.sCPF, _
                        objCliEmiTRV.lFornEmissor)
            If lErro <> AD_SQL_SUCESSO Then gError 196330
        
            'Busca Primeiro
            lErro = Comando_BuscarPrimeiro(alComando(8))
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196331
            
            If lErro = AD_SQL_SUCESSO Then
                objCliEmiTRV.dPercCI = tCliEmissoresTRV.dPercCI
                objCliEmiTRV.lCargo = tCliEmissoresTRV.lCargo
                objCliEmiTRV.sCPF = tCliEmissoresTRV.sCPF
                objCliEmiTRV.sNumCartao = tCliEmissoresTRV.sNumCartao
            Else
                objCliEmiTRV.lCargo = 1
            End If
            
            objClienteTRV.colCliEmissoresTRV.Add objCliEmiTRV
            
        End If
    
         'Busca Próximo
        lErro = Comando_BuscarProximo(alComando(3))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196332
           
    Loop
    
    For Each objCliEmiTRV In objClienteTRV.colCliEmissoresTRV
    
        sProduto = String(STRING_PRODUTO, 0)
    
        'Le as excessões já cadastradas
        lErro = Comando_Executar(alComando(4), "SELECT EE.Seq, EE.Produto, EE.PercComissao FROM TRVCliEmissoresExc AS EE, TRVCliEmissores AS E WHERE EE.NumIntDocCliEmi = E.NumIntDoc AND E.Cliente = ? AND E.FornEmissor = ?", _
                    iSeq, sProduto, dComissEmissorExc, objCliente.lCodigo, objCliEmiTRV.lFornEmissor)
        If lErro <> AD_SQL_SUCESSO Then gError 196333
    
        'Busca Primeiro
        lErro = Comando_BuscarPrimeiro(alComando(4))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196334
        
        Do While lErro <> AD_SQL_SEM_DADOS
        
            Set objCliEmiExcTRV = New ClassCliEmissoresExcTRV
            
            objCliEmiExcTRV.dPercComissao = dComissEmissorExc
            objCliEmiExcTRV.iSeq = iSeq
            objCliEmiExcTRV.sProduto = sProduto
            
            objCliEmiTRV.colCliEmissoresExcTRV.Add objCliEmiExcTRV
        
            'Busca Próximo
            lErro = Comando_BuscarProximo(alComando(4))
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196335
        
        Loop
    
    Next
    
    lErro = Comando_Executar(alComando(7), "SELECT FilialNF,FilialFat,CondPagtoCC, ComissaoRep, ComissaoCorr, Correntista, Representante FROM FiliaisClientesTRV WHERE CodCliente = ?  AND CodFilial = ? ", _
                iFilialNF, iFilialFat, iCondPagtoCC, dComissaoRep, dComissaoCorr, lCorrent, lCodRep, objCliente.lCodigo, FILIAL_MATRIZ)
    If lErro <> AD_SQL_SUCESSO Then gError 196333

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(7))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196334
    
    If lErro <> AD_SQL_SEM_DADOS Then
        objClienteTRV.iFilialNF = iFilialNF
        objClienteTRV.iFilialFat = iFilialFat
        objClienteTRV.iCondPagtoCC = iCondPagtoCC
        
        objClienteTRV.lCodCorrentista = lCorrent
        objClienteTRV.lCodRepresentante = lCodRep
        
        objClienteTRV.dPercComiRep = dComissaoRep
        objClienteTRV.dPercComiCorr = dComissaoCorr
    Else
    
        If objClienteTRV.iFilialEmpresa = 3 Or objClienteTRV.iFilialEmpresa = 5 Then
            objClienteTRV.iFilialNF = 6
        End If
    
    End If
    
    lErro = CF("TRVClienteCorProd_Le", objCliente)
    If lErro <> SUCESSO Then gError 196951
    
    lErro = CF("TRVClienteRepProd_Le", objCliente)
    If lErro <> SUCESSO Then gError 196952
    
    lErro = CF("TRVExcComissaoCli_Le", objCliente)
    If lErro <> SUCESSO Then gError 196952
    
    lErro = CF("TRVCliDataCallCenter_Le", objCliente)
    If lErro <> SUCESSO Then gError 196952
    
    lErro = Cliente_Grava_Customizado(objCliente)
    If lErro <> SUCESSO Then gError 196336
        
    'End If
    
    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVCliente_Grava = SUCESSO

    Exit Function

Erro_TRVCliente_Grava:

    TRVCliente_Grava = gErr

    Select Case gErr

        Case 196320
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)
            
        Case 196321, 196322, 196324, 196325, 196327, 196328
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_COINFOEMPRESA", gErr)
            
        Case 196323
            Call Rotina_Erro(vbOKOnly, "ERRO_COINFOEMPRESA_NAO_CADASTRADO", gErr, objCliente.lCodigo)

        Case 196326
            Call Rotina_Erro(vbOKOnly, "ERRO_COINFOEMPRESA_NAO_CADASTRADO", gErr, lCorrent)

        Case 196329
            Call Rotina_Erro(vbOKOnly, "ERRO_COINFOEMPRESA_NAO_CADASTRADO", gErr, lCodRep)

        Case 196330, 196331, 196332
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_COINFOEMISSOR", gErr)

        Case 196333, 196334, 196335
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVCLIEMISSOR", gErr)
            
        Case 196336, 196951, 196952

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 196337)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Function RPS_Obtem_Discriminacao_Cust(ByVal objNF As ClassNFiscal, sDiscriminacao As String)

Dim lErro As Long
Dim objItemNF As ClassItemNF
Dim iPOS As Integer
Dim sParte As String

On Error GoTo Erro_RPS_Obtem_Discriminacao_Cust

    sDiscriminacao = ""
    
    For Each objItemNF In objNF.ColItensNF
    
'        sParte = objItemNF.sDescricaoItem
'
'        iPOS = InStr(1, sParte, " ")
'
'        Do While iPOS <> 0
'
'            sParte = Mid(sParte, iPOS + 1)
'
'            iPOS = InStr(1, sParte, " ")
'
'        Loop
'
'        sDiscriminacao = sDiscriminacao & IIf(Len(Trim(sDiscriminacao)) > 0, "||", "") & "Prestação de serviço de assistência ao viajante, referente a fatura Nro. " & sParte
    
        sDiscriminacao = sDiscriminacao & IIf(Len(Trim(sDiscriminacao)) > 0, "||", "") & objItemNF.sDescricaoItem
    
    Next
    
    RPS_Obtem_Discriminacao_Cust = SUCESSO

    Exit Function

Erro_RPS_Obtem_Discriminacao_Cust:

    RPS_Obtem_Discriminacao_Cust = gErr

    Select Case gErr

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 196337)

    End Select

    Exit Function
    
End Function

Public Function TRVAportePagtoFatCond_Exclui(ByVal lComando1 As Long, ByVal lComando2 As Long, ByVal objTRVAportePagtoFatCond As ClassTRVAportePagtoFatC) As Long

Dim lErro As Long
Dim lNumIntDoc As Long

On Error GoTo Erro_TRVAportePagtoFatCond_Exclui

    'Le a tabelaTRVAportePagtoFatCond
    lErro = Comando_ExecutarPos(lComando1, "SELECT NumIntDoc FROM TRVAportePagtoFatCond WHERE NumIntDoc= ? ", _
                0, lNumIntDoc, objTRVAportePagtoFatCond.lNumIntDoc)
    If lErro <> AD_SQL_SUCESSO Then gError 190416

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(lComando1)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 190417

    'Se não existir => ERRO
    If lErro <> AD_SQL_SUCESSO Then gError 190418

    lErro = Comando_ExecutarPos(lComando2, "DELETE FROM TRVAportePagtoFatCond ", lComando1)
    If lErro <> AD_SQL_SUCESSO Then gError 190419
    
    TRVAportePagtoFatCond_Exclui = SUCESSO

    Exit Function

Erro_TRVAportePagtoFatCond_Exclui:

    TRVAportePagtoFatCond_Exclui = gErr

    Select Case gErr

        Case 190416, 190417
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVAPORTEPAGTOFATCOND", gErr)

        Case 190418
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVAPORTEPAGTOFATCOND_NAO_CADASTRADO", gErr, objTRVAportePagtoFatCond.lNumIntDoc)
        
        Case 190419
            Call Rotina_Erro(vbOKOnly, "ERRO_DELETE_TRVAPORTEPAGTOFATCOND", gErr)
        
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 190420)

    End Select

    Exit Function

End Function

Public Function TRVAportePagtoFatCond_Atualiza(ByVal lComando1 As Long, ByVal lComando2 As Long, ByVal objTRVAportePagtoFatCond As ClassTRVAportePagtoFatC, Optional ByVal objAporte As ClassTRVAportes) As Long

Dim lErro As Long
Dim lNumIntDoc As Long

On Error GoTo Erro_TRVAportePagtoFatCond_Atualiza

    'Le a tabelaTRVAportePagtoFatCond
    lErro = Comando_ExecutarPos(lComando1, "SELECT NumIntDoc FROM TRVAportePagtoFatCond WHERE NumIntDoc= ? ", _
                0, lNumIntDoc, objTRVAportePagtoFatCond.lNumIntDoc)
    If lErro <> AD_SQL_SUCESSO Then gError 190411

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(lComando1)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 190412

    'Se não existir => ERRO
    If lErro <> AD_SQL_SUCESSO Then gError 190413

    lErro = Comando_ExecutarPos(lComando2, "UPDATE TRVAportePagtoFatCond SET Valor= ? , ValidadeDe= ? , ValidadeAte= ? , " & _
            "Percentual= ?, Seq = ? ", lComando1, _
            objTRVAportePagtoFatCond.dValor, objTRVAportePagtoFatCond.dtValidadeDe, objTRVAportePagtoFatCond.dtValidadeAte, _
            objTRVAportePagtoFatCond.dPercentual, objTRVAportePagtoFatCond.iSeq)
    If lErro <> AD_SQL_SUCESSO Then gError 190414
    
    TRVAportePagtoFatCond_Atualiza = SUCESSO

    Exit Function

Erro_TRVAportePagtoFatCond_Atualiza:

    TRVAportePagtoFatCond_Atualiza = gErr

    Select Case gErr

        Case 190411, 190412
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVAPORTEPAGTOFATCOND", gErr)

        Case 190413
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVAPORTEPAGTOFATCOND_NAO_CADASTRADO", gErr, objTRVAportePagtoFatCond.lNumIntDoc)
        
        Case 190414
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVAPORTEPAGTOFATCOND", gErr)
        
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 190415)

    End Select

    Exit Function

End Function

Public Function TRVAportePagtoFatCond_Insere(ByVal lComando As Long, ByVal objTRVAportePagtoFatCond As ClassTRVAportePagtoFatC, ByVal objAporte As ClassTRVAportes) As Long

Dim lErro As Long
Dim lNumIntDoc As Long

On Error GoTo Erro_TRVAportePagtoFatCond_Insere

    'Obter NumIntDoc
    lErro = CF("Config_ObterNumInt", "FATConfig", "NUM_INT_PROX_TRVAPORTEPAGTOFATCOND", lNumIntDoc)
    If lErro <> SUCESSO Then gError 190408

    objTRVAportePagtoFatCond.lNumIntDoc = lNumIntDoc

    lErro = Comando_Executar(lComando, "INSERT INTO TRVAportePagtoFatCond( NumIntDoc, NumIntDocAporte, Valor, ValidadeDe, " & _
            "ValidadeAte, Percentual, Seq) VALUES (?,?,?,?,?,?,?)", _
            objTRVAportePagtoFatCond.lNumIntDoc, objTRVAportePagtoFatCond.lNumIntDocAporte, objTRVAportePagtoFatCond.dValor, objTRVAportePagtoFatCond.dtValidadeDe, _
            objTRVAportePagtoFatCond.dtValidadeAte, objTRVAportePagtoFatCond.dPercentual, objTRVAportePagtoFatCond.iSeq)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 190409

    TRVAportePagtoFatCond_Insere = SUCESSO

    Exit Function

Erro_TRVAportePagtoFatCond_Insere:

    TRVAportePagtoFatCond_Insere = gErr

    Select Case gErr

        Case 190408

        Case 190409
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_TRVAPORTEPagtoFatCond", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 190410)

    End Select

    Exit Function

End Function

Public Function TRVAportes_Valida(ByVal objTRVAportes As ClassTRVAportes) As Long

Dim lErro As Long
Dim alComando(0 To 0) As Long
Dim iIndice As Integer
Dim iIndice2 As Integer
Dim objPagtoFat As ClassTRVAportePagtoFat
Dim objPagtoFatAux As ClassTRVAportePagtoFat
Dim sTexto As String
Dim sTextoFinal As String
Dim lCodigo As Long
Dim dValor As Double
Dim dSaldo As Double
Dim dtValidadeDe As Date
Dim dtValidadeAte As Date
Dim iSeq As Integer
Dim vbResult As VbMsgBoxResult
Dim bValidadeRepetida

On Error GoTo Erro_TRVAportes_Valida

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 196480
    Next
    
    iIndice = 0
    For Each objPagtoFat In objTRVAportes.colPagtoSobreFatura
        bValidadeRepetida = False
        iIndice = iIndice + 1
        For iIndice2 = iIndice + 1 To objTRVAportes.colPagtoSobreFatura.Count
            Set objPagtoFatAux = objTRVAportes.colPagtoSobreFatura.Item(iIndice2)
            If Not ((objPagtoFatAux.dtValidadeDe < objPagtoFat.dtValidadeDe And objPagtoFatAux.dtValidadeAte < objPagtoFat.dtValidadeDe) Or (objPagtoFatAux.dtValidadeDe > objPagtoFat.dtValidadeAte And objPagtoFatAux.dtValidadeAte > objPagtoFat.dtValidadeAte)) Then
                bValidadeRepetida = True
                sTexto = sTexto & " e Aporte: " & objTRVAportes.lCodigo & " Valor: " & Format(objPagtoFatAux.dValor, "STANDARD") & " Saldo: " & Format(objPagtoFatAux.dSaldo, "STANDARD") & " Validade De: " & Format(objPagtoFatAux.dtValidadeDe, "dd/mm/yyyy") & " Validade De: " & Format(objPagtoFatAux.dtValidadeAte, "dd/mm/yyyy") & " Linha : " & CStr(objPagtoFatAux.iSeq)
            End If
        Next
    
        'Le a tabelaTRVAportes
        lErro = Comando_Executar(alComando(0), "SELECT A.Codigo, P.Valor, P.Saldo, P.Validadede, P.ValidadeAte, P.Seq FROM TRVAportes AS A, TRVAportePagtoFat AS P WHERE A.NumintDoc = P.NumIntDocAporte AND NOT ((ValidadeDe < ? AND ValidadeAte < ?) OR (ValidadeDe > ? AND ValidadeAte > ?)) AND Cliente = ? AND Codigo <> ? ", lCodigo, dValor, dSaldo, dtValidadeDe, dtValidadeAte, iSeq, objPagtoFat.dtValidadeDe, objPagtoFat.dtValidadeDe, objPagtoFat.dtValidadeAte, objPagtoFat.dtValidadeAte, objTRVAportes.lCliente, objTRVAportes.lCodigo)
        If lErro <> AD_SQL_SUCESSO Then gError 196481
    
        'Busca Primeiro
        lErro = Comando_BuscarPrimeiro(alComando(0))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196482
        
        Do While lErro <> AD_SQL_SEM_DADOS
            
            bValidadeRepetida = True
            sTexto = sTexto & " Aporte: " & lCodigo & " Valor: " & Format(dValor, "STANDARD") & " Saldo: " & Format(dSaldo, "STANDARD") & " Validade De: " & Format(dtValidadeDe, "dd/mm/yyyy") & " Validade De: " & Format(dtValidadeAte, "dd/mm/yyyy") & " Linha : " & CStr(iSeq)
        
            'Busca Próximo
            lErro = Comando_BuscarProximo(alComando(0))
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196483

        Loop
        
        If bValidadeRepetida Then
            sTextoFinal = sTextoFinal & " Aporte: " & objTRVAportes.lCodigo & " Valor: " & Format(objPagtoFat.dValor, "STANDARD") & " Saldo: " & Format(objPagtoFat.dSaldo, "STANDARD") & " Validade De: " & Format(objPagtoFat.dtValidadeDe, "dd/mm/yyyy") & " Validade De: " & Format(objPagtoFat.dtValidadeAte, "dd/mm/yyyy") & " Linha : " & CStr(objPagtoFat.iSeq) & sTexto
        End If
    
    Next
    
    If Len(Trim(sTextoFinal)) > 0 Then
    
        vbResult = Rotina_Aviso(vbYesNo, "AVISO_PAGTOAPORTE_VALIDADEREPETIDA", objTRVAportes.lCliente, sTextoFinal)
        If vbResult = vbNo Then gError 196484
    
    End If
    
    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVAportes_Valida = SUCESSO

    Exit Function

Erro_TRVAportes_Valida:

    TRVAportes_Valida = gErr

    Select Case gErr

        Case 196480
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)
            
        Case 196481 To 196483
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVAPORTES", gErr)
        
        Case 196484

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 196485)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Private Function NF_NFiscal_Grava_TRV(alComando() As Long, ByVal objNFiscal As ClassNFiscal, iProxComando As Integer) As Long

Dim lErro As Long
Dim iIndice As Integer
Dim lNumIntDoc As Long
Dim objItemNF As ClassItemNF
Dim tSerie As typeSerie
Dim objTipoDocInfo As New ClassTipoDocInfo
Dim objFilCliFilEmp As New ClassFilCliFilEmp
Dim objRPS As New ClassRPS
Dim objNFTRV As ClassNFTRV
Dim tFilCliFilEmp As typeFilCliFilEmp

On Error GoTo Erro_NF_NFiscal_Grava_TRV
    
    Set objNFTRV = objNFiscal.objInfoUsu

    lErro = Comando_ExecutarPos(alComando(iProxComando + 12), "SELECT ProxNumNFiscal FROM Serie WHERE Serie = ? AND FilialEmpresa = ?", 0, tSerie.lProxNumNFiscal, objNFiscal.sSerie, objNFiscal.iFilialEmpresa)
    If lErro <> AD_SQL_SUCESSO Then gError 196795

    lErro = Comando_BuscarPrimeiro(alComando(iProxComando + 12))
    If lErro <> AD_SQL_SUCESSO Then gError 196796
    
    lErro = Comando_LockExclusive(alComando(iProxComando + 12))
    If lErro <> AD_SQL_SUCESSO Then gError 196797
    
    objNFiscal.lNumNotaFiscal = tSerie.lProxNumNFiscal
    
    tSerie.lProxNumNFiscal = tSerie.lProxNumNFiscal + 1
    
    lErro = Comando_ExecutarPos(alComando(iProxComando + 13), "UPDATE Serie SET ProxNumNFiscal = ?", alComando(iProxComando + 12), tSerie.lProxNumNFiscal)
    If lErro <> AD_SQL_SUCESSO Then gError 196798
    
    'Obtem o Número Interno da nova Nota Fiscal
    lErro = CF("NFiscal_Automatico1", alComando(iProxComando + 1), alComando(iProxComando + 2), alComando(iProxComando + 3), lNumIntDoc)
    If lErro <> SUCESSO Then gError 196799

    objNFiscal.lNumIntDoc = lNumIntDoc
    
    lErro = CF("NFiscal_Grava_Msg", objNFiscal)
    If lErro <> SUCESSO Then gError 196799

    With objNFiscal

        'Insere a nova Nota Fiscal de Saida no BD
        lErro = Comando_Executar(alComando(iProxComando + 4), "INSERT INTO NFiscal (DataAtualizacao, NumIntDoc, Status, FilialEmpresa, Serie, NumNotaFiscal, Cliente, FilialCli, FilialEntrega, Fornecedor, FilialForn, DataEmissao, DataEntrada, DataSaida, DataVencimento, DataReferencia,NumPedidoVenda, NumPedidoTerc, ClasseDocCPR, NumIntDocCPR, ValorTotal, ValorProdutos, ValorFrete, ValorSeguro, ValorOutrasDespesas, ValorDesconto, CodTransportadora, MensagemNota, TabelaPreco, TipoNFiscal, NaturezaOp, PesoLiq, PesoBruto, NumIntTrib, Placa, PlacaUF, VolumeQuant, VolumeEspecie, VolumeMarca, Canal, NumIntNotaOriginal,FilialPedido, VolumeNumero, FreteRespons, HoraSaida, CodTranspRedesp, DetPagFrete, Moeda, TaxaMoeda, VolumeTotal, SemDataSaida, NaoImpCobranca, MensagemCorpoNota,RPS) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)", _
            gdtDataHoje, .lNumIntDoc, .iStatus, .iFilialEmpresa, .sSerie, .lNumNotaFiscal, .lCliente, .iFilialCli, .iFilialEntrega, .lFornecedor, .iFilialForn, .dtDataEmissao, .dtDataEntrada, .dtDataSaida, .dtDataVencimento, .dtDataReferencia, .lNumPedidoVenda, .sNumPedidoTerc, .iClasseDocCPR, .lNumIntDocCPR, .dValorTotal, .dValorProdutos, .dValorFrete, .dValorSeguro, .dValorOutrasDespesas, .dValorDesconto, .iCodTransportadora, .sMensagemNota, .iTabelaPreco, .iTipoNFiscal, .sNaturezaOp, .dPesoLiq, .dPesoBruto, .lNumIntTrib, .sPlaca, .sPlacaUF, .lVolumeQuant, .lVolumeEspecie, .lVolumeMarca, .iCanal, .lNumIntNotaOriginal, .iFilialPedido, .sVolumeNumero, .iFreteRespons, CDbl(.dtHoraSaida), .iCodTranspRedesp, .iDetPagFrete, .iMoeda, .dTaxaMoeda, .dVolumeTotal, .iSemDataSaida, .iNaoImpCobranca, .sMensagemCorpoNota, .iRecibo)
        If lErro <> AD_SQL_SUCESSO Then gError 196800
        
    End With

    'grava a tributacao da nota como um todo
    lErro = CF("NFiscal_GravaTributacao", objNFiscal, alComando(iProxComando + 5), alComando(iProxComando + 6))
    If lErro <> SUCESSO Then gError 196801
   
    'Obtém o Número Interno dos itens da NF
    lErro = CF("CRFATConfig_ObterNumInt", alComando(iProxComando + 7), alComando(iProxComando + 8), "NUM_PROX_ITEM_NOTA_FISCAL", lNumIntDoc, objNFiscal.ColItensNF.Count)
    If lErro <> SUCESSO Then gError 196802
   
    'Para cada item da Nota
    For Each objItemNF In objNFiscal.ColItensNF

        objItemNF.lNumIntNF = objNFiscal.lNumIntDoc
        objItemNF.lNumIntDoc = lNumIntDoc

        With objItemNF
        
            'Insere o item no Banco de dados
            lErro = Comando_Executar(alComando(iProxComando + 9), "INSERT INTO ItensNFiscal (NumIntNF, Item, Status, Produto, UnidadeMed, Quantidade, PrecoUnitario, PercDesc, ValorDesconto, DataEntrega, DescricaoItem, ValorAbatComissao, NumIntPedVenda, NumIntItemPedVenda, NumIntDoc, NumIntTrib, NumIntDocOrig, Almoxarifado) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)", .lNumIntNF, .iItem, STATUS_LANCADO, .sProduto, .sUnidadeMed, .dQuantidade, .dPrecoUnitario, .dPercDesc, .dValorDesconto, .dtDataEntrega, .sDescricaoItem, .dValorAbatComissao, .lNumIntPedVenda, .lNumIntItemPedVenda, lNumIntDoc, .lNumIntTrib, 0, .iAlmoxarifado)
            If lErro <> AD_SQL_SUCESSO Then gError 196803
            
        End With
        
        'grava a tributacao relativa a cada item da nota
        lErro = CF("NFiscal_GravaTributacaoItem", objItemNF, alComando(iProxComando + 10), alComando(iProxComando + 11))
        If lErro <> SUCESSO Then gError 196804
        
        objItemNF.objInfoAdicDocItem.iTipoDoc = TIPODOC_INFOADIC_ITEMNF
        objItemNF.objInfoAdicDocItem.lNumIntDocItem = objItemNF.lNumIntDoc
        lErro = CF("InfoAdicDocItem_Insere", objItemNF.objInfoAdicDocItem, alComando(43))
        If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
    
        lNumIntDoc = lNumIntDoc + 1
    
    Next
    
    Set objTipoDocInfo = objNFTRV.objTipoDocInfo
    
    'Trata-se de uma nota fiscal de venda
    If (objTipoDocInfo.iFaturamento = TIPODOCINFO_FATURAVEL) And (objTipoDocInfo.iComplementar = DOCINFO_NORMAL) Then
        
        objFilCliFilEmp.lCodCliente = objNFiscal.lCliente
        objFilCliFilEmp.iFilialEmpresa = objNFiscal.iFilialEmpresa
        objFilCliFilEmp.iCodFilial = objNFiscal.iFilialCli
        
        'Lê a tabela FilCliFilEmp
        lErro = Comando_ExecutarPos(alComando(iProxComando + 14), "SELECT NumeroCompras, MediaCompra, ValorAcumuladoCompras  FROM FilialClienteFilEmp WHERE FilialEmpresa = ? AND CodCliente =? AND CodFilial = ?", 0, tFilCliFilEmp.lNumeroCompras, tFilCliFilEmp.dMediaCompra, tFilCliFilEmp.dValorAcumuladoCompras, objFilCliFilEmp.iFilialEmpresa, objFilCliFilEmp.lCodCliente, objFilCliFilEmp.iCodFilial)
        If lErro <> AD_SQL_SUCESSO Then gError 196805
    
        lErro = Comando_BuscarPrimeiro(alComando(iProxComando + 14))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196806
    
        'Não Achou a FilCliFilEmp
        If lErro = AD_SQL_SEM_DADOS Then
    
            'Insere na tabela de FilialClienteFilEmp
            lErro = Comando_Executar(alComando(iProxComando + 16), "INSERT INTO FilialClienteFilEmp (FilialEmpresa, CodCliente, CodFilial, NumeroCompras ,MediaCompra, ValorAcumuladoCompras) VALUES (?,?,?,?,?,?)", objNFiscal.iFilialEmpresa, objNFiscal.lCliente, objNFiscal.iFilialCli, 1, objNFiscal.dValorTotal, objNFiscal.dValorTotal)
            If lErro <> AD_SQL_SUCESSO Then gError 196807
        'se encontrou
        Else
            
            'Lock da FilCliFilEmp
            lErro = Comando_LockExclusive(alComando(iProxComando + 14))
            If lErro <> AD_SQL_SUCESSO Then gError 196808
            
            'recalcula os valores
            objFilCliFilEmp.dValorAcumuladoCompras = tFilCliFilEmp.dValorAcumuladoCompras + objNFiscal.dValorTotal
            objFilCliFilEmp.lNumeroCompras = tFilCliFilEmp.lNumeroCompras + 1
            objFilCliFilEmp.dMediaCompra = tFilCliFilEmp.dValorAcumuladoCompras / objFilCliFilEmp.lNumeroCompras
            
            'Atualiza a tabela de FilialClienteFilEmp
            lErro = Comando_ExecutarPos(alComando(iProxComando + 15), "UPDATE FilialClienteFilEmp SET NumeroCompras =?,MediaCompra=?, ValorAcumuladoCompras=?", alComando(iProxComando + 14), objFilCliFilEmp.lNumeroCompras, objFilCliFilEmp.dMediaCompra, objFilCliFilEmp.dValorAcumuladoCompras)
            If lErro <> AD_SQL_SUCESSO Then gError 196809
        End If
        
    
    End If

    'verifica se é Notafiscal de venda
    If (objTipoDocInfo.iFaturamento = TIPODOCINFO_FATURAMENTO_SIM Or objTipoDocInfo.iFaturamento = TIPODOCINFO_FATURAMENTO_DEV) And (objTipoDocInfo.iComplementar = DOCINFO_NORMAL Or (objTipoDocInfo.iCodigo = DOCINFO_NFISCP Or objTipoDocInfo.iCodigo = DOCINFO_NFISFCP)) Then
        
        'Grava a estatistica do Dia do produto
        lErro = NF_SldDiaFat_Grava_Est_TRV(alComando(iProxComando + 17), alComando(iProxComando + 18), alComando(iProxComando + 19), objNFiscal, objTipoDocInfo)
        If lErro <> SUCESSO Then gError 196810
        
        'Grava a estatística do Mês do produto
        lErro = NF_SldMesFat_Grava_Est_TRV(alComando(iProxComando + 20), alComando(iProxComando + 21), alComando(iProxComando + 22), alComando(iProxComando + 23), alComando(iProxComando + 24), alComando(iProxComando + 25), objNFiscal, objTipoDocInfo)
        If lErro <> SUCESSO Then gError 196811
    
    End If

    'Verifica se o modulo de Livros Fiscais está Ativo
    If gcolModulo.Ativo(MODULO_LIVROSFISCAIS) = MODULO_ATIVO Then
                        
        lErro = NF_NotaFiscal_Grava_Fis_TRV(alComando(iProxComando + 26), alComando(iProxComando + 27), alComando(iProxComando + 28), alComando(iProxComando + 29), alComando(iProxComando + 30), alComando(iProxComando + 31), alComando(iProxComando + 32), alComando(iProxComando + 33), alComando(iProxComando + 36), alComando(iProxComando + 37), alComando(iProxComando + 39), alComando(iProxComando + 40), alComando(iProxComando + 41), alComando(iProxComando + 42), objNFiscal)
        If lErro <> SUCESSO Then gError 196812
    
    End If
    
    If objNFiscal.iRecibo = MARCADO Then

        lErro = NF_Converte_RPS_TRV(objNFiscal, objRPS)
        If lErro <> SUCESSO Then gError 196813
        
        If objRPS.dValorServico > 0 Then
        
            'Obter NumIntDoc
            lErro = CF("Config_ObterNumInt2", alComando(iProxComando + 34), alComando(iProxComando + 38), "FATConfig", "NUM_INT_PROX_RPS", lNumIntDoc)
            If lErro <> SUCESSO Then gError 196814
    
            objRPS.lNumIntDoc = lNumIntDoc
    
            lErro = Comando_Executar(alComando(iProxComando + 35), "INSERT INTO RPS( NumIntDoc, Tipo, Serie, Numero, DataEmissao, FilialEmpresa, " & _
                    "Situacao, ValorServico, ValorDeducao, CodigoServico, Aliquota, " & _
                    "ISSRetido, TipoCGC, CGC, InscricaoMunicipal, InscricaoEstadual, " & _
                    "RazaoSocial, Endereco, EndNumero, EndComplemento, Bairro, " & _
                    "Cidade, UF, CEP, Email, Discriminacao, NumIntDocNF, Cliente, FilialCliente,DataUltAlteracao,HoraUltAlteracao, Enviado, ValorCofins, ValorCSLL, ValorINSS, ValorIRPJ, ValorPIS) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)", _
                    objRPS.lNumIntDoc, objRPS.sTipo, objRPS.sSerie, objRPS.lNumero, objRPS.dtDataEmissao, objRPS.iFilialEmpresa, _
                    objRPS.sSituacao, objRPS.dValorServico, objRPS.dValorDeducao, objRPS.lCodigoServico, objRPS.dAliquota, _
                    objRPS.iISSRetido, objRPS.iTipoCGC, objRPS.sCgc, objRPS.sInscricaoMunicipal, objRPS.sInscricaoEstadual, _
                    objRPS.sRazaoSocial, objRPS.sEndereco, objRPS.sEndNumero, objRPS.sEndComplemento, objRPS.sBairro, _
                    objRPS.sCidade, objRPS.sUF, objRPS.sCEP, objRPS.sEmail, objRPS.sDiscriminacao, objRPS.lNumIntDocNF, objRPS.lCliente, objRPS.iFilialCliente, Date, CDbl(Time), DESMARCADO, objRPS.dValorCofins, objRPS.dValorCSLL, objRPS.dValorINSS, objRPS.dValorIRPJ, objRPS.dValorPIS)
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then
                gError 196815
            End If
            
        End If
        
    End If
    
    iProxComando = iProxComando + 44
    
    NF_NFiscal_Grava_TRV = SUCESSO

    Exit Function

Erro_NF_NFiscal_Grava_TRV:

    NF_NFiscal_Grava_TRV = gErr

    Select Case gErr

        Case 196795, 196796
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_SERIE1", gErr, objNFiscal.sSerie)

        Case 196797
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCK_SERIE", gErr)
        
        Case 196798
            Call Rotina_Erro(vbOKOnly, "ERRO_ATUALIZACAO_SERIE", gErr, objNFiscal.sSerie)
            
        Case 196799, 196801, 196802, 196804, 196810 To 196814
        
        Case 196800
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_NFISCAL_SAIDA", gErr, objNFiscal.lCliente, objNFiscal.iFilialCli, objNFiscal.iTipoNFiscal, objNFiscal.sSerie, objNFiscal.lNumNotaFiscal)
        
        Case 196803
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_ITENSNFISCAL", gErr, objNFiscal.lNumNotaFiscal)

        Case 196805, 196806
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_FILIALCLIENTEFILEMP", gErr)
        
        Case 196807
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERIR_FILIALCLIENTEFILEMP", gErr)
        
        Case 196808
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCK_FILIALCLIENTEFILEMP", gErr)
            
        Case 196809
            Call Rotina_Erro(vbOKOnly, "ERRO_ATUALIZACAO_FILIALCLIENTEFILEMP", gErr)
        
        Case 196815
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_RPS2", gErr, objRPS.lNumero, objRPS.lCliente)
            
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 196816)

    End Select

    Exit Function
    
End Function

Private Function NF_SldDiaFat_Grava_Est_TRV(ByVal lComando1 As Long, ByVal lComando2 As Long, ByVal lComando3 As Long, ByVal objNFiscal As ClassNFiscal, ByVal objTipoDocInfo As ClassTipoDocInfo) As Long
'Grava a estatística do Dia do produto

Dim lErro As Long
Dim objItemNF As New ClassItemNF
Dim objSldDiaFat As New ClassSldDiaFat
Dim objProduto As New ClassProduto
Dim iIndice As Integer

On Error GoTo Erro_NF_SldDiaFat_Grava_Est_TRV
            
    'Para cada objItemNf
    For Each objItemNF In objNFiscal.ColItensNF
                       
        objSldDiaFat.iFilialEmpresa = objNFiscal.iFilialEmpresa
        objSldDiaFat.dtData = objNFiscal.dtDataEmissao
        objSldDiaFat.sProduto = objItemNF.sProduto
            
        'Lê todos os atributos na tabela SldDiaFat e faza lock exclusive
        lErro = CF("SldDiaFat_Le_Lock", lComando1, objSldDiaFat)
        If lErro <> SUCESSO And lErro <> 52729 Then gError 196824
                        
        If (objTipoDocInfo.iFaturamento = TIPODOCINFO_FATURAMENTO_SIM) Then
        
            objSldDiaFat.dValorFaturado = objItemNF.dValorTotal
            objSldDiaFat.dTotalDescontos = objItemNF.dValorDesconto
            
            'Se for uma Nota de complemento de preço
            If objTipoDocInfo.iComplementar = DOCINFO_COMPLEMENTO Then
                'Não altera a quantidade
                objSldDiaFat.dQuantFaturada = 0
            Else
                objSldDiaFat.dQuantFaturada = objItemNF.dQuantidade
            End If
        
        End If
                        
        If lErro = SUCESSO Then 'Registro SldDiaFat existe no BD
                                    
            'Verifica se o documento é TIPODOCINFO_FATURAMENTO_SIM
            If objTipoDocInfo.iFaturamento = TIPODOCINFO_FATURAMENTO_SIM Then
            
                'Atualiza os campos referentes a notas de faturamneto em SldDiaFat
                lErro = Comando_ExecutarPos(lComando2, "UPDATE SldDiaFat SET ValorFaturado = ValorFaturado + ?, QuantFaturada = QuantFaturada + ?, TotalDescontos = TotalDescontos + ?, ValorDevolvido = ?, QuantDevolvida = ?", lComando1, objSldDiaFat.dValorFaturado, objSldDiaFat.dQuantFaturada, objSldDiaFat.dTotalDescontos, objSldDiaFat.dValorDevolvido, objSldDiaFat.dQuantDevolvida)
                If lErro <> AD_SQL_SUCESSO Then gError 196825
        
            End If
        
        Else 'Registro SldDiaFat não existe no BD

            If objNFiscal.iFilialEmpresa = 0 Then objNFiscal.iFilialEmpresa = giFilialEmpresa
            
            lErro = Comando_Executar(lComando3, "INSERT INTO SldDiaFat (FilialEmpresa, Data, Produto, ValorFaturado , QuantFaturada, TotalDescontos, ValorDevolvido, QuantDevolvida) VALUES (?,?,?,?,?,?,?,?)", objNFiscal.iFilialEmpresa, objNFiscal.dtDataEmissao, objItemNF.sProduto, objSldDiaFat.dValorFaturado, objSldDiaFat.dQuantFaturada, objSldDiaFat.dTotalDescontos, objSldDiaFat.dValorDevolvido, objSldDiaFat.dQuantDevolvida)
            If lErro <> AD_SQL_SUCESSO Then gError 196826
                    
        End If
        
    Next
    
    NF_SldDiaFat_Grava_Est_TRV = SUCESSO
    
    Exit Function
    
Erro_NF_SldDiaFat_Grava_Est_TRV:
    
    NF_SldDiaFat_Grava_Est_TRV = gErr

    Select Case gErr

        Case 196824
        
        Case 196825
            Call Rotina_Erro(vbOKOnly, "ERRO_ATUALIZACAO_SLDDIAFAT", gErr, objSldDiaFat.iFilialEmpresa, objSldDiaFat.sProduto, objSldDiaFat.dtData)
        
        Case 196826
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_SLDDIAFAT", gErr, objNFiscal.iFilialEmpresa, objItemNF.sProduto, objNFiscal.dtDataEmissao)
        
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error$, 196827)

    End Select
    
    Exit Function

End Function
        
Private Function NF_SldMesFat_Grava_Est_TRV(ByVal lComando1 As Long, ByVal lComando2 As Long, ByVal lComando3 As Long, ByVal lComando4 As Long, ByVal lComando5 As Long, ByVal lComando6 As Long, ByVal objNFiscal As ClassNFiscal, ByVal objTipoDocInfo As ClassTipoDocInfo) As Long
'Grava a estatística do Mês do produto

Dim lErro As Long
Dim objItemNF As ClassItemNF
Dim objSldMesFat As New ClassSldMesFat
Dim iMes As Integer
Dim sMes As String
Dim iIndice As Integer

On Error GoTo Erro_NF_SldMesFat_Grava_Est_TRV
            
    'Para cada objItemNf
    For Each objItemNF In objNFiscal.ColItensNF
                        
        objSldMesFat.iFilialEmpresa = objNFiscal.iFilialEmpresa
        objSldMesFat.iAno = Year(objNFiscal.dtDataEmissao)
        objSldMesFat.sProduto = objItemNF.sProduto
        
        iMes = Month(objNFiscal.dtDataEmissao)
        sMes = CStr(iMes)
                                    
        'Lê todos os atributos na tabela SldMesFat e faza lock exclusive
        lErro = CF("SldMesFat_Le_Lock_Mes", lComando1, objSldMesFat, iMes)
        If lErro <> SUCESSO And lErro <> 59264 Then gError 196828
                        
        If (objTipoDocInfo.iFaturamento = TIPODOCINFO_FATURAMENTO_SIM) Then
                    
            objSldMesFat.dValorFaturado(iMes) = objItemNF.dValorTotal
            objSldMesFat.dTotalDescontos(iMes) = objItemNF.dValorDesconto
        
            'Se for uma Nota de complemento de preço
            If objTipoDocInfo.iComplementar = DOCINFO_COMPLEMENTO Then
                'Não altera a quantidade
                objSldMesFat.dQuantFaturada(iMes) = 0
            Else
                objSldMesFat.dQuantFaturada(iMes) = objItemNF.dQuantidade
            End If
        
        End If
        
        If lErro = SUCESSO Then
        
            'Verifica se o tipo de faturamento é TIPODOCINFO_FATURAMENTO_SIM
            If objTipoDocInfo.iFaturamento = TIPODOCINFO_FATURAMENTO_SIM Then
        
                'Atualiza os campos referentes a Notas de Faturamento em SldMesFat
                lErro = Comando_ExecutarPos(lComando2, "UPDATE SldMesFat SET ValorFaturado" & sMes & " = ValorFaturado" & sMes & " + ?, QuantFaturada" & sMes & " = QuantFaturada" & sMes & " + ?, TotalDescontos" & sMes & " = TotalDescontos" & sMes & " + ?, ValorDevolvido" & sMes & " = ?, QuantDevolvida" & sMes & " = ?", lComando1, objSldMesFat.dValorFaturado(iMes), objSldMesFat.dQuantFaturada(iMes), objSldMesFat.dTotalDescontos(iMes), objSldMesFat.dValorDevolvido(iMes), objSldMesFat.dQuantDevolvida(iMes))
                If lErro <> AD_SQL_SUCESSO Then gError 196829
            
            End If
                    
        Else
            
            'Atualiza a tabela de SldMesFat
            lErro = Comando_Executar(lComando3, "INSERT INTO SldMesFat (FilialEmpresa, Ano, Produto, ValorFaturado" & sMes & ", QuantFaturada" & sMes & ", TotalDescontos" & sMes & ", ValorDevolvido" & sMes & ", QuantDevolvida" & sMes & ") VALUES (?,?,?,?,?,?,?,?)", objSldMesFat.iFilialEmpresa, objSldMesFat.iAno, objSldMesFat.sProduto, objSldMesFat.dValorFaturado(iMes), objSldMesFat.dQuantFaturada(iMes), objSldMesFat.dTotalDescontos(iMes), objSldMesFat.dValorDevolvido(iMes), objSldMesFat.dQuantDevolvida(iMes))
            If lErro <> AD_SQL_SUCESSO Then gError 196830
            
        End If
        
        If objTipoDocInfo.iFaturamento = TIPODOCINFO_FATURAMENTO_SIM Then
            
            lErro = NF_SldMesFatFilCli_Grava_Est_TRV(lComando4, lComando5, lComando6, objSldMesFat.iFilialEmpresa, objSldMesFat.iAno, objSldMesFat.sProduto, objNFiscal.lCliente, objNFiscal.iFilialCli, objSldMesFat.dQuantFaturada(iMes), objSldMesFat.dValorFaturado(iMes), 0, 0, sMes)
            If lErro <> SUCESSO Then gError 196831
            
        End If
        
    Next
            
    NF_SldMesFat_Grava_Est_TRV = SUCESSO
    
    Exit Function
    
Erro_NF_SldMesFat_Grava_Est_TRV:
    
    NF_SldMesFat_Grava_Est_TRV = gErr

    Select Case gErr

        Case 196828
        
        Case 196829
            Call Rotina_Erro(vbOKOnly, "ERRO_ATUALIZACAO_SLDMESFAT", gErr, objSldMesFat.iAno, objSldMesFat.iFilialEmpresa, objSldMesFat.sProduto)
        
        Case 196830
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_SLDMESFAT", gErr, objSldMesFat.iFilialEmpresa, objSldMesFat.sProduto, objSldMesFat.iAno)
        
        Case 196831
        
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error$, 196832)

    End Select
    
    Exit Function

End Function

Private Function NF_SldMesFatFilCli_Grava_Est_TRV(ByVal lComando1 As Long, ByVal lComando2 As Long, ByVal lComando3 As Long, iFilialEmpresa As Integer, iAno As Integer, sCodProduto As String, lCliente As Long, iFilialCliente As Integer, dQtdFaturada As Double, dValorFaturado As Double, dQtdDevolvida As Double, dValorDevolvido As Double, sMes As String)

Dim lErro As Long
Dim iFilial As Integer

On Error GoTo Erro_NF_SldMesFatFilCli_Grava_Est_TRV
    
    lErro = Comando_ExecutarPos(lComando1, "SELECT FilialEmpresa FROM SldMesFatFilCli WHERE FilialEmpresa = ? AND Ano = ? AND Produto = ? AND Cliente = ? AND Filial = ?", 0, iFilial, iFilialEmpresa, iAno, sCodProduto, lCliente, iFilialCliente)
    If lErro <> AD_SQL_SUCESSO Then gError 196833
    
    lErro = Comando_BuscarPrimeiro(lComando1)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196834
    
    If lErro = AD_SQL_SUCESSO Then
    
        'Lock
        lErro = Comando_LockExclusive(lComando1)
        If lErro <> AD_SQL_SUCESSO Then gError 196835
        
        'Atualiza
        lErro = Comando_ExecutarPos(lComando2, "UPDATE SldMesFatFilCli SET QtdFaturada" & sMes & " = QtdFaturada" & sMes & " + ?, ValorFaturado" & sMes & " = ValorFaturado" & sMes & " + ?, QtdDevolvida" & sMes & " = QtdDevolvida" & sMes & " + ?, ValorDevolvido" & sMes & " = ValorDevolvido" & sMes & " + ? ", lComando1, dQtdFaturada, dValorFaturado, dQtdDevolvida, dValorDevolvido)
        If lErro <> AD_SQL_SUCESSO Then gError 196836
    
    Else
    
        lErro = Comando_Executar(lComando3, "INSERT INTO SldMesFatFilCli (FilialEmpresa, Ano, Produto, Cliente, Filial, QtdFaturada" & sMes & ", ValorFaturado" & sMes & ", QtdDevolvida" & sMes & ", ValorDevolvido" & sMes & " ) VALUES (?,?,?,?,?,?,?,?,?)", iFilialEmpresa, iAno, sCodProduto, lCliente, iFilialCliente, dQtdFaturada, dValorFaturado, dQtdDevolvida, dValorDevolvido)
        If lErro <> AD_SQL_SUCESSO Then gError 196837
    
    End If

    NF_SldMesFatFilCli_Grava_Est_TRV = SUCESSO
    
    Exit Function
    
Erro_NF_SldMesFatFilCli_Grava_Est_TRV:

    NF_SldMesFatFilCli_Grava_Est_TRV = gErr
    
    Select Case gErr
  
        Case 196833, 196834
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_SLDMESFATFILCLI", gErr, iAno, iFilialEmpresa, sCodProduto, lCliente, iFilialCliente)
        
        Case 196835
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCK_SLDMESFATFILCLI", gErr, iAno, iFilialEmpresa, sCodProduto, lCliente, iFilialCliente)
        
        Case 196836
            Call Rotina_Erro(vbOKOnly, "ERRO_ATUALIZACAO_SLDMESFATFILCLI", gErr, iAno, iFilialEmpresa, sCodProduto, lCliente, iFilialCliente)
        
        Case 196837
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_SLDMESFATFILCLI", gErr, iAno, iFilialEmpresa, sCodProduto, lCliente, iFilialCliente)
        
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error$, 196838)

    End Select
    
    Exit Function

End Function

Private Function NF_NotaFiscal_Grava_Fis_TRV(ByVal lComando1 As Long, ByVal lComando2 As Long, ByVal lComando3 As Long, ByVal lComando4 As Long, ByVal lComando5 As Long, ByVal lComando6 As Long, ByVal lComando7 As Long, ByVal lComando8 As Long, ByVal lComando9 As Long, ByVal lComando10 As Long, ByVal lComando11 As Long, ByVal lComando12 As Long, ByVal lComando13 As Long, ByVal lComando14 As Long, ByVal objNFiscal As ClassNFiscal) As Long
'Grava nas Tabelas de Livros Fiscais a Nota Fiscal

Dim lErro As Long
Dim objLivRegES As New ClassLivRegES
Dim objLivRegESEmitentes As New ClassLivRegESEmitentes
Dim colLivRegESItemNF As New Collection
Dim colLivRegESLinha As New Collection
Dim objNFTRV As ClassNFTRV

On Error GoTo Erro_NF_NotaFiscal_Grava_Fis_TRV

    Set objNFTRV = objNFiscal.objInfoUsu
    
    'só vou gerar info para notas que interessem p/livros de ICMS/IPI
    If objNFTRV.objTipoDocInfo.iModeloArqICMS <> 0 Then
  
        'Gera o Registro de LivRegES
        lErro = NF_Saida_Grava_LivRegES_TRV(lComando1, lComando2, lComando3, objNFiscal, objLivRegES, objNFTRV.objTipoDocInfo, objNFTRV.objCliente, objNFTRV.objFilialCliente, objNFTRV.objEnderecoCli)
        If lErro <> SUCESSO Then gError 196838
        
        'Gera as linhas para livros fiscais
        lErro = NF_NotaFiscal_GeraLinhas_Fis_TRV(lComando4, lComando5, lComando6, lComando7, lComando8, lComando11, lComando12, objNFTRV.objTipoDocInfo.iModeloArqICMS, colLivRegESLinha, colLivRegESItemNF, objNFiscal, objLivRegES)
        If lErro <> SUCESSO Then gError 196839
        
        'Grava as Coleções, que estão ordenadas e completadas com o Complemento
        lErro = NF_Grava_LivRegES_Colecao_TRV(lComando9, lComando10, lComando13, lComando14, colLivRegESLinha, colLivRegESItemNF)
        If lErro <> SUCESSO Then gError 196840

    End If
    
    NF_NotaFiscal_Grava_Fis_TRV = SUCESSO
    
    Exit Function
    
Erro_NF_NotaFiscal_Grava_Fis_TRV:

    NF_NotaFiscal_Grava_Fis_TRV = gErr
    
    Select Case gErr
        
        Case 196838, 196839, 196840
    
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 196841)

    End Select
    
    Exit Function
        
End Function

Private Function NF_Saida_Grava_LivRegES_TRV(ByVal lComando As Long, ByVal lComando2 As Long, ByVal lComando3 As Long, ByVal objNFiscal As ClassNFiscal, ByVal objLivRegES As ClassLivRegES, ByVal objTipoDocInfo As ClassTipoDocInfo, ByVal objCliente As ClassCliente, ByVal objFilialCliente As ClassFilialCliente, ByVal objEndereco As ClassEndereco) As Long
'Preenche o objLivRegES com os dados da Nota Fiscal

Dim lErro As Long
Dim lNumIntDoc As Long
Dim objFilialEmpresa As New AdmFiliais
Dim sInscricaoAux As String

On Error GoTo Erro_NF_Saida_Grava_LivRegES_TRV
    
    objLivRegES.iFilialEmpresa = objNFiscal.iFilialEmpresa
    objLivRegES.dtData = objNFiscal.dtDataEmissao
    objLivRegES.dtDataEmissao = objNFiscal.dtDataEmissao
    objLivRegES.iDestinatario = objTipoDocInfo.iDestinatario
    objLivRegES.iEmitente = objTipoDocInfo.iEmitente
    objLivRegES.iModelo = objTipoDocInfo.iModeloArqICMS
    objLivRegES.iOrigem = objTipoDocInfo.iOrigem
    objLivRegES.iSituacao = SITUACAO_NORMAL
    objLivRegES.iStatusLivro = STATUS_FIS_ORIGINAL
    objLivRegES.iTipo = TIPO_REGES_SAIDA
    objLivRegES.iFreteRespons = objNFiscal.iFreteRespons
    
    'inclui este teste em funcao do conhecimentos de transporte
    If Not (objNFiscal.objTributacaoNF Is Nothing) Then
        objLivRegES.dPISValor = objNFiscal.objTributacaoNF.dPISCredito
        objLivRegES.dCOFINSValor = objNFiscal.objTributacaoNF.dCOFINSCredito
    Else
        objLivRegES.dPISValor = 0
        objLivRegES.dCOFINSValor = 0
    End If
    
    'Gera número automático para o Item de apuração ICMS
    lErro = CF("Config_ObterNumInt2", lComando2, lComando3, "FISConfig", "FISC_NUM_INT_LIVREGES", lNumIntDoc)
    If lErro <> SUCESSO Then gError 196842
    
    objLivRegES.lNumIntDocOrigem = objNFiscal.lNumIntDoc
    objLivRegES.lNumIntDoc = lNumIntDoc
    objLivRegES.iTipoNumIntDocOrigem = TIPO_NUMINTDOC_ORIGEM_NOTAFISCAL
    objLivRegES.lNumIntNF = objNFiscal.lNumIntDoc
    objLivRegES.lNumNotaFiscal = objNFiscal.lNumNotaFiscal
    objLivRegES.sSerie = objNFiscal.sSerie
        
    'Arrumar uma solução viavel
    objLivRegES.sCgc = objFilialCliente.sCgc
    Call Formata_String_Numero(objFilialCliente.sInscricaoEstadual, sInscricaoAux)
    objLivRegES.sInscricaoEstadual = sInscricaoAux
    objLivRegES.sNome = objCliente.sRazaoSocial
    
    If objEndereco.iCodigoPais <> PAIS_BRASIL Then
        objLivRegES.sUF = "EX"
    Else
        objLivRegES.sUF = objEndereco.sSiglaEstado
    End If
    
    'Faz a inserção na Tabela de LivResES
    lErro = Comando_Executar(lComando, "INSERT INTO LivRegES (NumIntDoc, TipoNumIntDocOrigem, NumIntDocOrigem, StatusLivro, Tipo, CGC, InscricaoEstadual, Nome, Data, DataEmissao, UF, Serie, NumNotaFiscal, Situacao, Modelo, Emitente, Destinatario, Origem, NumIntEmitente, FilialEmpresa, CIF_FOB, PISValor, COFINSValor) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)", objLivRegES.lNumIntDoc, objLivRegES.iTipoNumIntDocOrigem, objLivRegES.lNumIntDocOrigem, objLivRegES.iStatusLivro, objLivRegES.iTipo, objLivRegES.sCgc, objLivRegES.sInscricaoEstadual, objLivRegES.sNome, objLivRegES.dtData, objLivRegES.dtDataEmissao, objLivRegES.sUF, objLivRegES.sSerie, objLivRegES.lNumNotaFiscal, objLivRegES.iSituacao, objLivRegES.iModelo, objLivRegES.iEmitente, objLivRegES.iDestinatario, objLivRegES.iOrigem, objLivRegES.lNumIntEmitente, objLivRegES.iFilialEmpresa, objLivRegES.iFreteRespons, objLivRegES.dPISValor, objLivRegES.dCOFINSValor)
    If lErro <> AD_SQL_SUCESSO Then gError 196843
                                
    NF_Saida_Grava_LivRegES_TRV = SUCESSO
    
    Exit Function
    
Erro_NF_Saida_Grava_LivRegES_TRV:

    NF_Saida_Grava_LivRegES_TRV = gErr

    Select Case gErr

        Case 196842
        
        Case 196843
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_LIVREGES", gErr)
        
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 196844)

    End Select
    
    Exit Function

End Function

Private Function NF_NotaFiscal_GeraLinhas_Fis_TRV(ByVal lComando1 As Long, ByVal lComando2 As Long, ByVal lComando3 As Long, ByVal lComando4 As Long, ByVal lComando5 As Long, ByVal lComando6 As Long, ByVal lComando7 As Long, ByVal iModeloArqICMS As Integer, ByVal colLivRegESLinha As Collection, ByVal colLivRegESItemNF As Collection, ByVal objNFiscal As ClassNFiscal, ByVal objLivRegES As ClassLivRegES) As Long
'Gera as linhas para livros fiscais de acordo com o valor passado iModeloArqICMS
'Em geral, iModeloArqICMS será 1, o que indica que as linhas serão geradas no Case Else
'Caso o valor seja diferente de 1, significa que será gerada uma linha "especial"

Dim lErro As Long
Dim objItemNF As New ClassItemNF
Dim objLivRegESCadProd As New ClassLivRegESCadProd
Dim objLivRegESLinha As ClassLivRegESLinha
Dim objNFiscalOrig As New ClassNFiscal

On Error GoTo Erro_NF_NotaFiscal_GeraLinhas_Fis_TRV
            
    'Varre os Itens para gerar LivRegLinha, LivRegESNF, LivRegESCadProd
    For Each objItemNF In objNFiscal.ColItensNF
        
        'Grava os dados da Nota para a coleção colLivRegESLinha
        lErro = NF_Move_Tela_LivRegESLinha_Obj_TRV(objNFiscal, objItemNF.objTributacaoItemNF, objItemNF.dValorTotal, colLivRegESLinha, objLivRegES, objItemNF.dValorDesconto, objItemNF.dValorDescGlobal)
        If lErro <> SUCESSO Then gError 196845
        
        'Move os dados do Item NF para a coleção colLivRegESCadProd
        lErro = NF_Grava_LivRegESCadProd_TRV(lComando1, lComando2, lComando3, lComando4, lComando6, objLivRegES.dtData, objItemNF, objLivRegESCadProd, objNFiscal)
        If lErro <> SUCESSO Then gError 196846
        
        'Move os dados do Item NF para a coleção colLivRegESItemNF
        lErro = NF_Move_Memoria_LivRegESItemNF_TRV(lComando5, lComando7, objItemNF, objNFiscal, objLivRegES, objLivRegESCadProd, colLivRegESItemNF)
        If lErro <> SUCESSO Then gError 196847
                
    Next

    NF_NotaFiscal_GeraLinhas_Fis_TRV = SUCESSO
    
    Exit Function

Erro_NF_NotaFiscal_GeraLinhas_Fis_TRV:

    NF_NotaFiscal_GeraLinhas_Fis_TRV = gErr
    
    Select Case gErr
    
        Case 196845 To 196847
        
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 196848)
    
    End Select
    
    Exit Function
        
End Function

Private Function NF_Grava_LivRegES_Colecao_TRV(ByVal lComando1 As Long, ByVal lComando2 As Long, ByVal lComando3 As Long, ByVal lComando4 As Long, ByVal colLivRegESLinha As Collection, ByVal colLivRegESItemNF As Collection) As Long

Dim lErro As Long
Dim objLivRegESItemNF As New ClassLivRegESItemNF
Dim objLivRegESLinha As New ClassLivRegESLinha
Dim lNumIntDoc As Long

On Error GoTo Erro_NF_Grava_LivRegES_Colecao_TRV
    
    For Each objLivRegESLinha In colLivRegESLinha
        
        'Gera número automático para o Item de apuração ICMS
        lErro = CF("Config_ObterNumInt2", lComando3, lComando4, "FISConfig", "FISC_NUM_INT_LIVREGESLINHA", lNumIntDoc)
        If lErro <> SUCESSO Then gError 196849
    
        objLivRegESLinha.lNumIntDoc = lNumIntDoc
        
        'insere as linhas do Livro Fiscal desta Nota Fiscal
        lErro = Comando_Executar(lComando1, "INSERT INTO LivRegESLinha (NumIntDoc, NumIntDocRegES, NaturezaOp, ValorTotal, ValorICMSBase, ValorICMS, ValorICMSIsentoNaoTrib, ValorICMSOutras, ValorICMSSubstBase, ValorICMSSubstRet, AliquotaICMS, ValorDespAcess, ValorIPI, AliquotaIPI, ValorIPIBase, ValorIPIIsentoNaoTrib, ValorIPIOutras, ClassifContabil, ValorContabil, ObservacaoLivFisc, CodigoICMS, CodigoIPI) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)", _
            objLivRegESLinha.lNumIntDoc, objLivRegESLinha.lNumIntDocRegES, objLivRegESLinha.sNaturezaOp, Arredonda_Moeda(objLivRegESLinha.dValorTotal), Arredonda_Moeda(objLivRegESLinha.dValorICMSBase), Arredonda_Moeda(objLivRegESLinha.dValorICMS), Arredonda_Moeda(objLivRegESLinha.dValorICMSIsentoNaoTrib), Arredonda_Moeda(objLivRegESLinha.dValorICMSOutras), Arredonda_Moeda(objLivRegESLinha.dValorICMSSubstBase), Arredonda_Moeda(objLivRegESLinha.dValorICMSSubstRet), objLivRegESLinha.dAliquotaICMS, Arredonda_Moeda(objLivRegESLinha.dValorDespAcess), Arredonda_Moeda(objLivRegESLinha.dValorIPI), objLivRegESLinha.dAliquotaIPI, Arredonda_Moeda(objLivRegESLinha.dValorIPIBase), _
            Arredonda_Moeda(objLivRegESLinha.dValorIPIIsentoNaoTrib), Arredonda_Moeda(objLivRegESLinha.dValorIPIOutras), objLivRegESLinha.sClassifContabil, Arredonda_Moeda(objLivRegESLinha.dValorContabil), objLivRegESLinha.sObservacaoLivFisc, objLivRegESLinha.iCodigoICMS, objLivRegESLinha.iCodigoIPI)
        If lErro <> AD_SQL_SUCESSO Then gError 196850
    
    Next
    
    For Each objLivRegESItemNF In colLivRegESItemNF
        
        'insere as linhas do Livro Fiscal desta Nota Fiscal
        lErro = Comando_Executar(lComando2, "INSERT INTO LivRegESItemNF (NumIntDoc, NumIntDocRegES, NumItem, CFOP, NumIntCadProd, Quantidade, ValorProduto, ValorDescontoDespAcess, ValorICMSBase, ValorICMSSubstBase, ValorIPI, AliquotaICMS, TipoTribICMS, TipoTribIPI, ValorICMS, ValorIPIBase, AliquotaIPI, RedBaseICMS, RedBaseIPI, TipoTributacao, AliquotaSubst, ValorSubst) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)", _
        objLivRegESItemNF.lNumIntDoc, objLivRegESItemNF.lNumIntDocRegES, objLivRegESItemNF.iNumItem, objLivRegESItemNF.sCFOP, objLivRegESItemNF.lNumIntCadProd, objLivRegESItemNF.dQuantidade, objLivRegESItemNF.dValorProduto, objLivRegESItemNF.dValorDescontoDespAcess, objLivRegESItemNF.dValorICMSBase, objLivRegESItemNF.dValorICMSSubstBase, objLivRegESItemNF.dValorIPI, objLivRegESItemNF.dAliquotaICMS, objLivRegESItemNF.iTipoTribICMS, objLivRegESItemNF.iTipoTribIPI, objLivRegESItemNF.dValorICMS, objLivRegESItemNF.dValorIPIBase, objLivRegESItemNF.dAliquotaIPI, objLivRegESItemNF.dRedBaseICMS, objLivRegESItemNF.dRedBaseIPI, objLivRegESItemNF.iTipoTributacao, objLivRegESItemNF.dAliquotaSubst, objLivRegESItemNF.dValorSubst)
        If lErro <> AD_SQL_SUCESSO Then gError 196851
    
    Next
    
    NF_Grava_LivRegES_Colecao_TRV = SUCESSO
    
    Exit Function
    
Erro_NF_Grava_LivRegES_Colecao_TRV:

    NF_Grava_LivRegES_Colecao_TRV = gErr
    
    Select Case gErr
        
        Case 196849

        Case 196850
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_LIVREGESLINHA", gErr)
        
        Case 196851
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_LIVREGESITEMNF", gErr)
        
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 196852)

    End Select
    
    Exit Function

End Function

Private Function NF_Move_Tela_LivRegESLinha_Obj_TRV(ByVal objNFiscal As ClassNFiscal, ByVal objTributacaoObj As Object, ByVal dValorObj As Double, ByVal colLivRegESLinha As Collection, ByVal objLivRegES As ClassLivRegES, ByVal dValorDesconto As Double, ByVal dValorDescGlobal As Double) As Long

Dim iEncontrou As Integer
Dim objLivRegESLinha As New ClassLivRegESLinha
Dim objTipoTribICMS As ClassTipoTribICMS
Dim objTipoTribIPI As ClassTipoTribIPI
Dim lErro As Long, dAliquotaIPI As Double, dAliquotaICMS As Double
Dim objProduto As New ClassProduto, dValorIPIBase As Double
Dim dValorICMSBase As Double, dValorICMSOutras As Double
Dim objEstoqueProduto As New ClassEstoqueProduto
Dim lNumIntDoc As Long, dDifBaseObj As Double
Dim objTipoDeTributacao As ClassTipoDeTributacaoMovto, dICMSOutrasAux As Double
Dim sContaContabil As String, dICMSValRedBase As Double, dIPIValRedBase As Double
Dim objNFTRV As ClassNFTRV

On Error GoTo Erro_NF_Move_Tela_LivRegESLinha_Obj_TRV

    Set objNFTRV = objNFiscal.objInfoUsu
    Set objTipoTribICMS = objNFTRV.objTipoTribICMS
    Set objTipoTribIPI = objNFTRV.objTipoTribIPI
    Set objTipoDeTributacao = objNFTRV.objTipoDeTributacaoMovto

    If objTributacaoObj.dICMSCredito <> 0 Then
        dICMSValRedBase = Round(objTributacaoObj.dICMSBase * objTributacaoObj.dICMSPercRedBase, 4)
        dValorICMSBase = Round(objTributacaoObj.dICMSBase - dICMSValRedBase, 4)
        dAliquotaICMS = objTributacaoObj.dICMSAliquota
    End If
    
    If objTributacaoObj.dIPICredito <> 0 Then
        dIPIValRedBase = Round(objTributacaoObj.dIPIBaseCalculo * objTributacaoObj.dIPIPercRedBase, 4)
        dValorIPIBase = Round(objTributacaoObj.dIPIBaseCalculo - dIPIValRedBase, 4)
        dAliquotaIPI = objTributacaoObj.dIPIAliquota
    End If

    'Trata o Preenchimento do objLivRegESLinha
    For Each objLivRegESLinha In colLivRegESLinha
    
        'verifica se já existe na colecao item com as mesmas Natureza, Aliquotas (IPI e ICMS), conta contabil e colunas no livro (IPI e ICMS)
        If objLivRegESLinha.sNaturezaOp = objTributacaoObj.sNaturezaOp And objLivRegESLinha.dAliquotaICMS = dAliquotaICMS And objLivRegESLinha.dAliquotaIPI = dAliquotaIPI And objLivRegESLinha.sClassifContabil = objNFTRV.objProduto.sContaContabil Then
            
            iEncontrou = 1
                    
            Exit For
        
        End If
    
    Next
    
    'Se não encontrou nenhuma Linha com a mesma Natureza e Alíquota
    If iEncontrou = 0 Then
        
        'insere uma Linha
        Set objLivRegESLinha = New ClassLivRegESLinha
        
        objLivRegESLinha.lNumIntDocRegES = objLivRegES.lNumIntDoc
        
        objLivRegESLinha.dAliquotaICMS = dAliquotaICMS
        objLivRegESLinha.sNaturezaOp = objTributacaoObj.sNaturezaOp
        objLivRegESLinha.dAliquotaIPI = dAliquotaIPI
        objLivRegESLinha.iCodigoICMS = objTipoTribICMS.iColunaNoLivroSaida
        objLivRegESLinha.iCodigoIPI = objTipoTribIPI.iColunaNoLivro
        objLivRegESLinha.sClassifContabil = objNFTRV.objProduto.sContaContabil
        
        colLivRegESLinha.Add objLivRegESLinha
        
    End If
            
    objLivRegESLinha.dValorContabil = Round(objLivRegESLinha.dValorContabil + dValorObj + objTributacaoObj.dIPIValor - dValorDescGlobal, 4)
    objLivRegESLinha.dValorTotal = Round(objLivRegESLinha.dValorTotal + dValorObj + objTributacaoObj.dIPIValor - dValorDescGlobal, 4)
    objLivRegESLinha.dValorICMSBase = Round(objLivRegESLinha.dValorICMSBase + dValorICMSBase, 4)
    objLivRegESLinha.dValorIPIBase = Round(objLivRegESLinha.dValorIPIBase + dValorIPIBase, 4)
            
    If objTributacaoObj.dICMSCredito <> 0 Then
        objLivRegESLinha.dValorICMS = Round(objLivRegESLinha.dValorICMS + objTributacaoObj.dICMSValor, 4)
        objLivRegESLinha.dValorICMSIsentoNaoTrib = Round(objLivRegESLinha.dValorICMSIsentoNaoTrib + dICMSValRedBase, 4)
        If objTributacaoObj.dICMSBase < (dValorObj - dValorDescGlobal) Then
            objLivRegESLinha.dValorICMSOutras = Round(objLivRegESLinha.dValorICMSOutras + dValorObj - objTributacaoObj.dICMSBase - dValorDescGlobal, 4)
        End If

    ElseIf objTipoTribICMS.iColunaNoLivroSaida = TIPO_ISENTO_NAO_TRIBUTADO Then
        objLivRegESLinha.dValorICMSIsentoNaoTrib = Round(objLivRegESLinha.dValorICMSIsentoNaoTrib + IIf(objTributacaoObj.dICMSBase <= (dValorObj - dValorDescGlobal), dValorObj - dValorDescGlobal, objTributacaoObj.dICMSBase), 4)
    Else
        dICMSOutrasAux = IIf(objTributacaoObj.dICMSBase <= (dValorObj - dValorDescGlobal), dValorObj - dValorDescGlobal, objTributacaoObj.dICMSBase)
        If objTipoDeTributacao.iICMSBaseComIPI And dICMSOutrasAux > objTributacaoObj.dIPIValor Then
            dICMSOutrasAux = dICMSOutrasAux - objTributacaoObj.dIPIValor
        End If
        objLivRegESLinha.dValorICMSOutras = Round(objLivRegESLinha.dValorICMSOutras + dICMSOutrasAux, 4)
    End If
    
    If gobjCRFAT.iIPIAbateDesconto <> 0 Then
    
        If objTributacaoObj.dIPICredito <> 0 Then
            objLivRegESLinha.dValorIPI = Round(objLivRegESLinha.dValorIPI + objTributacaoObj.dIPIValor, 4)
            objLivRegESLinha.dValorIPIIsentoNaoTrib = Round(objLivRegESLinha.dValorIPIIsentoNaoTrib + dIPIValRedBase, 4)
            If objTributacaoObj.dIPIBaseCalculo < (dValorObj - dValorDescGlobal) Then
                objLivRegESLinha.dValorIPIOutras = Round(objLivRegESLinha.dValorIPIOutras + dValorObj - objTributacaoObj.dIPIBaseCalculo - dValorDescGlobal, 4)
            End If
        ElseIf objTipoTribIPI.iColunaNoLivro = TIPO_ISENTO_NAO_TRIBUTADO Then
            objLivRegESLinha.dValorIPIIsentoNaoTrib = Round(objLivRegESLinha.dValorIPIIsentoNaoTrib + dValorObj - dValorDescGlobal, 4)
        Else
            objLivRegESLinha.dValorIPIOutras = Round(objLivRegESLinha.dValorIPIOutras + dValorObj - dValorDescGlobal, 4)
        End If

    Else
    
        If objTributacaoObj.dIPICredito <> 0 Then
            objLivRegESLinha.dValorIPI = Round(objLivRegESLinha.dValorIPI + objTributacaoObj.dIPIValor, 4)
            objLivRegESLinha.dValorIPIIsentoNaoTrib = Round(objLivRegESLinha.dValorIPIIsentoNaoTrib + dIPIValRedBase, 4)
            If objTributacaoObj.dIPIBaseCalculo < (dValorObj) Then
                objLivRegESLinha.dValorIPIOutras = Round(objLivRegESLinha.dValorIPIOutras + dValorObj - objTributacaoObj.dIPIBaseCalculo, 4)
            End If
        ElseIf objTipoTribIPI.iColunaNoLivro = TIPO_ISENTO_NAO_TRIBUTADO Then
            objLivRegESLinha.dValorIPIIsentoNaoTrib = Round(objLivRegESLinha.dValorIPIIsentoNaoTrib + dValorObj, 4)
        Else
            objLivRegESLinha.dValorIPIOutras = Round(objLivRegESLinha.dValorIPIOutras + dValorObj - dValorDescGlobal, 4) 'alterado em 13/06/07 para abater o desconto
        End If
    
    End If
    
    NF_Move_Tela_LivRegESLinha_Obj_TRV = SUCESSO
     
    Exit Function
    
Erro_NF_Move_Tela_LivRegESLinha_Obj_TRV:

    NF_Move_Tela_LivRegESLinha_Obj_TRV = gErr
     
    Select Case gErr

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 196853)
     
    End Select
     
    Exit Function
    
End Function

Private Function NF_Grava_LivRegESCadProd_TRV(ByVal lComando As Long, ByVal lComando1 As Long, ByVal lComando2 As Long, ByVal lComando3 As Long, ByVal lComando4 As Long, ByVal dtData As Date, ByVal objItemNF As ClassItemNF, objLivRegESCadProd As ClassLivRegESCadProd, ByVal objNF As ClassNFiscal) As Long
'Preenhe o objLivRegES com os dados do item da Nota Fiscal

Dim lErro As Long
Dim lNumIntDoc As Long
Dim objProduto As New ClassProduto
Dim objTipoTribICMS As New ClassTipoTribICMS
Dim dtDataInicialAnterior As Date
Dim sCodigoIpiAux As String
Dim objNFTRV As ClassNFTRV

On Error GoTo Erro_NF_Grava_LivRegESCadProd_TRV

    Set objNFTRV = objNF.objInfoUsu

    'Lê no BD para ver se este Produto já não está cadastrado na tabela LivResESCadProd
    lErro = Comando_ExecutarPos(lComando, "SELECT NumIntDoc, DataInicial FROM LivRegESCadProd WHERE Produto = ? ORDER BY DataInicial", 0, lNumIntDoc, dtDataInicialAnterior, objItemNF.sProduto)
    If lErro <> AD_SQL_SUCESSO Then gError 196854

    lErro = Comando_BuscarPrimeiro(lComando)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196855

    'Se não estiver então preenche o objeto
    If lErro = AD_SQL_SEM_DADOS Then
    
        Set objLivRegESCadProd = New ClassLivRegESCadProd

        objLivRegESCadProd.dAliquotaICMS = 0
        objLivRegESCadProd.dAliquotaIPI = 0
        objLivRegESCadProd.dBaseCalculoICMSSubst = 0
        objLivRegESCadProd.dReducaoBaseCalculoICMS = 0
        objLivRegESCadProd.dtDataFinal = DATA_NULA
        objLivRegESCadProd.dtDataInicial = dtData
        
        'Gera número automático para o Item de apuração ICMS
        lErro = CF("Config_ObterNumInt2", lComando3, lComando4, "FISConfig", "FISC_NUM_INT_LIVREGES_CADPROD", lNumIntDoc)
        If lErro <> SUCESSO Then gError 196856
        
        objLivRegESCadProd.lNumIntDoc = lNumIntDoc
        
        objLivRegESCadProd.sDescricao = left(objItemNF.sDescricaoItem, 50)
        objLivRegESCadProd.sProduto = objItemNF.sProduto
        objLivRegESCadProd.sSiglaUM = objItemNF.sUnidadeMed
        
        Set objProduto = objNFTRV.objProduto
        Set objTipoTribICMS = objNFTRV.objTipoTribICMS
            
        objLivRegESCadProd.sCodigoNCM = Mid(objProduto.sIPICodigo, 1, 8)
        
        objLivRegESCadProd.sSituacaoTrib = CStr(objProduto.iOrigemMercadoria) & left(CStr(objTipoTribICMS.iTipoTribCST), 1)
        
        'Faz a inserção na Tabela de LivResESCadProd
        lErro = Comando_Executar(lComando1, "INSERT INTO LivRegESCadProd ( NumIntDoc, Produto, CodigoNCM, Descricao, SiglaUM, SituacaoTrib, AliquotaIPI, AliquotaICMS, ReducaoBaseCalculoICMS, BaseCalculoICMSSubst, DataInicial) VALUES (?,?,?,?,?,?,?,?,?,?,?)", objLivRegESCadProd.lNumIntDoc, objLivRegESCadProd.sProduto, objLivRegESCadProd.sCodigoNCM, objLivRegESCadProd.sDescricao, objLivRegESCadProd.sSiglaUM, objLivRegESCadProd.sSituacaoTrib, objLivRegESCadProd.dAliquotaIPI, objLivRegESCadProd.dAliquotaICMS, objLivRegESCadProd.dReducaoBaseCalculoICMS, objLivRegESCadProd.dBaseCalculoICMSSubst, objLivRegESCadProd.dtDataInicial)
        If lErro <> AD_SQL_SUCESSO Then gError 196857
        
    Else
    
        If dtDataInicialAnterior > dtData Then
        
            'Atualiza a data inicial
            lErro = Comando_ExecutarPos(lComando2, "UPDATE LivRegESCadProd SET DataInicial = ?", lComando, dtData)
            If lErro <> AD_SQL_SUCESSO Then gError 196858
        
        End If
    
    End If
    
    objLivRegESCadProd.lNumIntDoc = lNumIntDoc
    
    NF_Grava_LivRegESCadProd_TRV = SUCESSO
    
    Exit Function
    
Erro_NF_Grava_LivRegESCadProd_TRV:

    NF_Grava_LivRegESCadProd_TRV = gErr

    Select Case gErr

        Case 196854, 196855
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_LIVREGESCADPROD", gErr)
        
        Case 196856

        Case 196857
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_LIVREGESCADPROD", gErr)
        
        Case 196858
            Call Rotina_Erro(vbOKOnly, "ERRO_ATUALIZACAO_LIVREGESCADPROD", gErr)
        
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 196859)

    End Select
    
    Exit Function

End Function

Private Function NF_Move_Memoria_LivRegESItemNF_TRV(ByVal lComando1 As Long, ByVal lComando2 As Long, ByVal objItemNF As ClassItemNF, ByVal objNFiscal As ClassNFiscal, ByVal objLivRegES As ClassLivRegES, ByVal objLivRegESCadProd As ClassLivRegESCadProd, ByVal colLivRegESItemNF As Collection) As Long
'Preenhe o objLivRegES com os dados do item da Nota Fiscal

Dim lErro As Long
Dim lNumIntDoc As Long
Dim objLivRegESItemNF As New ClassLivRegESItemNF

On Error GoTo Erro_NF_Move_Memoria_LivRegESItemNF_TRV

    Set objLivRegESItemNF = New ClassLivRegESItemNF
    
    With objItemNF.objTributacaoItemNF
        objLivRegESItemNF.dAliquotaICMS = .dICMSAliquota
        objLivRegESItemNF.dQuantidade = objItemNF.dQuantidade
        objLivRegESItemNF.dValorICMSBase = .dICMSBase
        objLivRegESItemNF.dValorICMSSubstBase = .dICMSSubstBase
        objLivRegESItemNF.dValorIPI = .dIPIValor
        objLivRegESItemNF.dValorProduto = Round(objItemNF.dPrecoUnitario * objItemNF.dQuantidade, 2)
        objLivRegESItemNF.iNumItem = objItemNF.iItem
        objLivRegESItemNF.dValorDescontoDespAcess = Round(objItemNF.dValorDesconto + objItemNF.dValorDescGlobal, 2)
        objLivRegESItemNF.iTipoTribICMS = .iICMSTipo
        objLivRegESItemNF.iTipoTribIPI = .iIPITipo
        objLivRegESItemNF.dAliquotaIPI = .dIPIAliquota
        objLivRegESItemNF.dRedBaseICMS = .dICMSPercRedBase
        objLivRegESItemNF.dRedBaseIPI = .dIPIPercRedBase
        objLivRegESItemNF.iTipoTributacao = .iTipoTributacao
        objLivRegESItemNF.dAliquotaSubst = .dICMSSubstAliquota
        objLivRegESItemNF.dValorSubst = .dICMSSubstValor
        objLivRegESItemNF.dValorICMS = .dICMSValor
        objLivRegESItemNF.dValorIPIBase = .dIPIBaseCalculo
    End With
    
    'Gera número automático para o Item de apuração ICMS
    lErro = CF("Config_ObterNumInt2", lComando1, lComando2, "FISConfig", "FISC_NUM_INT_LIVREGES_ITEMNF", lNumIntDoc)
    If lErro <> SUCESSO Then gError 196860
    
    objLivRegESItemNF.lNumIntDoc = lNumIntDoc
    objLivRegESItemNF.sCFOP = objItemNF.objTributacaoItemNF.sNaturezaOp
    
    objLivRegESItemNF.lNumIntCadProd = objLivRegESCadProd.lNumIntDoc
    objLivRegESItemNF.lNumIntDocRegES = objLivRegES.lNumIntDoc
        
    colLivRegESItemNF.Add objLivRegESItemNF
    
    NF_Move_Memoria_LivRegESItemNF_TRV = SUCESSO
    
    Exit Function
    
Erro_NF_Move_Memoria_LivRegESItemNF_TRV:

    NF_Move_Memoria_LivRegESItemNF_TRV = gErr

    Select Case gErr
        
        Case 196860
        
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 196861)

    End Select
    
    Exit Function

End Function

Public Function NF_Converte_RPS_TRV(ByVal objNF As ClassNFiscal, ByVal objRPS As ClassRPS) As Long

Dim lErro As Long
Dim objItemNF As ClassItemNF
Dim sMensagem As String
Dim objProduto As ClassProduto
Dim dValorServico As Double
Dim objProdutoCategoria As ClassProdutoCategoria
Dim bAchou As Boolean
Dim lCodServico As Long
Dim bTemProdutoNaoServico As Boolean
Dim iIndice As Integer
Dim objNFTRV As ClassNFTRV
Dim objCliente As ClassCliente
Dim objFilialCliente As ClassFilialCliente
Dim objEndereco As ClassEndereco
Dim sStringAux As String
Dim dAliquotaPadrao As Double, bPossuiAliqDif As Boolean, dAliquotaMedia As Double
Dim iItem As Integer, sNumFat As String, iPOS As Integer
Dim sMensagemAux As String

On Error GoTo Erro_NF_Converte_RPS_TRV

    Set objNFTRV = objNF.objInfoUsu

    objRPS.dtDataEmissao = objNF.dtDataEmissao
    objRPS.iFilialCliente = objNF.iFilialCli
    objRPS.iFilialEmpresa = objNF.iFilialEmpresa
    objRPS.lCliente = objNF.lCliente
    objRPS.lNumero = objNF.lNumNotaFiscal
    objRPS.lNumIntDocNF = objNF.lNumIntDoc
    objRPS.sSerie = objNF.sSerie
    
    Set objProduto = objNFTRV.objProduto

    sMensagem = ""
    
    dAliquotaPadrao = -1
    dAliquotaMedia = 0
    bPossuiAliqDif = False
    bTemProdutoNaoServico = False
    For Each objItemNF In objNF.ColItensNF

        iItem = iItem + 1

        If objProduto.iNatureza = NATUREZA_PROD_SERVICO Then
        
            If dAliquotaPadrao = -1 Then
                dAliquotaPadrao = objItemNF.objTributacao.dISSAliquota
            Else
                If Abs(dAliquotaPadrao = objItemNF.objTributacao.dISSAliquota) > DELTA_VALORMONETARIO Then
                    bPossuiAliqDif = True
                End If
            End If
            dAliquotaMedia = dAliquotaMedia + objItemNF.objTributacao.dISSAliquota * objItemNF.dValorTotal
        
            dValorServico = dValorServico + objItemNF.dValorTotal
                    
            'sMensagem = sMensagem & IIf(Len(Trim(sMensagem)) > 0, "||", "") & objItemNF.sDescricaoItem
            
            iPOS = InStr(1, objItemNF.sDescricaoItem, "Nro.")
            If iItem = objNF.ColItensNF.Count Then
                sNumFat = " e " & Mid(objItemNF.sDescricaoItem, iPOS + 5)
            Else
                sNumFat = ", " & Mid(objItemNF.sDescricaoItem, iPOS + 5)
            End If
            
            sMensagem = sMensagem & IIf(Len(Trim(sMensagem)) > 0, sNumFat, objItemNF.sDescricaoItem)
            
'            bAchou = False
'            For Each objProdutoCategoria In objProduto.colCategoriaItem
'
'                If objProdutoCategoria.sCategoria = PRODUTO_CAT_COD_SERVICO_NFE Then
'
'                    If Not IsNumeric(objProdutoCategoria.sItem) Then gError 196863 'Código do serviço não é numérico
'
'                    If lCodServico <> StrParaInt(objProdutoCategoria.sItem) And lCodServico <> 0 Then gError 196864 'Não pode existir diferentes códigos de serviço no mesmo recibo
'
'                    lCodServico = StrParaInt(objProdutoCategoria.sItem)
'                    bAchou = True
'
'                    Exit For
'                End If
'
'            Next
'
'            If Not bAchou Then gError 196865 'Produto sem a informação de código do serviço

            If objNF.iFilialEmpresa = 2 Then
                lCodServico = 7911200
            Else
                lCodServico = 7129
            End If
            
        Else
            bTemProdutoNaoServico = True
        End If
        
    Next
    
    dAliquotaMedia = dAliquotaMedia / dValorServico
    
    sMensagemAux = "||"
    For iIndice = objNF.ColItensNF.Count To 6
        sMensagemAux = sMensagemAux & " ||"
    Next
    
    objRPS.sDiscriminacao = left(sMensagem & sMensagemAux & objNF.sMensagemNota, STRING_RPS_DISCRIMINACAO)

    If bPossuiAliqDif Then
        objRPS.dAliquota = dAliquotaMedia
    Else
        objRPS.dAliquota = dAliquotaPadrao
    End If
    objRPS.dValorDeducao = 0
    objRPS.dValorServico = dValorServico
    
    objRPS.dValorCofins = objNF.objTributacaoNF.dCOFINSRetido
    objRPS.dValorCSLL = objNF.objTributacaoNF.dCSLLRetido
    objRPS.dValorINSS = IIf(objNF.objTributacaoNF.iINSSRetido = MARCADO, objNF.objTributacaoNF.dValorINSS, 0)
    objRPS.dValorIRPJ = objNF.objTributacaoNF.dIRRFValor
    objRPS.dValorPIS = objNF.objTributacaoNF.dPISRetido
    
    If bTemProdutoNaoServico Then
        objRPS.sTipo = "RPS-M"
    Else
        objRPS.sTipo = "RPS"
    End If
    
    If objNF.objTributacaoNF.dISSRetido > 0 Then
        objRPS.iISSRetido = 1
    Else
        objRPS.iISSRetido = 2
    End If
    
    objRPS.lCodigoServico = lCodServico
       
    If objNF.iStatus <> STATUS_CANCELADO Then
        objRPS.sSituacao = "T"
    Else
        objRPS.sSituacao = "C"
    End If
                    
    Set objCliente = objNFTRV.objCliente
    Set objFilialCliente = objNFTRV.objFilialCliente
    Set objEndereco = objNFTRV.objEnderecoCli
    
    objRPS.sBairro = objEndereco.sBairro
    
    sStringAux = ""
    Call Formata_String_Numero(objEndereco.sCEP, sStringAux)
    objRPS.sCEP = sStringAux
    
    sStringAux = ""
    Call Formata_String_Numero(objFilialCliente.sCgc, sStringAux)
    objRPS.sCgc = sStringAux
    
    objRPS.sCidade = objEndereco.sCidade
    objRPS.sEmail = objEndereco.sEmail
    objRPS.sEndereco = objEndereco.sEndereco
    
    sStringAux = ""
    Call Formata_String_Numero(objFilialCliente.sInscricaoEstadual, sStringAux)
    objRPS.sInscricaoEstadual = sStringAux
    
    sStringAux = ""
    Call Formata_String_Numero(objFilialCliente.sInscricaoMunicipal, sStringAux)
    objRPS.sInscricaoMunicipal = sStringAux
    
    objRPS.sRazaoSocial = objCliente.sRazaoSocial
    objRPS.sUF = objEndereco.sSiglaEstado
    
    If Len(Trim(objRPS.sCgc)) = 0 Then
        objRPS.iTipoCGC = 3
    ElseIf Len(Trim(objRPS.sCgc)) < 14 Then
        objRPS.iTipoCGC = 1
    Else
        objRPS.iTipoCGC = 2
    End If
    
    NF_Converte_RPS_TRV = SUCESSO

    Exit Function

Erro_NF_Converte_RPS_TRV:

    NF_Converte_RPS_TRV = gErr

    Select Case gErr
           
        Case 196863
            Call Rotina_Erro(vbOKOnly, "ERRO_RPS_CODSERVICO_NAO_NUMERICO", gErr, PRODUTO_CAT_COD_SERVICO_NFE, objProduto.sCodigo, objProdutoCategoria.sItem)
        
        Case 196864
            Call Rotina_Erro(vbOKOnly, "ERRO_RPS_VARIOS_CODSERVICO", gErr)
        
        Case 196865
            Call Rotina_Erro(vbOKOnly, "ERRO_RPS_CODSERVICO_NAO_ENCONTRADO", gErr, objProduto.sCodigo, PRODUTO_CAT_COD_SERVICO_NFE)
         
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 196866)

    End Select

    Exit Function

End Function

Function FAT_TituloReceber_Insere_TRV(ByVal lComando1 As Long, ByVal lComando2 As Long, ByVal lComando3 As Long, ByVal lComando4 As Long, ByVal lComando5 As Long, ByVal lComando6 As Long, ByVal lComando7 As Long, ByVal lComando8 As Long, ByVal lComando9 As Long, ByVal lComando10 As Long, ByVal objTituloReceber As ClassTituloReceber, ByVal colParcelaReceber As colParcelaReceber) As Long
'Insere o Título à Receber na Tabela de Titulos a Receber
    
Dim lErro As Long
Dim lNumIntDoc As Long
Dim objParcelaReceber As ClassParcelaReceber
Dim lNumeroFatura As Long

On Error GoTo Erro_FAT_TituloReceber_Insere_TRV
    
    'Verifica a existencia de um Título no BD com as mesmas características
    lErro = CF("TituloReceber_Testa_Repeticao", objTituloReceber, lComando1)
    If lErro <> SUCESSO Then gError 196890
    
    'Gera o número automático
    lErro = CF("Config_ObterNumInt2", lComando3, lComando4, "CPRConfig", "NUM_PROX_TIT_REC", lNumIntDoc)
    If lErro <> SUCESSO Then gError 196891
    
    objTituloReceber.lNumIntDoc = lNumIntDoc
    
    'Verifica se Cliente e Filial estão cadastrados
    lErro = CF("FilialCliente_Lock1", lComando5, objTituloReceber.lCliente, objTituloReceber.iFilial)
    If lErro <> SUCESSO And lErro <> 43050 Then gError 196892
    
    'Não encontrou a Filial Cliente --> erro
    If lErro = 43050 Then gError 196893

    If objTituloReceber.iFilialEmpresa = 0 Then objTituloReceber.iFilialEmpresa = giFilialEmpresa
    
    'Insere o Título na tabela TitulosRec
    lErro = Comando_Executar(lComando2, "INSERT INTO TitulosRec (NumIntDoc, FilialEmpresa, Cliente, Filial, SiglaDocumento, NumTitulo, DataEmissao, Status, Saldo, NumParcelas, Valor, ValorIRRF, ValorISS, ISSRetido, ValorINSS, INSSRetido, PercJurosDiarios, PercMulta, Observacao, CondicaoPagto, DataRegistro, PISRetido, COFINSRetido, CSLLRetido, Moeda, Ccl, Natureza, CpoGenerico1, ReajustePeriodicidade, ReajusteBase, ReajustadoAte) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)", _
                                        lNumIntDoc, objTituloReceber.iFilialEmpresa, objTituloReceber.lCliente, objTituloReceber.iFilial, objTituloReceber.sSiglaDocumento, objTituloReceber.lNumTitulo, objTituloReceber.dtDataEmissao, STATUS_LANCADO, objTituloReceber.dSaldo, objTituloReceber.iNumParcelas, objTituloReceber.dValor, objTituloReceber.dValorIRRF, objTituloReceber.dValorISS, objTituloReceber.dISSRetido, objTituloReceber.dValorINSS, objTituloReceber.iINSSRetido, objTituloReceber.dPercJurosDiario, objTituloReceber.dPercMulta, objTituloReceber.sObservacao, objTituloReceber.iCondicaoPagto, objTituloReceber.dtDataRegistro, objTituloReceber.dPISRetido, objTituloReceber.dCOFINSRetido, objTituloReceber.dCSLLRetido, objTituloReceber.iMoeda, objTituloReceber.sCcl, objTituloReceber.sNatureza, objTituloReceber.lCpoGenerico1, objTituloReceber.iReajustePeriodicidade, objTituloReceber.dtReajusteBase, objTituloReceber.dtReajustadoAte)
    If lErro <> AD_SQL_SUCESSO Then gError 196894

    For Each objParcelaReceber In colParcelaReceber
        objParcelaReceber.lNumIntTitulo = lNumIntDoc
    Next
    
    'Grava as Parcelas a Receber
    lErro = FAT_ParcelasReceber_Insere_TRV(lComando6, lComando7, lComando8, lComando9, lComando10, colParcelaReceber)
    If lErro <> SUCESSO Then gError 196895
    
    FAT_TituloReceber_Insere_TRV = SUCESSO
    
    Exit Function
    
Erro_FAT_TituloReceber_Insere_TRV:

    FAT_TituloReceber_Insere_TRV = gErr
    
    Select Case gErr
    
        Case 196890 To 196892, 196895
    
        Case 196893
            Call Rotina_Erro(vbOKOnly, "ERRO_FILIALCLIENTE_NAO_CADASTRADA", gErr, objTituloReceber.iFilial, objTituloReceber.lCliente)

        Case 196894
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_TITULOS_REC", gErr)
            
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error$, 196896)
            
    End Select
    
    Exit Function

End Function

Private Function FAT_ParcelasReceber_Insere_TRV(ByVal lComando1 As Long, ByVal lComando2 As Long, ByVal lComando3 As Long, ByVal lComando4 As Long, ByVal lComando5 As Long, ByVal colParcelaReceber As colParcelaReceber, Optional ByVal iNumPrimeiraParcela As Integer = 1) As Long
'Insere as Parcelas de um Titulo passadas por parâmetro
'iNumPrimeiraParcela é util na alteracao de titulo onde apenas as parcelas novas sao inseridas

Dim lErro As Long
Dim iIndice As Integer
Dim objCarteiraCobrador As New ClassCarteiraCobrador
Dim lNumIntDoc As Long
Dim lNumIntCom As Long
Dim colDesconto As colDesconto

On Error GoTo Erro_FAT_ParcelasReceber_Insere_TRV

    'Gera número interno automático da 1a parcela e reserva numeros para outras parcelas, se houverem
    lErro = CF("Config_ObterNumInt2", lComando4, lComando5, "CPRConfig", "NUM_PROX_PARC_REC", lNumIntDoc, colParcelaReceber.Count - iNumPrimeiraParcela + 1)
    If lErro <> SUCESSO Then gError 196897

    'Para cada Parcela
    For iIndice = iNumPrimeiraParcela To colParcelaReceber.Count
    
        colParcelaReceber(iIndice).lNumIntDoc = lNumIntDoc
    
        'Armazena iProxSeqBaixa e Saldo
        colParcelaReceber(iIndice).iProxSeqBaixa = 1
        colParcelaReceber(iIndice).iProxSeqOcorr = 1
        colParcelaReceber(iIndice).dSaldo = colParcelaReceber(iIndice).dValor
        
        If colParcelaReceber(iIndice).iCobrador = 0 Then
            objCarteiraCobrador.iCobrador = COBRADOR_PROPRIA_EMPRESA
        Else
            objCarteiraCobrador.iCobrador = colParcelaReceber(iIndice).iCobrador
        End If
        
        If colParcelaReceber(iIndice).iCarteiraCobranca = 0 Then
            objCarteiraCobrador.iCodCarteiraCobranca = CARTEIRA_CARTEIRA
        Else
            objCarteiraCobrador.iCodCarteiraCobranca = colParcelaReceber(iIndice).iCarteiraCobranca
        End If

        'Insere a Parcela no BD
        With colParcelaReceber(iIndice)
            lErro = Comando_Executar(lComando1, "INSERT INTO ParcelasRec (NumIntDoc,NumIntTitulo,NumParcela,Status,DataVencimento,DataVencimentoReal,Saldo,Valor,Cobrador,CarteiraCobranca,NumTitCobrador,ProxSeqBaixa,ProxSeqOcorr,Desconto1Codigo, Desconto1Ate, Desconto1Valor,Desconto2Codigo, Desconto2Ate, Desconto2Valor,Desconto3Codigo, Desconto3Ate, Desconto3Valor, Aceite, Descontada, Previsao, Observacao, ValorOriginal, TipoPagto, CodConta, DataCredito, DataEmissaoCheque, BancoCheque, AgenciaCheque, ContaCorrenteCheque, NumeroCheque, DataDepositoCheque, AdmMeioPagto, Parcelamento, NumeroCartao, ValidadeCartao, AprovacaoCartao, DataTransacaoCartao) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)", _
            .lNumIntDoc, .lNumIntTitulo, .iNumParcela, STATUS_ABERTO, .dtDataVencimento, .dtDataVencimentoReal, .dSaldo, .dValor, objCarteiraCobrador.iCobrador, objCarteiraCobrador.iCodCarteiraCobranca, .sNumTitCobrador, .iProxSeqBaixa, .iProxSeqOcorr, .iDesconto1Codigo, .dtDesconto1Ate, .dDesconto1Valor, .iDesconto2Codigo, .dtDesconto2Ate, .dDesconto2Valor, .iDesconto3Codigo, .dtDesconto3Ate, .dDesconto3Valor, .iAceite, .iDescontada, .iPrevisao, .sObservacao, .dValorOriginal, .iTipoPagto, .iCodConta, .dtDataCredito, .dtDataEmissaoCheque, .iBancoCheque, .sAgenciaCheque, .sContaCorrenteCheque, .lNumeroCheque, .dtDataDepositoCheque, .iAdmMeioPagto, .iParcelamento, .sNumeroCartao, .dtValidadeCartao, .sAprovacaoCartao, .dtDataTransacaoCartao)
        End With
        If lErro <> AD_SQL_SUCESSO Then gError 196898

        lNumIntDoc = lNumIntDoc + 1
        
        lErro = CF("CarteiraCobrador_AtualizaSaldo", objCarteiraCobrador, 1, colParcelaReceber(iIndice).dSaldo, lComando2, lComando3)
        If lErro <> SUCESSO Then gError 196899
    
    Next
    
    FAT_ParcelasReceber_Insere_TRV = SUCESSO
    
    Exit Function

Erro_FAT_ParcelasReceber_Insere_TRV:

    FAT_ParcelasReceber_Insere_TRV = gErr
    
    Select Case gErr
    
        Case 196897, 196899
        
        Case 196898
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_PARCELAS_REC", gErr, colParcelaReceber(iIndice).lNumIntTitulo, iIndice)
        
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 196900)
            
    End Select
    
    Exit Function
    
End Function

Private Function TRV_Cliente_Grava_Fornecedor(ByVal objCli As ClassCliente, ByVal objEndereco As ClassEndereco) As Long

Dim lErro As Long
Dim objForn As New ClassFornecedor
Dim objEnderecoForn As New ClassEndereco

On Error GoTo Erro_TRV_Cliente_Grava_Fornecedor

    objForn.lCodigo = objCli.lCodigo
    
    'faz a leitura para carregar info já existente que nao tenha vindo na importacao
    lErro = CF("Fornecedor_Le", objForn)
    If lErro <> SUCESSO And lErro <> 12729 Then gError 196901

    If lErro <> SUCESSO Then
    
        With objEnderecoForn
            .sEndereco = objEndereco.sEndereco
            .sBairro = objEndereco.sBairro
            .sCidade = objEndereco.sCidade
            .sSiglaEstado = objEndereco.sSiglaEstado
            .sCEP = objEndereco.sCEP
            .sTelefone1 = objEndereco.sTelefone1
            .sTelefone2 = objEndereco.sTelefone2
            .sFax = objEndereco.sFax
            .sContato = objEndereco.sContato
            .sEmail = objEndereco.sEmail
            .iCodigoPais = objEndereco.iCodigoPais
        End With
    
        With objForn
            .sNomeReduzido = objCli.sNomeReduzido
            .sRazaoSocial = objCli.sRazaoSocial
            .sCgc = objCli.sCgc
            .sInscricaoEstadual = objCli.sInscricaoEstadual
            .dDesconto = objCli.dDesconto
            .iTipo = objCli.iTipo
            .iAtivo = objCli.iAtivo
            .sInscricaoMunicipal = objCli.sInscricaoMunicipal
        End With
        
        lErro = CF("Fornecedor_Grava_EmTrans", objForn, objEnderecoForn)
        If lErro <> SUCESSO Then gError 196902
    
    End If
    
    TRV_Cliente_Grava_Fornecedor = SUCESSO
    
    Exit Function

Erro_TRV_Cliente_Grava_Fornecedor:

    TRV_Cliente_Grava_Fornecedor = gErr
    
    Select Case gErr
    
        Case 196901, 196902

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 196903)
            
    End Select
    
    Exit Function
    
End Function

Private Function TRVFaturamento_Gera_TitPagOver(ByVal objInfoFatura As ClassTRVFATInfoFatura, ByVal objTitPag As ClassTituloPagar, ByVal lProxNum As Long) As Long

Dim lErro As Long
Dim objParcelaPagar As New ClassParcelaPagar
Dim colParcelaPagar As New colParcelaPagar
Dim objContabil As ClassContabil
Dim objCtb As New ClassImpCoinfoFatCPCtb
Dim objContabAutomatica As New ClassContabAutomatica
Dim dtDataVenctoReal As Date
Dim dtDataVencimento As Date

On Error GoTo Erro_TRVFaturamento_Gera_TitPagOver
               
    objTitPag.lFornecedor = objInfoFatura.lCliente
    objTitPag.iFilial = FILIAL_MATRIZ
    objTitPag.iFilialPedCompra = FILIAL_MATRIZ
    objTitPag.lNumTitulo = lProxNum
    objTitPag.dtDataEmissao = objInfoFatura.dtDataEmissao
    objTitPag.dValorTotal = Abs(objInfoFatura.dValor)
    objTitPag.dValorProdutos = Abs(objInfoFatura.dValor)
    objTitPag.dSaldo = Abs(objInfoFatura.dValor)
    objTitPag.iFilialEmpresa = objInfoFatura.iFilialEmpresa
    objTitPag.sSiglaDocumento = TIPODOC_FATURA_OVER
    objTitPag.iNumParcelas = 1
    
'    'O Vencimento ocorre na sexta da semana seguinte
'    Select Case Weekday(dtDataAux)
'
'        Case vbMonday
'            dtDataVencimento = DateAdd("d", 11, objTitPag.dtDataEmissao)
'        Case vbTuesday
'            dtDataVencimento = DateAdd("d", 10, objTitPag.dtDataEmissao)
'        Case vbWednesday
'            dtDataVencimento = DateAdd("d", 9, objTitPag.dtDataEmissao)
'        Case vbThursday
'            dtDataVencimento = DateAdd("d", 8, objTitPag.dtDataEmissao)
'        Case vbFriday
'            dtDataVencimento = DateAdd("d", 7, objTitPag.dtDataEmissao)
'        Case vbSaturday
'            dtDataVencimento = DateAdd("d", 6, objTitPag.dtDataEmissao)
'        Case vbSunday
'            dtDataVencimento = DateAdd("d", 5, objTitPag.dtDataEmissao)
'
'    End Select

    objParcelaPagar.iNumParcela = 1
    objParcelaPagar.dtDataVencimento = objInfoFatura.dtDataVencimento
    
    'Calcula Data Vencimento Real
    lErro = CF("DataVencto_Real", objInfoFatura.dtDataVencimento, dtDataVenctoReal)
    If lErro <> SUCESSO Then gError 190997
    
    objParcelaPagar.dtDataVencimentoReal = dtDataVenctoReal
    objParcelaPagar.dValor = objTitPag.dValorTotal
    objParcelaPagar.iTipoCobranca = TIPO_COBRANCA_CARTEIRA
    objParcelaPagar.iStatus = STATUS_ABERTO

    With objParcelaPagar
        colParcelaPagar.Add .lNumIntDoc, .lNumIntTitulo, .iNumParcela, .iStatus, .dtDataVencimento, .dtDataVencimentoReal, .dSaldo, .dValor, .iPortador, .iProxSeqBaixa, .iTipoCobranca, .iBancoCobrador, .sNossoNumero, .sCodigoDeBarras
    End With

    'Grava o Título a Pagar
    lErro = CF("NFFatPag_Grava_EmTrans", objTitPag, colParcelaPagar, objContabil)
    If lErro <> SUCESSO Then gError 190998
    
    objCtb.sModelo = "Comissão Over"
    
    'gravar a contabilizacao
    lErro = objContabAutomatica.Inicializa_Contab(objCtb, MODULO_CONTASAPAGAR, "CP", objTitPag.dtDataEmissao, objTitPag.dtDataEmissao)
    If lErro <> SUCESSO Then gError 190999
    
    lErro = objContabAutomatica.GeraContabilizacao(objTitPag)
    If lErro <> SUCESSO Then gError 192000

    Set objContabAutomatica = Nothing
    Call objCtb.Encerrando
    Set objCtb = Nothing
                    
    TRVFaturamento_Gera_TitPagOver = SUCESSO

    Exit Function

Erro_TRVFaturamento_Gera_TitPagOver:

    TRVFaturamento_Gera_TitPagOver = gErr

    Select Case gErr
    
        Case 190997 To 190999, 192000

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 190991)

    End Select

    Exit Function

End Function

Public Function TRVVouchers_Comissao_Deslibera(ByVal iTipoLiberacao As Integer, ByVal lNumIntDocLiberacao As Long) As Long

Dim lErro As Long
Dim alComando(0 To 1) As Long
Dim iIndice As Integer
Dim tVouInfo As typeTRVVoucherInfoN

On Error GoTo Erro_TRVVouchers_Comissao_Deslibera

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 196386
    Next
    
    'Alocação de espaço no buffer
    tVouInfo.sTipoDoc = String(STRING_TRV_VOU_INFO_TIPODOC, 0)
    tVouInfo.sTipVou = String(STRING_TRV_VOU_INFO_TIPVOU, 0)
    tVouInfo.sSerie = String(STRING_TRV_VOU_INFO_SERIE, 0)
    tVouInfo.sHistorico = String(STRING_TRV_VOU_HISTORICO, 0)

    'Le a tabelaTRVVoucherInfo para pegar todos registros liberados e não faturados
    lErro = Comando_ExecutarPos(alComando(0), "SELECT NumIntDoc, TipoDoc, TipVou, Serie, NumVou, Seq, " & _
                "Data, TipoDocDestino, NumIntDocDestino, NumIntDocComiInt, Valor, Historico, NumTitulo, Status FROM TRVVoucherInfo WHERE TipoLiberacao = ? AND NumIntDocLiberacao = ? AND NumIntDocDestino = ? ", 0, _
                tVouInfo.lNumIntDoc, tVouInfo.sTipoDoc, tVouInfo.sTipVou, tVouInfo.sSerie, _
                tVouInfo.lNumVou, tVouInfo.iSeq, tVouInfo.dtData, tVouInfo.iTipoDocDestino, tVouInfo.lNumIntDocDestino, _
                tVouInfo.lNumIntDocComiInt, tVouInfo.dValor, tVouInfo.sHistorico, tVouInfo.lNumTitulo, tVouInfo.iStatus, iTipoLiberacao, lNumIntDocLiberacao, 0)
    If lErro <> AD_SQL_SUCESSO Then gError 196387
    
    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(0))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196388
    
    'Enquanto existir
    Do While lErro <> AD_SQL_SEM_DADOS

        'Trava registro contra alterações/Leituras
        lErro = Comando_LockExclusive(alComando(0))
        If lErro <> SUCESSO Then gError 196389

        lErro = Comando_ExecutarPos(alComando(1), "UPDATE TRVVoucherInfo SET Status = ?, TipoLiberacao = ?, NumIntDocLiberacao = ?", alComando(0), TRV_VOU_INFO_STATUS_BLOQUEADO, 0, 0)
        If lErro <> AD_SQL_SUCESSO Then gError 196390
        
        'Busca Próximo
        lErro = Comando_BuscarProximo(alComando(0))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196391
        
    Loop
    
    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVVouchers_Comissao_Deslibera = SUCESSO

    Exit Function

Erro_TRVVouchers_Comissao_Deslibera:

    TRVVouchers_Comissao_Deslibera = gErr

    Select Case gErr

        Case 196386
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 196387, 196388, 196391
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVVOUCHERINFO", gErr)

        Case 196389
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVVOUCHERINFO", gErr)

        Case 196390
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVVOUCHERINFO", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 196392)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Public Function TRVVouchers_Comissao_Deslibera2(ByVal sTipVou As String, ByVal sSerie As String, ByVal lNumVou As Long, ByVal sTipoDoc As String) As Long

Dim lErro As Long
Dim alComando(0 To 1) As Long
Dim iIndice As Integer
Dim tVouInfo As typeTRVVoucherInfoN

On Error GoTo Erro_TRVVouchers_Comissao_Deslibera2

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 196386
    Next
    
    'Alocação de espaço no buffer
    tVouInfo.sTipoDoc = String(STRING_TRV_VOU_INFO_TIPODOC, 0)
    tVouInfo.sTipVou = String(STRING_TRV_VOU_INFO_TIPVOU, 0)
    tVouInfo.sSerie = String(STRING_TRV_VOU_INFO_SERIE, 0)
    tVouInfo.sHistorico = String(STRING_TRV_VOU_HISTORICO, 0)

    'Le a tabela TRVVoucherInfo para pegar todos registros liberados e não faturados
    lErro = Comando_ExecutarPos(alComando(0), "SELECT NumIntDoc, TipoDoc, TipVou, Serie, NumVou, Seq, " & _
                "Data, TipoDocDestino, NumIntDocDestino, NumIntDocComiInt, Valor, Historico, NumTitulo, Status FROM TRVVoucherInfo WHERE TipoDoc = ? AND TipVou = ? AND Serie = ? AND NumVou = ? AND NumIntDocDestino = ? AND Status = ? ", 0, _
                tVouInfo.lNumIntDoc, tVouInfo.sTipoDoc, tVouInfo.sTipVou, tVouInfo.sSerie, _
                tVouInfo.lNumVou, tVouInfo.iSeq, tVouInfo.dtData, tVouInfo.iTipoDocDestino, tVouInfo.lNumIntDocDestino, _
                tVouInfo.lNumIntDocComiInt, tVouInfo.dValor, tVouInfo.sHistorico, tVouInfo.lNumTitulo, tVouInfo.iStatus, sTipoDoc, sTipVou, sSerie, lNumVou, 0, TRV_VOU_INFO_STATUS_LIBERADO)
    If lErro <> AD_SQL_SUCESSO Then gError 196387
    
    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(0))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196388
    
    'Enquanto existir
    Do While lErro <> AD_SQL_SEM_DADOS

        'Trava registro contra alterações/Leituras
        lErro = Comando_LockExclusive(alComando(0))
        If lErro <> SUCESSO Then gError 196389

        lErro = Comando_ExecutarPos(alComando(1), "UPDATE TRVVoucherInfo SET Status = ?, TipoLiberacao = ?, NumIntDocLiberacao = ?", alComando(0), TRV_VOU_INFO_STATUS_BLOQUEADO, 0, 0)
        If lErro <> AD_SQL_SUCESSO Then gError 196390
        
        'Busca Próximo
        lErro = Comando_BuscarProximo(alComando(0))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196391
        
    Loop
    
    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVVouchers_Comissao_Deslibera2 = SUCESSO

    Exit Function

Erro_TRVVouchers_Comissao_Deslibera2:

    TRVVouchers_Comissao_Deslibera2 = gErr

    Select Case gErr

        Case 196386
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 196387, 196388, 196391
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVVOUCHERINFO", gErr)

        Case 196389
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVVOUCHERINFO", gErr)

        Case 196390
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVVOUCHERINFO", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 196392)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Public Function TRVVouchers_Comissao_Libera(ByVal sTipVou As String, ByVal sSerie As String, ByVal lNumVou As Long, ByVal sTipoDoc As String, ByVal iTipoLiberacao As Integer, ByVal lNumIntDocLiberacao As Long) As Long

Dim lErro As Long
Dim alComando(0 To 1) As Long
Dim iIndice As Integer
Dim tVouInfo As typeTRVVoucherInfoN

On Error GoTo Erro_TRVVouchers_Comissao_Libera

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 196386
    Next
    
    'Alocação de espaço no buffer
    tVouInfo.sTipoDoc = String(STRING_TRV_VOU_INFO_TIPODOC, 0)
    tVouInfo.sTipVou = String(STRING_TRV_VOU_INFO_TIPVOU, 0)
    tVouInfo.sSerie = String(STRING_TRV_VOU_INFO_SERIE, 0)
    tVouInfo.sHistorico = String(STRING_TRV_VOU_HISTORICO, 0)

    'Le a tabela TRVVoucherInfo para pegar todos registros liberados e não faturados
    lErro = Comando_ExecutarPos(alComando(0), "SELECT NumIntDoc, TipoDoc, TipVou, Serie, NumVou, Seq, " & _
                "Data, TipoDocDestino, NumIntDocDestino, NumIntDocComiInt, Valor, Historico, NumTitulo, Status FROM TRVVoucherInfo WHERE TipoDoc = ? AND TipVou = ? AND Serie = ? AND NumVou = ? AND Status = ? ", 0, _
                tVouInfo.lNumIntDoc, tVouInfo.sTipoDoc, tVouInfo.sTipVou, tVouInfo.sSerie, _
                tVouInfo.lNumVou, tVouInfo.iSeq, tVouInfo.dtData, tVouInfo.iTipoDocDestino, tVouInfo.lNumIntDocDestino, _
                tVouInfo.lNumIntDocComiInt, tVouInfo.dValor, tVouInfo.sHistorico, tVouInfo.lNumTitulo, tVouInfo.iStatus, sTipoDoc, sTipVou, sSerie, lNumVou, TRV_VOU_INFO_STATUS_BLOQUEADO)
    If lErro <> AD_SQL_SUCESSO Then gError 196387
    
    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(0))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196388
    
    'Enquanto existir
    Do While lErro <> AD_SQL_SEM_DADOS

        'Trava registro contra alterações/Leituras
        lErro = Comando_LockExclusive(alComando(0))
        If lErro <> SUCESSO Then gError 196389

        lErro = Comando_ExecutarPos(alComando(1), "UPDATE TRVVoucherInfo SET Status = ?, TipoLiberacao = ?, NumIntDocLiberacao = ?", alComando(0), TRV_VOU_INFO_STATUS_LIBERADO, iTipoLiberacao, lNumIntDocLiberacao)
        If lErro <> AD_SQL_SUCESSO Then gError 196390
        
        'Busca Próximo
        lErro = Comando_BuscarProximo(alComando(0))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196391
        
    Loop
    
    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVVouchers_Comissao_Libera = SUCESSO

    Exit Function

Erro_TRVVouchers_Comissao_Libera:

    TRVVouchers_Comissao_Libera = gErr

    Select Case gErr

        Case 196386
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 196387, 196388, 196391
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVVOUCHERINFO", gErr)

        Case 196389
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVVOUCHERINFO", gErr)

        Case 196390
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVVOUCHERINFO", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 196392)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Function BaixaParcRec_Cancelar_Customizado(ByVal lNumIntDocBaixaParcRec As Long) As Long
    
Dim lErro As Long
Dim alComando(0 To 8) As Long
Dim iIndice As Integer
Dim sSQL As String
Dim sTipoDoc As String
Dim sTipVou As String
Dim sSerie As String
Dim lNumVou As Long
Dim lNumFat As Long
Dim dtDataCanc As Date
Dim dtDataFat As Date
Dim objVouExp As ClassTRVVouExp
Dim lClienteVou As Long
Dim iNumParcela As Integer
Dim dValorFat As Double
Dim lNumIntDocTitRec As Long
Dim sSiglaDocumento As String

On Error GoTo Erro_BaixaParcRec_Cancelar_Customizado

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 200200
    Next
    
    sSiglaDocumento = String(STRING_SIGLA_DOCUMENTO, 0)
    
    sSQL = "SELECT T.NumIntDoc, T.NumTitulo, T.DataEmissao, T.Valor, P.NumParcela, T.SiglaDocumento " & _
        "FROM ParcelasRecTodas AS P, BaixasParcRec AS B, TitulosRecTodos AS T " & _
        "WHERE B.NumIntDoc = ? And B.NumIntParcela = P.NumIntDoc And P.NumIntTitulo = T.NumIntDoc "
    
    'Le os vouchers
    lErro = Comando_Executar(alComando(7), sSQL, lNumIntDocTitRec, lNumFat, dtDataFat, dValorFat, iNumParcela, sSiglaDocumento, lNumIntDocBaixaParcRec)
    If lErro <> AD_SQL_SUCESSO Then gError 200201
    
    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(7))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200202
    
    'Só faz alguma coisa se foi gerado pela tela de faturamento
    If sSiglaDocumento = TIPODOC_CARTAO_CRED_DEB Or sSiglaDocumento = TIPODOC_FATURA_SERVICO_CR Then
        
        'Alocação de espaço no buffer
        sTipoDoc = String(STRING_TRV_VOU_INFO_TIPODOC, 0)
        sTipVou = String(STRING_TRV_VOU_INFO_TIPVOU, 0)
        sSerie = String(STRING_TRV_VOU_INFO_SERIE, 0)
    
        sSQL = "SELECT V.TipoDoc, V.TipVou, V.Serie, V.NumVou, V.DataCanc, V.ClienteVou " & _
            "FROM TRVVouchers As V " & _
            "WHERE V.NumIntDocDestino = ? And V.TipoDocDestino = 3"
    
        'Le os vouchers
        lErro = Comando_Executar(alComando(0), sSQL, sTipoDoc, sTipVou, sSerie, lNumVou, dtDataCanc, lClienteVou, lNumIntDocTitRec)
        If lErro <> AD_SQL_SUCESSO Then gError 200201
        
        'Busca Primeiro
        lErro = Comando_BuscarPrimeiro(alComando(0))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200202
        
        Do While lErro <> AD_SQL_SEM_DADOS
        
            If sTipoDoc = TRV_TIPODOC_VOU_TEXTO And iNumParcela = 1 Then
                Set objVouExp = New ClassTRVVouExp
                objVouExp.sSerie = sSerie
                objVouExp.sTipVou = sTipVou
                objVouExp.lNumVou = lNumVou
                objVouExp.dtDataCanc = dtDataCanc
                objVouExp.lNumFat = lNumFat
                objVouExp.dtDataFat = dtDataFat
                objVouExp.dValorFat = dValorFat
                objVouExp.iTransacao = TRV_EXPORT_VOU_TRANS_CANC_PAGTO
                objVouExp.lCliente = lClienteVou
                lErro = TRVVouExp_Insere(alComando(1), alComando(2), alComando(3), alComando(4), alComando(5), alComando(6), objVouExp)
                If lErro <> SUCESSO Then gError 200204
            End If
            
            'Busca Próximo
            lErro = Comando_BuscarProximo(alComando(0))
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200205
            
        Loop
        
        lErro = TRVVouchers_Comissao_Deslibera(TRV_TIPO_LIBERACAO_COMISSAO_BAIXA, lNumIntDocBaixaParcRec)
        If lErro <> SUCESSO Then gError 200206
        
    End If
    
    'Apaga a data de pagamento se for um reembolso
    If sSiglaDocumento = TIPODOC_FATURA_OCR_REEM Then

        lErro = Comando_Executar(alComando(8), "UPDATE TRVOcrCasosPreRec SET DataPagto = ? WHERE NumIntDocTitRecReembolso = ?", DATA_NULA, lNumIntDocTitRec)
        If lErro <> AD_SQL_SUCESSO Then gError 200201

    End If

    BaixaParcRec_Cancelar_Customizado = SUCESSO

    Exit Function

Erro_BaixaParcRec_Cancelar_Customizado:

    BaixaParcRec_Cancelar_Customizado = gErr

    Select Case gErr

        Case 200200
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 200201, 200202, 200205
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVVOUCHERINFO", gErr)
            
        Case 200204, 200206

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 200207)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Function TRVGerComiInt_Exclui(objTRVGerComiInt As ClassTRVGerComiInt) As Long

Dim lErro As Long
Dim alComando(1 To 7) As Long
Dim iIndice As Integer
Dim lTransacao As Long
Dim lNumIntDoc As Long
Dim lNumReg As Long

On Error GoTo Erro_TRVGerComiInt_Exclui

    'Abertura de transação
    lTransacao = Transacao_Abrir()
    If lTransacao = 0 Then gError 197438
    
    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 197439
    Next
    
    lErro = Comando_Executar(alComando(1), "SELECT NumIntDoc FROM TRVGerComiInt WHERE Codigo = ?", lNumIntDoc, objTRVGerComiInt.lCodigo)
    If lErro <> AD_SQL_SUCESSO Then gError 197440
    
    lErro = Comando_BuscarPrimeiro(alComando(1))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 197441

    If lErro = AD_SQL_SEM_DADOS Then gError 197442

    lErro = Comando_LockExclusive(alComando(1))
    If lErro <> AD_SQL_SUCESSO Then gError 197443

    lErro = Comando_Executar(alComando(2), "SELECT Count(*) FROM Comissoes, TRVGerComiIntDet, TRVGerComiInt WHERE TRVGerComiInt.Codigo = ? AND Comissoes.NumIntCom = TRVGerComiIntDet.NumIntDocComi AND TRVGerComiInt.NumIntDoc = TRVGerComiIntDet.NumIntDocGerComi AND Comissoes.DataBaixa <> ? ", lNumReg, objTRVGerComiInt.lCodigo, DATA_NULA)
    If lErro <> AD_SQL_SUCESSO Then gError 197444
    
    lErro = Comando_BuscarPrimeiro(alComando(2))
    If lErro <> AD_SQL_SUCESSO Then gError 197445

    'se ja existir comissao baixada ==> nao pode exluir
    If lNumReg <> 0 Then gError 197446

    lErro = Comando_Executar(alComando(3), "DELETE FROM Comissoes WHERE NumIntCom IN (SELECT TRVGerComiIntDet.NumIntDocComi FROM TRVGerComiInt, TRVGerComiIntDet WHERE TRVGerComiInt.NumIntDoc = TRVGerComiIntDet.NumIntDocGerComi AND TRVGerComiInt.Codigo = ?)", objTRVGerComiInt.lCodigo)
    If lErro <> AD_SQL_SUCESSO Then gError 197447

    lErro = Comando_Executar(alComando(4), "DELETE FROM TRVVoucherInfoGer WHERE NumIntVoucherInfo IN (SELECT NumIntDoc FROM TRVVoucherInfo, TRVGerComiInt WHERE TRVVoucherInfo.NumIntDocComiInt = TRVGerComiInt.NumIntDoc AND TRVGerComiInt.Codigo = ?)", objTRVGerComiInt.lCodigo)
    If lErro <> AD_SQL_SUCESSO Then gError 197448

    lErro = Comando_Executar(alComando(5), "UPDATE TRVVoucherInfo SET  NumIntDocComiInt = 0 WHERE NumIntComiInt IN (SELECT NumIntDoc FROM TRVGerComiInt WHERE TRVGerComiInt.Codigo = ?)", objTRVGerComiInt.lCodigo)
    If lErro <> AD_SQL_SUCESSO Then gError 197449

    lErro = Comando_Executar(alComando(6), "DELETE FROM TRVGerComiIntDet WHERE NumIntDocGerComi IN (SELECT NumIntDoc FROM TRVGerComiInt WHERE TRVGerComiInt.Codigo = ?)", objTRVGerComiInt.lCodigo)
    If lErro <> AD_SQL_SUCESSO Then gError 197450

    lErro = Comando_Executar(alComando(7), "DELETE FROM TRVGerComiInt WHERE NumIntDoc = ?", objTRVGerComiInt.lCodigo)
    If lErro <> AD_SQL_SUCESSO Then gError 197451

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    'Confirma a transação
    lErro = Transacao_Commit()
    If lErro <> AD_SQL_SUCESSO Then gError 197452

    TRVGerComiInt_Exclui = SUCESSO

    Exit Function

Erro_TRVGerComiInt_Exclui:

    TRVGerComiInt_Exclui = gErr

    Select Case gErr

        Case 197438
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_TRANSACAO", gErr)

        Case 197439
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 197440, 197441
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVGERCOMIINT", gErr)

        Case 197442
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVGERCOMIINT_NAO_CADASTRADO", gErr, objTRVGerComiInt.lCodigo)

        Case 197443
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCK_TRVGERCOMIINT", gErr, objTRVGerComiInt.lCodigo)

        Case 197444, 197445
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_COMISSOES3", gErr)

        Case 197446
            Call Rotina_Erro(vbOKOnly, "ERRO_EXC_TRVGERCOMIINT_COMIS_BAIXADA", gErr, objTRVGerComiInt.lCodigo)
        
        Case 197447
            Call Rotina_Erro(vbOKOnly, "ERRO_EXC_COMISSOES_TRVGERCOMIINT", gErr, objTRVGerComiInt.lCodigo)

        Case 197448
            Call Rotina_Erro(vbOKOnly, "ERRO_EXC_TRVVOUCHERINFOGER", gErr, objTRVGerComiInt.lCodigo)

        Case 197449
            Call Rotina_Erro(vbOKOnly, "ERRO_ALTERACAO_TRVVOUCHERINFO1", gErr, objTRVGerComiInt.lCodigo)

        Case 197450
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_TRVGERCOMIINTDET", gErr, objTRVGerComiInt.lCodigo)

        Case 197451
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_TRVGERCOMIINT", gErr, objTRVGerComiInt.lCodigo)

        Case 197452
            Call Rotina_Erro(vbOKOnly, "ERRO_COMMIT", gErr)
        
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 197453)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    'Desfaz Transação
    Call Transacao_Rollback
    
    Exit Function

End Function

Public Function TRVClienteRepProd_Exclui(ByVal objCliente As ClassCliente) As Long

Dim lErro As Long
Dim alComando(0 To 1) As Long
Dim iIndice As Integer
Dim lCliente As Long

On Error GoTo Erro_TRVClienteRepProd_Exclui

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 196931
    Next

    'Le a tabelaTRVClienteRepProd
    lErro = Comando_ExecutarPos(alComando(0), "SELECT Cliente FROM TRVClienteRepProd WHERE Cliente= ? ", _
                0, lCliente, objCliente.lCodigo)
    If lErro <> AD_SQL_SUCESSO Then gError 196932

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(0))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196933

    'Se não existir => ERRO
    Do While lErro <> AD_SQL_SEM_DADOS

        'Trava registro contra alterações/Leituras
        lErro = Comando_LockExclusive(alComando(0))
        If lErro <> SUCESSO Then gError 196934
    
        lErro = Comando_ExecutarPos(alComando(1), "DELETE FROM TRVClienteRepProd", alComando(0))
        If lErro <> AD_SQL_SUCESSO Then gError 196935
        
        'Busca Próximo
        lErro = Comando_BuscarProximo(alComando(0))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196936
        
    Loop

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVClienteRepProd_Exclui = SUCESSO

    Exit Function

Erro_TRVClienteRepProd_Exclui:

    TRVClienteRepProd_Exclui = gErr

    Select Case gErr

        Case 196931
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 196932, 196933, 196936
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVCLIENTEREPPROD", gErr)
        
        Case 196934
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVCLIENTEREPPROD", gErr)

        Case 196935
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_TRVCLIENTEREPPROD", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 196937)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Public Function TRVExcComissaoCli_Exclui(ByVal objCliente As ClassCliente) As Long

Dim lErro As Long
Dim alComando(0 To 1) As Long
Dim iIndice As Integer
Dim lCliente As Long

On Error GoTo Erro_TRVExcComissaoCli_Exclui

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 196931
    Next

    'Le a tabelaTRVExcComissaoCli
    lErro = Comando_ExecutarPos(alComando(0), "SELECT Cliente FROM TRVExcComissaoCli WHERE Cliente= ? ", _
                0, lCliente, objCliente.lCodigo)
    If lErro <> AD_SQL_SUCESSO Then gError 196932

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(0))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196933

    'Se não existir => ERRO
    Do While lErro <> AD_SQL_SEM_DADOS

        'Trava registro contra alterações/Leituras
        lErro = Comando_LockExclusive(alComando(0))
        If lErro <> SUCESSO Then gError 196934
    
        lErro = Comando_ExecutarPos(alComando(1), "DELETE FROM TRVExcComissaoCli", alComando(0))
        If lErro <> AD_SQL_SUCESSO Then gError 196935
        
        'Busca Próximo
        lErro = Comando_BuscarProximo(alComando(0))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196936
        
    Loop

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVExcComissaoCli_Exclui = SUCESSO

    Exit Function

Erro_TRVExcComissaoCli_Exclui:

    TRVExcComissaoCli_Exclui = gErr

    Select Case gErr

        Case 196931
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 196932, 196933, 196936
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVEXCCOMISSAOCLI", gErr)
        
        Case 196934
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVEXCCOMISSAOCLI", gErr)

        Case 196935
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_TRVEXCCOMISSAOCLI", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 196937)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Public Function TRVClienteCorProd_Exclui(ByVal objCliente As ClassCliente) As Long

Dim lErro As Long
Dim alComando(0 To 1) As Long
Dim iIndice As Integer
Dim lCliente As Long

On Error GoTo Erro_TRVClienteCorProd_Exclui

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 196938
    Next

    'Le a tabela TRVClienteRepProd
    lErro = Comando_ExecutarPos(alComando(0), "SELECT Cliente FROM TRVClienteCorProd WHERE Cliente= ? ", _
                0, lCliente, objCliente.lCodigo)
    If lErro <> AD_SQL_SUCESSO Then gError 196939

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(0))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196940

    'Se não existir => ERRO
    Do While lErro <> AD_SQL_SEM_DADOS

        'Trava registro contra alterações/Leituras
        lErro = Comando_LockExclusive(alComando(0))
        If lErro <> SUCESSO Then gError 196941
    
        lErro = Comando_ExecutarPos(alComando(1), "DELETE FROM TRVClienteCorProd", alComando(0))
        If lErro <> AD_SQL_SUCESSO Then gError 196942
        
        'Busca Próximo
        lErro = Comando_BuscarProximo(alComando(0))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196936
        
    Loop

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVClienteCorProd_Exclui = SUCESSO

    Exit Function

Erro_TRVClienteCorProd_Exclui:

    TRVClienteCorProd_Exclui = gErr

    Select Case gErr

        Case 196938
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 196939, 196940, 196943
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVCLIENTECORPROD", gErr)
        
        Case 196941
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVCLIENTECORPROD", gErr)

        Case 196942
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_TRVCLIENTECORPROD", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 196944)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Public Function TRVClienteRepProd_Insere(ByVal lComando As Long, ByVal objTRVClienteRepProd As ClassTRVClienteRepProd) As Long

Dim lErro As Long

On Error GoTo Erro_TRVClienteRepProd_Insere

    lErro = Comando_Executar(lComando, "INSERT INTO TRVClienteRepProd( Cliente, Seq, Representante, Produto, " & _
            "PercComis) VALUES (?,?,?,?,?)", _
            objTRVClienteRepProd.lCliente, objTRVClienteRepProd.iSeq, objTRVClienteRepProd.lRepresentante, objTRVClienteRepProd.sProduto, _
            objTRVClienteRepProd.dPercComis)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196946

    TRVClienteRepProd_Insere = SUCESSO

    Exit Function

Erro_TRVClienteRepProd_Insere:

    TRVClienteRepProd_Insere = gErr

    Select Case gErr
        
        Case 196946
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_TRVCLIENTEREPPROD", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 196947)

    End Select

    Exit Function

End Function

Public Function TRVExcComissaoCli_Insere(ByVal lComando As Long, ByVal objTRVExcComissaoCli As ClassTRVExcComissaoCli) As Long

Dim lErro As Long

On Error GoTo Erro_TRVExcComissaoCli_Insere

    lErro = Comando_Executar(lComando, "INSERT INTO TRVExcComissaoCli( Cliente, Seq, Produto, " & _
            "PercComissao) VALUES (?,?,?,?)", _
            objTRVExcComissaoCli.lCliente, objTRVExcComissaoCli.iSeq, objTRVExcComissaoCli.sProduto, _
            objTRVExcComissaoCli.dPercComissao)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196946

    TRVExcComissaoCli_Insere = SUCESSO

    Exit Function

Erro_TRVExcComissaoCli_Insere:

    TRVExcComissaoCli_Insere = gErr

    Select Case gErr
        
        Case 196946
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_TRVEXCCOMISSAOCLI", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 196947)

    End Select

    Exit Function

End Function

Public Function TRVClienteCorProd_Insere(ByVal lComando As Long, ByVal objTRVClienteCorProd As ClassTRVClienteCorProd) As Long

Dim lErro As Long

On Error GoTo Erro_TRVClienteCorProd_Insere

    lErro = Comando_Executar(lComando, "INSERT INTO TRVClienteCorProd( Cliente, Seq, Correntista, Produto, " & _
            "PercComis) VALUES (?,?,?,?,?)", _
            objTRVClienteCorProd.lCliente, objTRVClienteCorProd.iSeq, objTRVClienteCorProd.lCorrentista, objTRVClienteCorProd.sProduto, _
            objTRVClienteCorProd.dPercComis)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196949

    TRVClienteCorProd_Insere = SUCESSO

    Exit Function

Erro_TRVClienteCorProd_Insere:

    TRVClienteCorProd_Insere = gErr

    Select Case gErr
    
        Case 196949
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_TRVCLIENTECORPROD", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 196950)

    End Select

    Exit Function

End Function


'ROTINAS CRIADAS AUTOMATICAMENTE PELA TELA BROWSECRIA
'GRAVAÇÃO
Public Function TRVTiposOcorrencia_Grava(ByVal objTRVTiposOcorrencia As ClassTRVTiposOcorrencia) As Long

Dim lErro As Long
Dim lTransacao As Long

On Error GoTo Erro_TRVTiposOcorrencia_Grava

    'Abertura de transação
    lTransacao = Transacao_Abrir()
    If lTransacao = 0 Then gError 198017

    lErro = CF("TRVTiposOcorrencia_Grava_EmTrans", objTRVTiposOcorrencia)
    If lErro <> SUCESSO Then gError 198018

    'Confirma a transação
    lErro = Transacao_Commit()
    If lErro <> AD_SQL_SUCESSO Then gError 198019

    TRVTiposOcorrencia_Grava = SUCESSO

    Exit Function

Erro_TRVTiposOcorrencia_Grava:

    TRVTiposOcorrencia_Grava = gErr

    Select Case gErr

        Case 198017
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_TRANSACAO", gErr)

        Case 198018

        Case 198019
            Call Rotina_Erro(vbOKOnly, "ERRO_COMMIT", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 198020)

    End Select

    'Desfaz Transação
    Call Transacao_Rollback

    Exit Function

End Function

Public Function TRVTiposOcorrencia_Grava_EmTrans(ByVal objTRVTiposOcorrencia As ClassTRVTiposOcorrencia) As Long

Dim lErro As Long
Dim alComando(0 To 1) As Long
Dim iIndice As Integer
Dim iCodigo As Integer

On Error GoTo Erro_TRVTiposOcorrencia_Grava_EmTrans

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 198021
    Next

    'Le a tabelaTRVTiposOcorrencia
    lErro = Comando_ExecutarPos(alComando(0), "SELECT Codigo FROM TRVTiposOcorrencia WHERE Codigo= ? ", _
                0, iCodigo, objTRVTiposOcorrencia.iCodigo)
    If lErro <> AD_SQL_SUCESSO Then gError 198022

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(0))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 198023

    'Se existir => UPDATE, senão => INSERT
    If lErro = AD_SQL_SUCESSO Then

        'Trava registro contra alterações/Leituras
        lErro = Comando_LockExclusive(alComando(0))
        If lErro <> SUCESSO Then gError 198024

        lErro = Comando_ExecutarPos(alComando(1), "UPDATE TRVTiposOcorrencia SET Descricao= ? , EstornaAporteVou= ? , ConsideraComisInt= ? , AlteraComiVou= ? , " & _
                "AlteraCMCC= ? , AlteraCMC= ? , AlteraCMR= ? , AlteraOVER= ? , AlteraCMA= ? , " & _
                "AceitaVlrPositivo= ? , AceitaVlrNegativo= ?, IncideSobre = ? ", alComando(0), _
                objTRVTiposOcorrencia.sDescricao, objTRVTiposOcorrencia.iEstornaAporteVou, objTRVTiposOcorrencia.iConsideraComisInt, objTRVTiposOcorrencia.iAlteraComiVou, _
                objTRVTiposOcorrencia.iAlteraCMCC, objTRVTiposOcorrencia.iAlteraCMC, objTRVTiposOcorrencia.iAlteraCMR, objTRVTiposOcorrencia.iAlteraOVER, objTRVTiposOcorrencia.iAlteraCMA, _
                objTRVTiposOcorrencia.iAceitaVlrPositivo, objTRVTiposOcorrencia.iAceitaVlrNegativo, objTRVTiposOcorrencia.iIncideSobre)
        If lErro <> AD_SQL_SUCESSO Then gError 198025

    Else


        lErro = Comando_Executar(alComando(1), "INSERT INTO TRVTiposOcorrencia( Codigo, Descricao, EstornaAporteVou, ConsideraComisInt, " & _
                "AlteraComiVou, AlteraCMCC, AlteraCMC, AlteraCMR, AlteraOVER, " & _
                "AlteraCMA, AceitaVlrPositivo, AceitaVlrNegativo,IncideSobre) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)", _
                objTRVTiposOcorrencia.iCodigo, objTRVTiposOcorrencia.sDescricao, objTRVTiposOcorrencia.iEstornaAporteVou, objTRVTiposOcorrencia.iConsideraComisInt, _
                objTRVTiposOcorrencia.iAlteraComiVou, objTRVTiposOcorrencia.iAlteraCMCC, objTRVTiposOcorrencia.iAlteraCMC, objTRVTiposOcorrencia.iAlteraCMR, objTRVTiposOcorrencia.iAlteraOVER, _
                objTRVTiposOcorrencia.iAlteraCMA, objTRVTiposOcorrencia.iAceitaVlrPositivo, objTRVTiposOcorrencia.iAceitaVlrNegativo, objTRVTiposOcorrencia.iIncideSobre)
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 198026

    End If

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVTiposOcorrencia_Grava_EmTrans = SUCESSO

    Exit Function

Erro_TRVTiposOcorrencia_Grava_EmTrans:

    TRVTiposOcorrencia_Grava_EmTrans = gErr

    Select Case gErr

        Case 198021
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 198022, 198023
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVTIPOSOCORRENCIA", gErr)

        Case 198024
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVTIPOSOCORRENCIA", gErr)

        Case 198025
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVTIPOSOCORRENCIA", gErr)

        Case 198026
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_TRVTIPOSOCORRENCIA", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 198027)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

'ROTINAS CRIADAS AUTOMATICAMENTE PELA TELA BROWSECRIA
'EXCLUSÃO
Public Function TRVTiposOcorrencia_Exclui(ByVal objTRVTiposOcorrencia As ClassTRVTiposOcorrencia) As Long

Dim lErro As Long
Dim lTransacao As Long

On Error GoTo Erro_TRVTiposOcorrencia_Exclui

    'Abertura de transação
    lTransacao = Transacao_Abrir()
    If lTransacao = 0 Then gError 198006

    lErro = CF("TRVTiposOcorrencia_Exclui_EmTrans", objTRVTiposOcorrencia)
    If lErro <> SUCESSO Then gError 198007

    'Confirma a transação
    lErro = Transacao_Commit()
    If lErro <> AD_SQL_SUCESSO Then gError 198008

    TRVTiposOcorrencia_Exclui = SUCESSO

    Exit Function

Erro_TRVTiposOcorrencia_Exclui:

    TRVTiposOcorrencia_Exclui = gErr

    Select Case gErr

        Case 198006
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_TRANSACAO", gErr)

        Case 198007

        Case 198008
            Call Rotina_Erro(vbOKOnly, "ERRO_COMMIT", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 198009)

    End Select

    'Desfaz Transação
    Call Transacao_Rollback

    Exit Function

End Function

Public Function TRVTiposOcorrencia_Exclui_EmTrans(ByVal objTRVTiposOcorrencia As ClassTRVTiposOcorrencia) As Long

Dim lErro As Long
Dim alComando(0 To 2) As Long
Dim iIndice As Integer
Dim iCodigo As Integer
Dim lCodigoOcr As Long

On Error GoTo Erro_TRVTiposOcorrencia_Exclui_EmTrans

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 198010
    Next

    'Le a tabelaTRVTiposOcorrencia
    lErro = Comando_ExecutarPos(alComando(2), "SELECT Codigo FROM TRVOcorrencias WHERE Origem= ? ", _
                0, lCodigoOcr, objTRVTiposOcorrencia.iCodigo)
    If lErro <> AD_SQL_SUCESSO Then gError 198089

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(2))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 198090

    'Se não existir => ERRO
    If lErro <> AD_SQL_SEM_DADOS Then gError 198091

    'Le a tabelaTRVTiposOcorrencia
    lErro = Comando_ExecutarPos(alComando(0), "SELECT Codigo FROM TRVTiposOcorrencia WHERE Codigo= ? ", _
                0, iCodigo, objTRVTiposOcorrencia.iCodigo)
    If lErro <> AD_SQL_SUCESSO Then gError 198011

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(0))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 198012

    'Se não existir => ERRO
    If lErro = AD_SQL_SEM_DADOS Then gError 198013

    'Trava registro contra alterações/Leituras
    lErro = Comando_LockExclusive(alComando(0))
    If lErro <> SUCESSO Then gError 198014

    lErro = Comando_ExecutarPos(alComando(1), "DELETE FROM TRVTiposOcorrencia", alComando(0))
    If lErro <> AD_SQL_SUCESSO Then gError 198015

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVTiposOcorrencia_Exclui_EmTrans = SUCESSO

    Exit Function

Erro_TRVTiposOcorrencia_Exclui_EmTrans:

    TRVTiposOcorrencia_Exclui_EmTrans = gErr

    Select Case gErr

        Case 198010
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 198011, 198012
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVTIPOSOCORRENCIA", gErr)

        Case 198013
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVTIPOSOCORRENCIA_NAO_CADASTRADO", gErr, objTRVTiposOcorrencia.iCodigo)

        Case 198014
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVTIPOSOCORRENCIA", gErr)

        Case 198015
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_TRVTIPOSOCORRENCIA", gErr)
            
        Case 198089, 198090
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVOCORRENCIAS", gErr)

        Case 198091
            Call Rotina_Erro(vbOKOnly, "ERRO_TIPO_ASSOC_OCR", gErr, objTRVTiposOcorrencia.iCodigo, lCodigoOcr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 198016)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Public Function RelFluxoCaixaContabil_Prepara2_Valida(ByVal sConta As String, dValor As Double, bValido As Boolean) As Long
    
    If (sConta = "118010134007000" Or sConta = "211010202007000" Or sConta = "211010202006000" Or sConta = "211010201011000") And dValor > 0 Then
        bValido = False
    Else
        bValido = True
    End If
    RelFluxoCaixaContabil_Prepara2_Valida = SUCESSO
End Function

Public Function TRVVou_Acerta_Comis_Ant(ByVal objVou As ClassTRVVouchers) As Long
'Exclui e relança conforme o que vir do Sigav

Dim lErro As Long
Dim alComando(0 To 10) As Long
Dim iIndice As Integer
Dim lNumIntDoc As Long
Dim sTipoDoc As String
Dim sTipoDocLanc As String
Dim lContador As Long

On Error GoTo Erro_TRVVou_Acerta_Comis_Ant

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 198556
    Next

    lErro = Comando_Executar(alComando(0), "SELECT MAX(Seq) FROM TRVVoucherInfo WHERE TipVou= ? AND Serie = ? AND NumVou = ? ", lContador, objVou.sTipVou, objVou.sSerie, objVou.lNumVou)
    If lErro <> AD_SQL_SUCESSO Then gError 198557

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(0))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 198558

    sTipoDoc = String(STRING_TRV_VOU_INFO_TIPODOC, 0)

    'Le a tabelaTRVTiposOcorrencia
    If objVou.sTipoDoc = TRV_TIPODOC_VOU_TEXTO Then
        sTipoDocLanc = TRV_TIPODOC_BRUTO_TEXTO
        lErro = Comando_Executar(alComando(1), "SELECT TipoDoc FROM TRVVoucherInfo WHERE TipVou= ? AND Serie = ? AND NumVou = ? AND TipoDoc IN (?,?,?) ", _
                    sTipoDoc, objVou.sTipVou, objVou.sSerie, objVou.lNumVou, TRV_TIPODOC_BRUTO_TEXTO, TRV_TIPODOC_CMA_TEXTO, TRV_TIPODOC_CMCC_TEXTO)
    Else
        sTipoDocLanc = objVou.sTipoDoc
        lErro = Comando_Executar(alComando(1), "SELECT TipoDoc FROM TRVVoucherInfo WHERE TipVou= ? AND Serie = ? AND NumVou = ? AND TipoDoc = ? ", _
                    sTipoDoc, objVou.sTipVou, objVou.sSerie, objVou.lNumVou, objVou.sTipoDoc)
    
    End If
    If lErro <> AD_SQL_SUCESSO Then gError 198559

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(1))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 198560

    'Se não existir => ERRO
    Do While lErro <> AD_SQL_SEM_DADOS
    
        lErro = TRVVou_Gera_Comis_Trata_Estorno(alComando(2), alComando(3), alComando(4), alComando(5), alComando(6), objVou, Date, "Alteração vinda do Sigav", sTipoDoc, lContador)
        If lErro <> SUCESSO Then gError 198561
    
        'Busca Próximo
        lErro = Comando_BuscarProximo(alComando(1))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 198562
    
    Loop
    
    lErro = TRVVou_Gera_Comis_Insere_Info(alComando(7), alComando(8), alComando(9), objVou, sTipoDocLanc, objVou.dtData, Abs(objVou.dValor), "Alteração vinda do Sigav", TRV_VOU_INFO_STATUS_LIBERADO, 0, 0, 0, TRV_CLIENTEINFO_TIPO_CLIENTE, objVou.lCliente, 0, 0, lContador)
    If lErro <> SUCESSO Then gError 198563

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVVou_Acerta_Comis_Ant = SUCESSO

    Exit Function

Erro_TRVVou_Acerta_Comis_Ant:

    TRVVou_Acerta_Comis_Ant = gErr

    Select Case gErr

        Case 198556
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 198557 To 198560, 198562
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVVOUCHERINFO", gErr)

        Case 198561, 198563

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 198564)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function
    
End Function

Public Function TRVOcrExp_Insere(ByVal objOCR As ClassTRVOcorrencias, Optional ByVal bExclusao As Boolean) As Long

Dim lErro As Long
Dim alComando(0 To 2) As Long
Dim iIndice As Integer
Dim iExcluido As Integer
Dim lNumIntDoc As Long
Dim dValorFat As Double, dtDataFat As Date

On Error GoTo Erro_TRVOcrExp_Insere

    dtDataFat = DATA_NULA

    'A kogut desistiu da geração desse arquivo, se voltra atrás é só tirar o 1<>1 do IF
    If iSistemaIntegrado = SISTEMA_INTEGRADO_KOGUT Then
    
        'Abertura de Comando
        For iIndice = LBound(alComando) To UBound(alComando)
            alComando(iIndice) = Comando_Abrir()
            If alComando(iIndice) = 0 Then gError 200180
        Next
        
        If bExclusao Then
            iExcluido = MARCADO
        Else
            iExcluido = DESMARCADO
            
            lErro = CF("TRVOcorrencias_Le", objOCR)
            If lErro <> SUCESSO Then gError 200181
            
            If objOCR.iTipoDocDestino = TRV_TIPO_DOC_DESTINO_TITREC And objOCR.lNumIntDocDestino <> 0 Then
            
                'Le a Data de Emissão da Fatura e Valor
                lErro = Comando_Executar(alComando(2), "SELECT DataEmissao, Valor FROM TitulosRecTodos WHERE NumIntDoc = ?", dtDataFat, dValorFat, objOCR.lNumIntDocDestino)
                If lErro <> AD_SQL_SUCESSO Then gError 200182

                'Busca Primeiro
                lErro = Comando_BuscarPrimeiro(alComando(2))
                If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200182
                
            ElseIf objOCR.iTipoDocDestino = TRV_TIPO_DOC_DESTINO_TITPAG And objOCR.lNumIntDocDestino <> 0 Then
            
                'Le a Data de Emissão da Fatura e Valor
                lErro = Comando_Executar(alComando(2), "SELECT DataEmissao, ValorTotal FROM TitulosPagTodos WHERE NumIntDoc = ?", dtDataFat, dValorFat, objOCR.lNumIntDocDestino)
                If lErro <> AD_SQL_SUCESSO Then gError 200182

                'Busca Primeiro
                lErro = Comando_BuscarPrimeiro(alComando(2))
                If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200182
                
            End If
            
        End If
    
        'Obter NumIntDoc
        lErro = CF("Config_ObterNumInt", "TRVConfig", "NUM_INT_PROX_TRVOCREXP", lNumIntDoc)
        If lErro <> SUCESSO Then gError 200181
        
        lErro = Comando_Executar(alComando(1), "INSERT INTO TRVOcrExp( NumIntDoc, Usuario, Data, Hora, " & _
                "NumIntDocOCR, NumVou, TipoDoc, Serie, Codigo, " & _
                "Cliente, DataEmissao, Observacao, Status, Origem, " & _
                "Historico, FormaPagto, ValorTotal, Excluido, Exportado, " & _
                "UsuarioExportacao, DataExportacao, HoraExportacao, NomeArq, NumFat, DataFat, ValorFat) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)", _
                lNumIntDoc, gsUsuario, Date, CDbl(Time), _
                objOCR.lNumIntDoc, objOCR.lNumVou, objOCR.sTipoDoc, objOCR.sSerie, objOCR.lCodigo, _
                objOCR.lCliente, objOCR.dtDataEmissao, objOCR.sObservacao, objOCR.iStatus, objOCR.iOrigem, _
                objOCR.sHistorico, objOCR.iFormaPagto, objOCR.dValorTotal, iExcluido, 0, _
                "", DATA_NULA, 0, "", objOCR.lNumDocDestino, dtDataFat, dValorFat)
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200182
    
        'Fecha Comando
        For iIndice = LBound(alComando) To UBound(alComando)
            Call Comando_Fechar(alComando(iIndice))
        Next

    End If

    TRVOcrExp_Insere = SUCESSO

    Exit Function

Erro_TRVOcrExp_Insere:

    TRVOcrExp_Insere = gErr

    Select Case gErr

        Case 200180
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 200181

        Case 200182
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_TRVOCREXP", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 200183)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Public Function TRVVouExp_Insere(ByVal lComando1 As Long, ByVal lComando2 As Long, ByVal lComando3 As Long, ByVal lComando4 As Long, ByVal lComando5 As Long, ByVal lComando6 As Long, ByVal objVou As ClassTRVVouExp) As Long

Dim lErro As Long
Dim lNumIntDoc As Long
Dim lNumIntTitulo As Long
Dim dtDataFat As Date
Dim lNumFat As Long
Dim dtDataPagto As Date
Dim lRepresentante As Long
Dim dComissaoRep As Double
Dim lCorrentista As Long
Dim dComissaoCorr As Double
Dim lClienteComissao As Long
Dim dComissaoAg As Double
Dim lEmissor As Long
Dim dComissaoEmissor As Double
Dim dtDataCanc As Date, dValorFat As Double
Dim dValorBrutoComOCR As Double, dValorCMAComOCR As Double, dValorCMCC As Double, dValorCMR As Double, dValorCMC As Double, dValorCME As Double, dValorAporte As Double
Dim iTipoDocDestino As Integer, lNumIntDocDestino As Long, dValorAporteCred As Double

On Error GoTo Erro_TRVVouExp_Insere

    If iSistemaIntegrado = SISTEMA_INTEGRADO_KOGUT Then
        
        lErro = objVou.Obtem_Dados_Geracao
        If lErro <> SUCESSO Then gError 200180
        
        'Precisa pegar os dados da comissão
        lErro = Comando_Executar(lComando6, "SELECT TipoDocDestino, NumIntDocDestino, Representante, ComissaoRep, Correntista, ComissaoCorr, ClienteComissao, ComissaoAg, Emissor, ComissaoEmissor, DataCanc, ValorBrutoComOCR, ValorCMAComOCR, ValorCMCC, ValorCMR, ValorCMC, ValorCME, ValorAporte, ValorAporteCred  FROM TRVVouchers AS V WHERE V.NumVou = ? AND V.TipoDoc= ? AND V.Serie = ? AND V.TipVou = ? ", iTipoDocDestino, lNumIntDocDestino, lRepresentante, dComissaoRep, lCorrentista, dComissaoCorr, lClienteComissao, dComissaoAg, lEmissor, dComissaoEmissor, dtDataCanc, dValorBrutoComOCR, dValorCMAComOCR, dValorCMCC, dValorCMR, dValorCMC, dValorCME, dValorAporte, dValorAporteCred, objVou.lNumVou, TRV_TIPODOC_VOU_TEXTO, objVou.sSerie, objVou.sTipVou)
        If lErro <> AD_SQL_SUCESSO Then gError 200208
    
        'Busca Primeiro
        lErro = Comando_BuscarPrimeiro(lComando6)
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200209
        
        If lErro = AD_SQL_SUCESSO Then
            objVou.lRepresentanteComissao = lRepresentante
            objVou.lAgenciaComissao = lClienteComissao
            objVou.lCorrentistaComissao = lCorrentista
            objVou.lEmissorComissao = lEmissor - FATOR_SOMA_COD_EMISSOR
            
            If objVou.lEmissorComissao < 0 Then objVou.lEmissorComissao = 0
            
            objVou.dPercComiAg = dComissaoAg
            objVou.dPercComiCor = dComissaoCorr
            objVou.dPercComiEmi = dComissaoEmissor
            objVou.dPercComiRep = dComissaoRep
            objVou.dtDataCanc = dtDataCanc
            
            objVou.dValorBrutoComOCR = dValorBrutoComOCR
            objVou.dValorCMAComOCR = dValorCMAComOCR
            objVou.dValorCMCC = dValorCMCC
            objVou.dValorCMR = dValorCMR
            objVou.dValorCMC = dValorCMC
            objVou.dValorCME = dValorCME
            objVou.dValorAporte = dValorAporte
            objVou.dValorAporteCred = dValorAporteCred
            objVou.dValorNeto = dValorBrutoComOCR - dValorCMAComOCR - dValorCMCC - dValorCMR - dValorCMC - dValorCME - dValorAporte - dValorAporteCred
                        
        End If
            
        If objVou.iTransacao = TRV_EXPORT_VOU_TRANS_CANC_VOU Or objVou.iTransacao = TRV_EXPORT_VOU_TRANS_PAGTO Or objVou.iTransacao = TRV_EXPORT_VOU_TRANS_ALT_COMI Then
            
            'Precisa pegar os dados da fatura e da baixa se houver
            lErro = Comando_Executar(lComando4, "SELECT T.NumIntDoc, T.NumTitulo, T.DataEmissao, T.Valor FROM TRVVouchers AS V, TitulosRecTodos AS T WHERE V.TipoDocDestino = 3 AND V.NumIntDocDestino = T.NumIntDoc AND V.TipoDoc = ? AND V.TipVou= ? AND V.Serie = ? AND V.NumVou = ? ", lNumIntTitulo, lNumFat, dtDataFat, dValorFat, TRV_TIPODOC_VOU_TEXTO, objVou.sTipVou, objVou.sSerie, objVou.lNumVou)
            If lErro <> AD_SQL_SUCESSO Then gError 200208
        
            'Busca Primeiro
            lErro = Comando_BuscarPrimeiro(lComando4)
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200209
            
            If lErro = AD_SQL_SUCESSO Then
                objVou.lNumFat = lNumFat
                objVou.dtDataFat = dtDataFat
                objVou.dValorFat = dValorFat
            End If
                        
            'Precisa pegar os dados da fatura e da baixa se houver
            lErro = Comando_Executar(lComando5, "SELECT B.Data FROM BaixasRec As B, BaixasParcRec AS BP, ParcelasRecTodas AS P WHERE P.NumParcela = 1 AND P.NumIntTitulo = ? AND P.NumIntDoc = BP.NumIntParcela AND BP.NumIntBaixa = B.NumIntBaixa AND BP.Status <> 5 AND B.Status <> 5 ORDER BY B.Data ", dtDataPagto, lNumIntTitulo)
            If lErro <> AD_SQL_SUCESSO Then gError 200210
        
            'Busca Primeiro
            lErro = Comando_BuscarPrimeiro(lComando5)
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200211
            
            If lErro = AD_SQL_SUCESSO Then
                objVou.dtDataPag = dtDataPagto
            End If
        
        End If
    
        'Obter NumIntDoc
        lErro = CF("Config_ObterNumInt2", lComando2, lComando3, "TRVConfig", "NUM_INT_PROX_TRVVOUEXP", lNumIntDoc)
        If lErro <> SUCESSO Then gError 200181
        
        lErro = Comando_Executar(lComando1, "INSERT INTO TRVVouExp( NumIntDoc,Transacao, Usuario, Data, Hora, NumVou, TipVou, Serie, Cliente, NumFat, DataFat,DataCanc,DataPag, Exportado, " & _
                "UsuarioExportacao, DataExportacao, HoraExportacao, NomeArq,AgenciaComissao,RepresentanteComissao,EmissorComissao,CorrentistaComissao,PercComiAg,PergComiRep,PercComiEmi,PercComiCor,ValorFat,ValorBrutoComOCR, ValorCMAComOCR, ValorCMCC, ValorCMR, ValorCMC, ValorCME, ValorAporte, ValorAporteCred, ValorNeto) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)", _
                lNumIntDoc, objVou.iTransacao, objVou.sUsuario, objVou.dtData, objVou.dHora, objVou.lNumVou, objVou.sTipVou, objVou.sSerie, objVou.lCliente, objVou.lNumFat, objVou.dtDataFat, objVou.dtDataCanc, objVou.dtDataPag, objVou.iExportado, _
                objVou.sUsuarioExportacao, objVou.dtDataExportacao, objVou.dHoraExportacao, objVou.sNomeArq, objVou.lAgenciaComissao, objVou.lRepresentanteComissao, objVou.lEmissorComissao, objVou.lCorrentistaComissao, objVou.dPercComiAg, objVou.dPercComiRep, objVou.dPercComiEmi, objVou.dPercComiCor, objVou.dValorFat, objVou.dValorBrutoComOCR, objVou.dValorCMAComOCR, objVou.dValorCMCC, objVou.dValorCMR, objVou.dValorCMC, objVou.dValorCME, objVou.dValorAporte, objVou.dValorAporteCred, objVou.dValorNeto)
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200182

    End If

    TRVVouExp_Insere = SUCESSO

    Exit Function

Erro_TRVVouExp_Insere:

    TRVVouExp_Insere = gErr

    Select Case gErr
        
        Case 200180, 200181

        Case 200182
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_TRVVOUEXP", gErr)
            
        Case 200208 To 200211
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVVOUCHERS", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 200183)

    End Select

    Exit Function

End Function

Public Function TRVOcorrencias_Exporta_Sigav() As Long

Dim lErro As Long
Dim lTransacao As Long
Dim alComando(1 To 2) As Long
Dim iIndice As Integer
Dim sDiretorio As String
Dim sDiretorioTemp As String
Dim sParteNomeArq As String
Dim sNomeArq As String
Dim tTRVOcrExp As typeTRVOcrExp
Dim vRegistro As Variant
Dim sRegistro As String
Dim lRetorno As Long
Dim colRegistros As New Collection
Dim bArqAberto As Boolean

On Error GoTo Erro_TRVOcorrencias_Exporta_Sigav

    'Abertura de transação
    lTransacao = Transacao_Abrir()
    If lTransacao = 0 Then gError 200184

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 200185
    Next
    
    sParteNomeArq = Format(Now, "YYYYMMDDHHMMSS")
    
    sNomeArq = gsEmpresaTRV & "ocorrencias" & sParteNomeArq & ".csv"
    
    'Obtém o diretório onde estão os arquivos
    sDiretorio = String(512, 0)
    lRetorno = GetPrivateProfileString("Geral", "dirArqImpCorpKogutOcr", "\\armagedom\sisweb\forprint\import_ocrs\", sDiretorio, 512, "ADM100.INI")
    sDiretorio = left(sDiretorio, lRetorno)
    
    'Obtém o diretório onde estão os arquivos
    sDiretorioTemp = String(512, 0)
    lRetorno = GetPrivateProfileString("Geral", "dirArqImpKogut", "c:\travelace\corporator\", sDiretorioTemp, 512, "ADM100.INI")
    sDiretorioTemp = left(sDiretorioTemp, lRetorno)
    sDiretorioTemp = sDiretorioTemp & "temp\"
    
    'Alocação de espaço no buffer
    tTRVOcrExp.sUsuario = String(STRING_USUARIO_CODIGO, 0)
    tTRVOcrExp.sTipoDoc = String(STRING_TRV_OCR_TIPODOC, 0)
    tTRVOcrExp.sSerie = String(STRING_TRV_OCR_SERIE, 0)
    tTRVOcrExp.sObservacao = String(STRING_TRV_OCR_OBS, 0)
    tTRVOcrExp.sHistorico = String(STRING_TRV_OCR_HISTORICO, 0)

    'Le a tabelaTRVOcrExp
    lErro = Comando_ExecutarPos(alComando(1), "SELECT NumIntDoc, Usuario, Data, Hora, NumIntDocOCR, NumVou, " & _
                "TipoDoc, Serie, Codigo, Cliente, DataEmissao, Observacao, Status, " & _
                "Origem, Historico, FormaPagto, ValorTotal, Excluido, NumFat, DataFat, ValorFat FROM TRVOcrExp WHERE Exportado = ? OR NomeArq = ? ORDER BY NumIntDoc ", _
                0, tTRVOcrExp.lNumIntDoc, tTRVOcrExp.sUsuario, tTRVOcrExp.dtData, tTRVOcrExp.dHora, _
                tTRVOcrExp.lNumIntDocOCR, tTRVOcrExp.lNumVou, tTRVOcrExp.sTipoDoc, tTRVOcrExp.sSerie, tTRVOcrExp.lCodigo, _
                tTRVOcrExp.lCliente, tTRVOcrExp.dtDataEmissao, tTRVOcrExp.sObservacao, tTRVOcrExp.iStatus, tTRVOcrExp.iOrigem, _
                tTRVOcrExp.sHistorico, tTRVOcrExp.iFormaPagto, tTRVOcrExp.dValorTotal, tTRVOcrExp.iExcluido, tTRVOcrExp.lNumFat, tTRVOcrExp.dtDataFat, tTRVOcrExp.dValorFat, _
                DESMARCADO, sNomeArq)
    If lErro <> AD_SQL_SUCESSO Then gError 200186

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(1))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200187
    
    Do While lErro <> AD_SQL_SEM_DADOS

        sRegistro = tTRVOcrExp.sTipoDoc & ";" & tTRVOcrExp.sSerie & ";" & _
        CStr(tTRVOcrExp.lNumVou) & ";" & CStr(tTRVOcrExp.lCodigo) & ";" & Format(tTRVOcrExp.dtDataEmissao, "dd/mm/yyyy") & ";" & _
        CStr(tTRVOcrExp.lCliente) & ";" & CStr(tTRVOcrExp.iOrigem) & ";" & CStr(tTRVOcrExp.iFormaPagto) & ";" & _
        tTRVOcrExp.sHistorico & ";" & Replace(tTRVOcrExp.sObservacao, vbNewLine, " ") & ";" & _
        Format(tTRVOcrExp.dValorTotal, "STANDARD") & ";" & IIf(tTRVOcrExp.iExcluido = MARCADO, "yes", "no") & ";" & CStr(tTRVOcrExp.iStatus) & ";" & CStr(tTRVOcrExp.lNumFat) & ";" & IIf(tTRVOcrExp.dtDataFat = DATA_NULA, "", Format(tTRVOcrExp.dtDataFat, "dd/mm/yyyy")) & ";" & IIf(tTRVOcrExp.dValorFat = 0, "", Format(tTRVOcrExp.dValorFat, "STANDARD"))
        
        colRegistros.Add sRegistro
    
        'Marca como exportado
        lErro = Comando_ExecutarPos(alComando(2), "UPDATE TRVOcrExp SET Exportado = ?, DataExportacao = ?, HoraExportacao = ?, UsuarioExportacao = ?, NomeArq = ?", alComando(1), MARCADO, Date, CDbl(Time), gsUsuario, sNomeArq)
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200188
        
        'Busca Próximo
        lErro = Comando_BuscarProximo(alComando(1))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200189
    
    Loop
    
    Open sDiretorio & sNomeArq For Output As #1
    bArqAberto = True
    
    For Each vRegistro In colRegistros
        Print #1, vRegistro
    Next
    
    Close #1
    bArqAberto = False
        
    Open sDiretorioTemp & sNomeArq For Output As #1
    bArqAberto = True
    
    For Each vRegistro In colRegistros
        Print #1, vRegistro
    Next
    
    Close #1
    bArqAberto = False
       
    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next
    
    'Confirma a transação
    lErro = Transacao_Commit()
    If lErro <> AD_SQL_SUCESSO Then gError 200190

    TRVOcorrencias_Exporta_Sigav = SUCESSO

    Exit Function

Erro_TRVOcorrencias_Exporta_Sigav:

    TRVOcorrencias_Exporta_Sigav = gErr

    Select Case gErr

        Case 200184
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_TRANSACAO", gErr)
            
        Case 200185
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 200186, 200187, 200189
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVOCREXP", gErr)
            
        Case 200188
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVOCREXP", gErr)

        Case 200190
            Call Rotina_Erro(vbOKOnly, "ERRO_COMMIT", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 200191)

    End Select

    If bArqAberto Then Close #1

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next
    
    'Desfaz Transação
    Call Transacao_Rollback

    Exit Function

End Function

Public Function TRVVouchers_Exporta_Sigav() As Long

Dim lErro As Long
Dim lTransacao As Long
Dim alComando(1 To 2) As Long
Dim iIndice As Integer
Dim sDiretorio As String
Dim sDiretorioTemp As String
Dim sParteNomeArq As String
Dim sNomeArq As String
Dim tTRVVouExp As typeTRVVouExp
Dim vRegistro As Variant
Dim sRegistro As String
Dim lRetorno As Long
Dim colRegistros As New Collection
Dim bArqAberto As Boolean

On Error GoTo Erro_TRVVouchers_Exporta_Sigav

    'Abertura de transação
    lTransacao = Transacao_Abrir()
    If lTransacao = 0 Then gError 200184

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 200185
    Next
    
    sParteNomeArq = Format(Now, "DDMMYYYYHHMM")
    
    sNomeArq = gsEmpresaTRV & "SISWEB_VOUCHERS_" & sParteNomeArq & ".csv"
    
    'Obtém o diretório onde estão os arquivos
    sDiretorio = String(512, 0)
    lRetorno = GetPrivateProfileString("Geral", "dirArqImpCorpKogut", "c:\travelace\corporator\", sDiretorio, 512, "ADM100.INI")
    sDiretorio = left(sDiretorio, lRetorno)
    
    'Obtém o diretório onde estão os arquivos
    sDiretorioTemp = String(512, 0)
    lRetorno = GetPrivateProfileString("Geral", "dirArqImpKogut", "c:\travelace\corporator\", sDiretorioTemp, 512, "ADM100.INI")
    sDiretorioTemp = left(sDiretorioTemp, lRetorno)
    sDiretorioTemp = sDiretorioTemp & "temp\"
    
    'Alocação de espaço no buffer
    tTRVVouExp.sUsuario = String(STRING_USUARIO_CODIGO, 0)
    tTRVVouExp.sTipVou = String(STRING_TRV_OCR_TIPOVOU, 0)
    tTRVVouExp.sSerie = String(STRING_TRV_OCR_SERIE, 0)

    'Le a tabelaTRVOcrExp
    lErro = Comando_ExecutarPos(alComando(1), "SELECT NumIntDoc, Usuario, Data, Hora, NumVou, " & _
                "TipVou, Serie, Cliente, NumFat, DataFat, DataCanc, DataPag,AgenciaComissao,RepresentanteComissao,EmissorComissao,CorrentistaComissao,PercComiAg,PergComiRep,PercComiEmi,PercComiCor, ValorFat,ValorBrutoComOCR, ValorCMAComOCR, ValorCMCC, ValorCMR, ValorCMC, ValorCME, ValorAporte, ValorAporteCred, ValorNeto FROM TRVVouExp WHERE Exportado = ? OR NomeArq = ? ORDER BY NumIntDoc ", _
                0, tTRVVouExp.lNumIntDoc, tTRVVouExp.sUsuario, tTRVVouExp.dtData, tTRVVouExp.dHora, _
                tTRVVouExp.lNumVou, tTRVVouExp.sTipVou, tTRVVouExp.sSerie, tTRVVouExp.lCliente, tTRVVouExp.lNumFat, tTRVVouExp.dtDataFat, tTRVVouExp.dtDataCanc, tTRVVouExp.dtDataPag, tTRVVouExp.lAgenciaComissao, tTRVVouExp.lRepresentanteComissao, tTRVVouExp.lEmissorComissao, tTRVVouExp.lCorrentistaComissao, tTRVVouExp.dPercComiAg, tTRVVouExp.dPercComiRep, tTRVVouExp.dPercComiEmi, tTRVVouExp.dPercComiCor, tTRVVouExp.dValorFat, _
                tTRVVouExp.dValorBrutoComOCR, tTRVVouExp.dValorCMAComOCR, tTRVVouExp.dValorCMCC, tTRVVouExp.dValorCMR, tTRVVouExp.dValorCMC, tTRVVouExp.dValorCME, tTRVVouExp.dValorAporte, tTRVVouExp.dValorAporteCred, tTRVVouExp.dValorNeto, _
                DESMARCADO, sNomeArq)
    If lErro <> AD_SQL_SUCESSO Then gError 200186

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(1))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200187
    
    Do While lErro <> AD_SQL_SEM_DADOS

        sRegistro = tTRVVouExp.lCliente & ";" & tTRVVouExp.sTipVou & ";" & tTRVVouExp.sSerie & ";" & tTRVVouExp.lNumVou _
        & ";" & tTRVVouExp.lNumFat & ";" & IIf(tTRVVouExp.dtDataFat <> DATA_NULA, Format(tTRVVouExp.dtDataFat, "DD/MM/YYYY"), "") & ";" & IIf(tTRVVouExp.dtDataCanc <> DATA_NULA, Format(tTRVVouExp.dtDataCanc, "DD/MM/YYYY"), "") & ";" & IIf(tTRVVouExp.dtDataPag <> DATA_NULA, Format(tTRVVouExp.dtDataPag, "DD/MM/YYYY"), "") & ";" & _
        CStr(tTRVVouExp.lAgenciaComissao) & ";" & CStr(tTRVVouExp.lRepresentanteComissao) & ";" & CStr(tTRVVouExp.lEmissorComissao) & ";" & CStr(tTRVVouExp.lCorrentistaComissao) & ";" & Format(tTRVVouExp.dPercComiAg, "##.0000") & ";" & Format(tTRVVouExp.dPercComiRep, "##.0000") & ";" & Format(tTRVVouExp.dPercComiEmi, "##.0000") & ";" & Format(tTRVVouExp.dPercComiCor, "##.0000") & ";" & IIf(tTRVVouExp.dValorFat = 0, "", Format(tTRVVouExp.dValorFat, "STANDARD"))
        
        If iVersaoVouExp = VERSAO_EXPORTACAO_VOUCHER_2 Then
            sRegistro = sRegistro & ";" & Format(tTRVVouExp.dValorBrutoComOCR, "STANDARD")
            sRegistro = sRegistro & ";" & Format(tTRVVouExp.dValorCMAComOCR, "STANDARD")
            sRegistro = sRegistro & ";" & Format(tTRVVouExp.dValorCMCC, "STANDARD")
            sRegistro = sRegistro & ";" & Format(tTRVVouExp.dValorCMR, "STANDARD")
            sRegistro = sRegistro & ";" & Format(tTRVVouExp.dValorCMC, "STANDARD")
            sRegistro = sRegistro & ";" & Format(tTRVVouExp.dValorCME, "STANDARD")
            sRegistro = sRegistro & ";" & Format(tTRVVouExp.dValorAporte, "STANDARD")
            sRegistro = sRegistro & ";" & Format(tTRVVouExp.dValorAporteCred, "STANDARD")
            sRegistro = sRegistro & ";" & Format(tTRVVouExp.dValorNeto, "STANDARD")
        End If
        
        colRegistros.Add sRegistro
    
        'Marca como exportado
        lErro = Comando_ExecutarPos(alComando(2), "UPDATE TRVVouExp SET Exportado = ?, DataExportacao = ?, HoraExportacao = ?, UsuarioExportacao = ?, NomeArq = ?", alComando(1), MARCADO, Date, CDbl(Time), gsUsuario, sNomeArq)
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200188
        
        'Busca Próximo
        lErro = Comando_BuscarProximo(alComando(1))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200189
    
    Loop
    
    Open sDiretorio & sNomeArq For Output As #1
    bArqAberto = True
    
    For Each vRegistro In colRegistros
        Print #1, vRegistro
    Next
    
    Close #1
    bArqAberto = False
        
    Open sDiretorioTemp & sNomeArq For Output As #1
    bArqAberto = True
    
    For Each vRegistro In colRegistros
        Print #1, vRegistro
    Next
    
    Close #1
    bArqAberto = False
       
    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next
    
    'Confirma a transação
    lErro = Transacao_Commit()
    If lErro <> AD_SQL_SUCESSO Then gError 200190

    TRVVouchers_Exporta_Sigav = SUCESSO

    Exit Function

Erro_TRVVouchers_Exporta_Sigav:

    TRVVouchers_Exporta_Sigav = gErr

    Select Case gErr

        Case 200184
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_TRANSACAO", gErr)
            
        Case 200185
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 200186, 200187, 200189
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVVOUEXP", gErr)
            
        Case 200188
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVVOUEXP", gErr)

        Case 200190
            Call Rotina_Erro(vbOKOnly, "ERRO_COMMIT", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 200191)

    End Select

    If bArqAberto Then Close #1

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next
    
    'Desfaz Transação
    Call Transacao_Rollback

    Exit Function

End Function

Public Function TRVTitulos_Exclui(ByVal objTRVTitulos As ClassTRVTitulos, ByVal lComando1 As Long, ByVal lComando2 As Long) As Long

Dim lErro As Long
Dim lNumIntDoc As Long

On Error GoTo Erro_TRVTitulos_Exclui

    'Le a tabelaTRVTiposOcorrencia
    lErro = Comando_ExecutarPos(lComando1, "SELECT NumIntDoc FROM TRVTitulos WHERE TipoDocOrigem = ? AND NumIntDocOrigem = ? ", _
                0, lNumIntDoc, objTRVTitulos.iTipoDocOrigem, objTRVTitulos.lNumIntDocOrigem)
    If lErro <> AD_SQL_SUCESSO Then gError 200232

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(lComando1)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200233

    'Se não existir => ERRO
    If lErro <> AD_SQL_SEM_DADOS Then

        'Trava registro contra alterações/Leituras
        lErro = Comando_LockExclusive(lComando1)
        If lErro <> SUCESSO Then gError 200234
    
        lErro = Comando_ExecutarPos(lComando2, "DELETE FROM TRVTitulos", lComando1)
        If lErro <> AD_SQL_SUCESSO Then gError 200235
        
    End If

    TRVTitulos_Exclui = SUCESSO

    Exit Function

Erro_TRVTitulos_Exclui:

    TRVTitulos_Exclui = gErr

    Select Case gErr

        Case 200232, 200233
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVTITULOS", gErr)

        Case 200234
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVTITULOS", gErr)

        Case 200235
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_TRVTITULOS", gErr)
        
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 200236)

    End Select

    Exit Function

End Function

Private Function TRVVouVendedores_Grava(ByVal objVou As ClassTRVVouchers, ByVal lComando1 As Long, ByVal lComando2 As Long, ByVal lComando3 As Long, ByVal lComando4 As Long, ByVal lComando5 As Long, Optional ByVal bSoGrava As Boolean = False) As Long

Dim lErro As Long
Dim lNumIntDoc As Long
Dim iPromotor As Integer
Dim colVend As New Collection
Dim objVend As ClassVendedor
Dim iAux As Integer

On Error GoTo Erro_TRVVouVendedores_Grava

    If Not bSoGrava Then
    
        'Le a Produto
        lErro = Comando_Executar(lComando1, "SELECT Vendedor FROM TRVProdutos WHERE Codigo = ? ", _
        iPromotor, objVou.sProduto)
        If lErro <> AD_SQL_SUCESSO Then gError 200391
        
        'Busca Primeiro
        lErro = Comando_BuscarPrimeiro(lComando1)
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200392
        
        If iPromotor = 0 Then
        
            'Le a Filiais Clientes
            lErro = Comando_Executar(lComando2, "SELECT Vendedor FROM FiliaisClientes WHERE CodCliente = ? AND CodFilial = ?", _
            iPromotor, objVou.lClienteVou, FILIAL_MATRIZ)
            If lErro <> AD_SQL_SUCESSO Then gError 200393
            
            'Busca Primeiro
            lErro = Comando_BuscarPrimeiro(lComando2)
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200394
    
        End If
        
        objVou.lPromotor = iPromotor
        
        lErro = TRVVendedor_Le_Recursivo(lComando3, colVend, iPromotor, 1)
        If lErro <> SUCESSO Then gError 200395
        
        'Le o Responsável
        lErro = Comando_Executar(lComando5, "SELECT Filial FROM FilialClienteCategorias WHERE Categoria = ? AND Cliente = ? AND Item = ?", _
        iAux, "Responsável", objVou.lClienteVou, "Call Center")
        If lErro <> AD_SQL_SUCESSO Then gError 200400
        
        'Busca Primeiro
        lErro = Comando_BuscarPrimeiro(lComando5)
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200401
        
        If lErro = AD_SQL_SUCESSO Then
            Set objVend = New ClassVendedor
            objVend.iCodigo = 9999
            colVend.Add objVend
        End If
    Else
        Set colVend = objVou.colVendedores
    End If
    
    For Each objVend In colVend
    
        lErro = Comando_Executar(lComando4, "INSERT INTO TRVVouVendedores( TipVou, Serie, NumVou, Vendedor) VALUES (?,?,?,?)", objVou.sTipVou, objVou.sSerie, objVou.lNumVou, objVend.iCodigo)
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200396

    Next

    TRVVouVendedores_Grava = SUCESSO

    Exit Function

Erro_TRVVouVendedores_Grava:

    TRVVouVendedores_Grava = gErr

    Select Case gErr

        Case 200391, 200392
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_PRODUTOS", gErr)

        Case 200393, 200394
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_FILIAISCLIENTES", gErr)
            
        Case 200395

        Case 200396
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERT_TRVVOUVENDEDORES", gErr)
        
        Case 200400, 200401
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_FILIALCLIENTECATEGORIAS", gErr)
        
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 200397)

    End Select

    Exit Function

End Function

Public Function TRVVendedor_Le_Recursivo(ByVal lComando As Long, ByVal colVendedores As Collection, ByVal iVendedorFilho As Integer, ByVal iNivel As Integer) As Long

Dim lErro As Long
Dim iVendedorPai  As Integer
Dim objVendedor As ClassVendedor

On Error GoTo Erro_TRVVendedor_Le_Recursivo

    If iVendedorFilho <> 0 Then

        If iNivel > 20 Then gError 200385
       
        'Le a tabelaTRVProdTarifa
        lErro = Comando_Executar(lComando, "SELECT Superior FROM VendedorTRV WHERE Vendedor = ? ", _
                    iVendedorPai, iVendedorFilho)
        If lErro <> AD_SQL_SUCESSO Then gError 200386
    
        'Busca Primeiro
        lErro = Comando_BuscarPrimeiro(lComando)
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200387
    
        'Sem Dados
        If lErro <> AD_SQL_SUCESSO Then gError 200388
        
        If iVendedorPai <> 0 Then
        
            Set objVendedor = New ClassVendedor
            
            objVendedor.iCodigo = iVendedorPai
            
            colVendedores.Add objVendedor
        
            lErro = TRVVendedor_Le_Recursivo(lComando, colVendedores, iVendedorPai, iNivel + 1)
            If lErro <> SUCESSO Then gError 200389
        
        End If
    
    End If
    
    TRVVendedor_Le_Recursivo = SUCESSO

    Exit Function

Erro_TRVVendedor_Le_Recursivo:

    TRVVendedor_Le_Recursivo = gErr

    Select Case gErr
    
        Case 200385 'ERRO_LIMITE_RECURSIVIDADE
            Call Rotina_Erro(vbOKOnly, "ERRO_LIMITE_RECURSIVIDADE", gErr)
    
        Case 200386, 200387
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_VENDEDORES", gErr)

        Case 200388
            Call Rotina_Erro(vbOKOnly, "ERRO_VENDEDOR_NAO_CADASTRADO", gErr, iVendedorFilho)
            
        Case 200389
        
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 200390)

    End Select

    Exit Function

End Function

Function TRVRelGerComiInt_Exclui(objTRVRelGerComiInt As ClassTRVRelGerComiInt) As Long

Dim lErro As Long
Dim alComando(1 To 7) As Long
Dim iIndice As Integer
Dim lTransacao As Long

On Error GoTo Erro_TRVRelGerComiInt_Exclui

    'Abertura de transação
    lTransacao = Transacao_Abrir()
    If lTransacao = 0 Then gError 199505
    
    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 199506
    Next

    lErro = Comando_Executar(alComando(3), "DELETE FROM TRVRelVoucher WHERE NumIntRel = ?", objTRVRelGerComiInt.lNumIntRel)
    If lErro <> AD_SQL_SUCESSO Then gError 199507

    lErro = Comando_Executar(alComando(4), "DELETE FROM TRVRelVoucherInfo WHERE NumIntRel = ?", objTRVRelGerComiInt.lNumIntRel)
    If lErro <> AD_SQL_SUCESSO Then gError 199508

    lErro = Comando_Executar(alComando(6), "DELETE FROM TRVRelComiInt WHERE NumIntRel = ?", objTRVRelGerComiInt.lNumIntRel)
    If lErro <> AD_SQL_SUCESSO Then gError 199509

    lErro = Comando_Executar(alComando(7), "DELETE FROM TRVRelGerComiInt WHERE NumIntRel = ?", objTRVRelGerComiInt.lNumIntRel)
    If lErro <> AD_SQL_SUCESSO Then gError 199510

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    'Confirma a transação
    lErro = Transacao_Commit()
    If lErro <> AD_SQL_SUCESSO Then gError 199511

    TRVRelGerComiInt_Exclui = SUCESSO

    Exit Function

Erro_TRVRelGerComiInt_Exclui:

    TRVRelGerComiInt_Exclui = gErr

    Select Case gErr

        Case 199505
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_TRANSACAO", gErr)

        Case 199506
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 199507
            Call Rotina_Erro(vbOKOnly, "ERRO_EXC_TRVRELVOUCHER", gErr, objTRVRelGerComiInt.lNumIntRel)

        Case 199508
            Call Rotina_Erro(vbOKOnly, "ERRO_EXC_TRVRELVOUCHERINFO", gErr, objTRVRelGerComiInt.lNumIntRel)

        Case 199509
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_TRVRELCOMIINT", gErr, objTRVRelGerComiInt.lNumIntRel)

        Case 199510
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_TRVRELGERCOMIINT", gErr, objTRVRelGerComiInt.lNumIntRel)

        Case 199511
            Call Rotina_Erro(vbOKOnly, "ERRO_COMMIT", gErr)
        
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 199512)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    'Desfaz Transação
    Call Transacao_Rollback
    
    Exit Function

End Function

Public Function TRVFatCartao_Grava(ByVal colAuto As Collection) As Long
'Atualiza os Títulos de Cartão de Crédito a partir dos vouchers pagos com cartão

Dim lErro As Long
Dim lTransacao As Long
Dim alComando(1 To 18) As Long
Dim iIndice As Integer
Dim sConteudo As String
Dim lNumTituloIni As Long
Dim dValor As Double
Dim objCtb As ClassImpCoinfoFatCRCtb
Dim objImpCoinfoCartoes As ClassImpCoinfoCartoes
Dim objContabAutomatica As ClassContabAutomatica
Dim objTRVConfig As ClassTRVConfig
Dim lProxTitRec As Long
Dim colConfig As Collection
Dim objTitRecTRV As ClassTitulosRecTRV
Dim sModeloFat As String
Dim sNomeDiretorio As String
Dim objTRVTitulosExp As ClassTRVTitulosExp
Dim objVoucherInfo As ClassTRVVoucherInfo
Dim objVouExp As ClassTRVVouExp
Dim objTRVTitulos As ClassTRVTitulos
Dim objVouAutoCC As ClassTRVVouAutoCC
Dim objVou As ClassTRVFATInfoVoucher
Dim objFrmAguarde As New ClassFrmAguarde
Dim objFrmAguardeTela As New FrmAguarde
Dim dValorAux As Double
Dim iCartaoAux As Integer
Dim lNumFatAux As Long
Dim sDocAux As String
Dim sItem As String
'Dim objTitRec As ClassTituloReceber
Dim lNumIntDocAux As Long
Dim iIndiceLib As Integer
Dim sTipoDocLib As String
Dim bLiberaOverFat As Boolean
Dim lRepresentante As Long

On Error GoTo Erro_TRVFatCartao_Grava
    
    'Abre o comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 200672
    Next
    
    objFrmAguarde.iTotalItens = colAuto.Count
    Call objFrmAguardeTela.Inicializa_Progressao(objFrmAguarde)

    lErro = CF("TRVConfig_Le", TRVCONFIG_DIRETORIO_MODELO_FAT_HTML_CARTAO, EMPRESA_TODA, sModeloFat)
    If lErro <> SUCESSO Then gError 200673
    
    lErro = CF("TRVConfig_Le", TRVCONFIG_DIRETORIO_FAT_HTML, EMPRESA_TODA, sNomeDiretorio)
    If lErro <> SUCESSO Then gError 200674
  
    lTransacao = Transacao_Abrir()
    If lTransacao = 0 Then gError 200675
     
    Set objTRVConfig = New ClassTRVConfig
    
    objTRVConfig.sCodigo = TRVCONFIG_PROX_NUM_TITREC
  
    lErro = CF("TRVConfig_Le_Lockado", alComando(6), TRVCONFIG_PROX_NUM_TITREC, EMPRESA_TODA, sConteudo)
    If lErro <> SUCESSO Then gError 200676
    
    lProxTitRec = StrParaLong(sConteudo)
    lNumTituloIni = lProxTitRec
    
    objTRVConfig.sConteudo = CStr(lNumTituloIni + colAuto.Count)
    
    'lErro = CF("TRVConfig_Grava_Trans", colConfig)
    lErro = CF("TRVConfig_Grava_Lockado", alComando(6), alComando(7), objTRVConfig)
    If lErro <> SUCESSO Then gError 200690
    
    'desativa os locks dos comandos a seguir
    lErro = Conexao_DesativarLocks(DESATIVAR_LOCKS)
    If lErro <> SUCESSO Then gError 200676
  
    For Each objVouAutoCC In colAuto
              
        'Set objTitRec = New ClassTituloReceber
        
        objVouAutoCC.lNumTitulo = lProxTitRec
        
        Set objImpCoinfoCartoes = New ClassImpCoinfoCartoes
    
        objImpCoinfoCartoes.dtDataDep = objVouAutoCC.dtDataAutoCC
        objImpCoinfoCartoes.iFilialEmpresa = objVouAutoCC.iFilialEmpresa
        objImpCoinfoCartoes.dValor = objVouAutoCC.dValorB
        objImpCoinfoCartoes.lNumTitulo = lProxTitRec
        objImpCoinfoCartoes.sCiaCart = objVouAutoCC.sBandeira
        objImpCoinfoCartoes.iQuantParc = objVouAutoCC.iQuantParc
        objImpCoinfoCartoes.lCliente = objVouAutoCC.lClienteFat
        objImpCoinfoCartoes.sNumAuto = objVouAutoCC.sNumAuto
        objImpCoinfoCartoes.sValidadeCC = objVouAutoCC.sValidadeCC
        objImpCoinfoCartoes.sNumCredCart = objVouAutoCC.sNumCCred
        
        'Gera o parcelamento do título e grava
        lErro = Coinfo_GerarTitRec_Cartao(objImpCoinfoCartoes)
        If lErro <> SUCESSO Then gError 200677
        
        objVouAutoCC.dValorDeducoes = objImpCoinfoCartoes.dDeducaoValorPresente
        objVouAutoCC.dValorTarifa = objImpCoinfoCartoes.dValorTaxa
        objVouAutoCC.lNumIntTitulo = objImpCoinfoCartoes.lNumIntTitulo
                
'        Set objTitRec = New ClassTituloReceber
'
'        objTitRec.lNumIntDoc = objVouAutoCC.lNumIntTitulo
'
'        lErro = CF("TituloReceber_Le", objTitRec)
'        If lErro <> SUCESSO And lErro <> 26061 Then gError 200678
'
'        Set objContabAutomatica = New ClassContabAutomatica
'        Set objCtb = New ClassImpCoinfoFatCRCtb
'
'        'gravar a contabilizacao
'        lErro = objContabAutomatica.Inicializa_Contab(objCtb, MODULO_CONTASARECEBER, "CR", objTitRec.dtDataEmissao, objTitRec.dtDataEmissao)
'        If lErro <> SUCESSO Then gError 200679
'
'        lErro = objContabAutomatica.GeraContabilizacao(objTitRec, objImpCoinfoCartoes)
'        If lErro <> SUCESSO Then gError 200680
'
'        Set objContabAutomatica = Nothing
'        Call objCtb.Encerrando
'        Set objCtb = Nothing
        
        Set objTitRecTRV = New ClassTitulosRecTRV
        
        objTitRecTRV.lNumIntDocTitRec = objVouAutoCC.lNumIntTitulo
        objTitRecTRV.dValorBruto = objVouAutoCC.dValorB
        objTitRecTRV.dValorDeducoes = objVouAutoCC.dValorDeducoes
        objTitRecTRV.dValorTarifa = objVouAutoCC.dValorTarifa
                
        'Atualiza a informação da Fatura no Voucher
        For Each objVou In objVouAutoCC.colVou
        
            lErro = Comando_ExecutarPos(alComando(1), "SELECT NumFatCoinfo, Valor, Cartao, Representante FROM TRVVouchers WHERE NumVou = ? AND TipoDoc =? AND Serie = ? AND TipVou = ? ", 0, lNumFatAux, dValorAux, iCartaoAux, lRepresentante, objVou.lNumVou, TRV_TIPODOC_VOU_TEXTO, objVou.sSerie, objVou.sTipoVou)
            If lErro <> AD_SQL_SUCESSO Then gError 200681
            
            'Busca o primeiro
            lErro = Comando_BuscarPrimeiro(alComando(1))
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200682
            
            If Abs(dValorAux - objVou.dValor) > DELTA_VALORMONETARIO Then
                sDocAux = "VOU " & objVou.sTipoVou & " " & objVou.sSerie & " " & CStr(objVou.lNumVou) & " Vlr.Ant: " & Format(objVou.dValor, "STANDARD") & " " & " Vlr.Atual: " & Format(dValorAux, "STANDARD")
                gError 200683
            End If
             If iCartaoAux = DESMARCADO Then
                sDocAux = "VOU " & objVou.sTipoVou & " " & objVou.sSerie & " " & CStr(objVou.lNumVou) & " Cartão: Não"
                gError 200683
            End If
            If lNumFatAux <> 0 Then
                sDocAux = "VOU " & objVou.sTipoVou & " " & objVou.sSerie & " " & CStr(objVou.lNumVou) & " Fatura: " & CStr(lNumFatAux)
                gError 200683
            End If
                        
            'Marca o arquivo como atualizado
            lErro = Comando_ExecutarPos(alComando(2), "UPDATE TRVVouchers SET NumFatCoinfo = ?, TipoDocDestino = ?, NumIntDocDestino = ?", alComando(1), objImpCoinfoCartoes.lNumTitulo, TRV_TIPO_DOC_DESTINO_TITREC, objImpCoinfoCartoes.lNumIntTitulo)
            If lErro <> SUCESSO Then gError 200685
            
            Set objVouExp = New ClassTRVVouExp
            objVouExp.sSerie = objVou.sSerie
            objVouExp.sTipVou = objVou.sTipoVou
            objVouExp.lNumVou = objVou.lNumVou
            objVouExp.lNumFat = objImpCoinfoCartoes.lNumTitulo
            objVouExp.dtDataFat = objImpCoinfoCartoes.dtDataDep
            objVouExp.dValorFat = objImpCoinfoCartoes.dValorTitulo
            objVouExp.iTransacao = TRV_EXPORT_VOU_TRANS_FATURAMENTO
            objVouExp.lCliente = objVou.lCliente
            lErro = CF("TRVVouExp_Insere", alComando(8), alComando(9), alComando(10), alComando(11), alComando(12), alComando(13), objVouExp)
            If lErro <> SUCESSO Then gError 200212
            
            'Verifica se não tem que liberar o OVER (liberação na emissão)
            sItem = String(255, 0)
            
            'Verifica o tipo de tratamento (Se o pagamento é na baixa ou na emissão)
            lErro = Comando_Executar(alComando(3), "SELECT Item FROM FilialFornecedorCategorias WHERE Fornecedor = ? AND Filial = ? AND Categoria = ? AND Item = ?", sItem, objVou.lCliente, FILIAL_MATRIZ, "OVER", "Faturamento")
            If lErro <> AD_SQL_SUCESSO Then gError 182532
            
            'Busca a primeira
            lErro = Comando_BuscarProximo(alComando(3))
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 182533
            
            If lErro = AD_SQL_SUCESSO Then
                bLiberaOverFat = True
            Else
                bLiberaOverFat = False
            End If
                   
            For iIndiceLib = 1 To 3
                
                If iIndiceLib = 1 Then
                    sTipoDocLib = TRV_TIPODOC_OVER_TEXTO
                ElseIf iIndiceLib = 2 Then
                    sTipoDocLib = TRV_TIPODOC_CMCC_TEXTO
                Else
                    sTipoDocLib = TRV_TIPODOC_CMR_TEXTO
                End If
                   
                'Se libera o over se for pelo faturamento, as CMCC e CMR da Trevisa
                If (sTipoDocLib = TRV_TIPODOC_OVER_TEXTO And bLiberaOverFat) Or sTipoDocLib = TRV_TIPODOC_CMCC_TEXTO Or (sTipoDocLib = TRV_TIPODOC_CMR_TEXTO And lRepresentante = 146052) Then
                    
                    'Le as comissões over bloqueadas para esse voucher
'                    lErro = Comando_ExecutarPos(alComando(4), "SELECT NumIntDoc FROM TRVVoucherInfo WHERE NumVou= ? AND TipoDoc = ? AND Serie = ? AND TipVou = ? AND Status = ? ", _
'                    0, lNumIntDocAux, objVou.lNumVou, sTipoDocLib, objVou.sSerie, objVou.sTipoVou, TRV_VOU_INFO_STATUS_BLOQUEADO)
                    lErro = Comando_Executar(alComando(4), "SELECT NumIntDoc FROM TRVVoucherInfo WITH (NOLOCK) WHERE NumVou= ? AND NumIntDocDestino = ? AND TipoDoc = ? AND Serie = ? AND TipVou = ? AND Status = ? ", _
                    lNumIntDocAux, objVou.lNumVou, 0, sTipoDocLib, objVou.sSerie, objVou.sTipoVou, TRV_VOU_INFO_STATUS_BLOQUEADO)
                    If lErro <> AD_SQL_SUCESSO Then gError 196376
                
                    'Busca Primeiro
                    lErro = Comando_BuscarPrimeiro(alComando(4))
                    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196377
            
                    Do While lErro <> AD_SQL_SEM_DADOS
                        
                        'lErro = Comando_ExecutarPos(alComando(5), "UPDATE TRVVoucherInfo SET Status = ?, TipoLiberacao = ?, NumIntDocLiberacao = ? ", alComando(4), TRV_VOU_INFO_STATUS_LIBERADO, TRV_TIPO_LIBERACAO_COMISSAO_FAT, objImpCoinfoCartoes.lNumIntTitulo)
                        lErro = Comando_Executar(alComando(5), "UPDATE TRVVoucherInfo SET Status = ?, TipoLiberacao = ?, NumIntDocLiberacao = ? WHERE NumIntDoc = ? ", TRV_VOU_INFO_STATUS_LIBERADO, TRV_TIPO_LIBERACAO_COMISSAO_FAT, objImpCoinfoCartoes.lNumIntTitulo, lNumIntDocAux)
                        If lErro <> AD_SQL_SUCESSO Then gError 196379
                    
                        'Busca Próximo
                        lErro = Comando_BuscarProximo(alComando(4))
                        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 196380
                    
                    Loop
                    
                End If
                
            Next
                    
        Next

        lErro = CF("TitulosRecTRV_Grava", objTitRecTRV)
        If lErro <> SUCESSO Then gError 200686
        
        Set objTRVTitulosExp = New ClassTRVTitulosExp
        
        objTRVTitulosExp.iExcluido = DESMARCADO
        objTRVTitulosExp.iExportado = DESMARCADO
        objTRVTitulosExp.iTipoDocOrigem = TRV_TIPO_DOC_DESTINO_TITREC
        objTRVTitulosExp.lNumIntDocOrigem = objImpCoinfoCartoes.lNumIntTitulo
        objTRVTitulosExp.lNumTitulo = objImpCoinfoCartoes.lNumTitulo
        objTRVTitulosExp.dValorDeducoes = objVouAutoCC.dValorDeducoes
        objTRVTitulosExp.dValorTarifa = objVouAutoCC.dValorTarifa
        objTRVTitulosExp.iTemQueContabilizar = MARCADO
        
        lErro = CF("TRVTitulosExp_Insere", objTRVTitulosExp, alComando(16), alComando(17))
        If lErro <> SUCESSO Then gError 200687
        
        Set objTRVTitulos = New ClassTRVTitulos

        objTRVTitulos.iTipoDocOrigem = TRV_TIPO_DOC_DESTINO_TITREC
        objTRVTitulos.lNumIntDocOrigem = objImpCoinfoCartoes.lNumIntTitulo
        objTRVTitulos.sTipoDoc = TRV_TIPODOC_VOU_TEXTO
        
        lErro = CF("TRVTitulos_Insere", objTRVTitulos, alComando(18))
        If lErro <> SUCESSO Then gError 200688
   
        Call objFrmAguardeTela.ProcessouItem
        
        If objFrmAguarde.iCancelar = MARCADO Then Exit For

        lProxTitRec = lProxTitRec + 1

    Next
    
    Set objFrmAguardeTela = Nothing
    If objFrmAguarde.iCancelar = MARCADO Then gError 192084
    
'    Set objTRVConfig = New ClassTRVConfig
'
'    objTRVConfig.sCodigo = TRVCONFIG_PROX_NUM_TITREC
'    objTRVConfig.sConteudo = CStr(lProxTitRec)
'
'    'lErro = CF("TRVConfig_Grava_Trans", colConfig)
'    lErro = CF("TRVConfig_Grava_Lockado", alComando(6), alComando(7), objTRVConfig)
'    If lErro <> SUCESSO Then gError 200690
        
    'reativa os locks
    lErro = Conexao_DesativarLocks(REATIVAR_LOCKS)
    If lErro <> SUCESSO Then gError 200689
    
    'Confirma a transação
    lErro = Transacao_Commit()
    If lErro <> AD_SQL_SUCESSO Then gError 200691
       
    'Fecha os comandos
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next
    
    'gera o documento html
    lErro = CF("TRVFaturas_Regera_Html", lNumTituloIni, lProxTitRec - 1, sModeloFat, sNomeDiretorio, TIPODOC_CARTAO_CRED_DEB, False)
    If lErro <> SUCESSO Then gError 200689
        
    TRVFatCartao_Grava = SUCESSO
     
    Exit Function
    
Erro_TRVFatCartao_Grava:

    TRVFatCartao_Grava = gErr
    
    Select Case gErr
          
        Case 200672
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)
        
        Case 200673, 200674, 200676 To 200680, 200686 To 200690
        
        Case 200675
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_TRANSACAO", gErr)
                
        Case 200681, 200682
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVVOUCHERS", gErr)
            
        Case 200683
            Call Rotina_Erro(vbOKOnly, "ERRO_VOU_VALOR_ALTERADO", gErr, sDocAux)
  
        Case 200685
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVVOUCHERS", gErr)
                
        Case 200691
            Call Rotina_Erro(vbOKOnly, "ERRO_COMMIT", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 182722)
     
    End Select
    
    'reativa os locks
    Call Conexao_DesativarLocks(REATIVAR_LOCKS)
    
    'Desfaz a transação
    Call Transacao_Rollback
    
    'Fecha os comandos
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next
    
    If Not (objFrmAguardeTela Is Nothing) Then
        Call objFrmAguardeTela.Trata_Erro
    End If
        
    Exit Function

End Function

Function Coinfo_GerarTitRec_Cartao(objImpCoinfoCartoes As ClassImpCoinfoCartoes) As Long

Dim lErro As Long
Dim colAdmMeioPagto As New Collection
Dim objAdmMeioPagto As New ClassAdmMeioPagto
Dim objRede As New ClassRede
Dim objAdmMeioPagtoCondPagto As New ClassAdmMeioPagtoCondPagto
Dim objTitRecCartao As New ClassTituloReceber
Dim colParcelasCartao As New colParcelaReceber
Dim iAchou As Integer
Dim objAdmMeioPagtoParcela As ClassAdmMeioPagtoParcelas
Dim colComissaoEmissao As New colComissao
Dim colcolComissao As New colcolComissao
Dim colComissaoFantasma As colComissao
Dim dtDataVencimento1 As Date
Dim dValor As Double
Dim lNumTitOriginal As Long
Dim lNumAuto As Long
Dim objParcelaRecCartao As ClassParcelaReceber
Dim objParcelaRecCartaoAux As ClassParcelaReceber
Dim dtDataVencimentoReal As Date
Dim iIndice As Integer
Dim dValorPresente As Double
Dim dValorTaxa As Double, dDeducaoValorPresente As Double, objParcelaRecCartao1 As ClassParcelaReceber
Dim objPRJInfo As New ClassProjetoInfo, objPRJCR As New ClassPRJCR, objProjeto As New ClassProjetos

On Error GoTo Erro_Coinfo_GerarTitRec_Cartao

    lErro = CF("AdmMeioPagto_Le_Todas1", giFilialEmpresa, colAdmMeioPagto)
    If lErro <> SUCESSO Then gError 183111
    
    For Each objAdmMeioPagto In colAdmMeioPagto
        If objAdmMeioPagto.sNome = objImpCoinfoCartoes.sCiaCart Then
            objAdmMeioPagto.iFilialEmpresa = giFilialEmpresa
            iAchou = 1
            Exit For
        End If
    Next
    
    If iAchou = 0 Then gError 183112
    
    objRede.iCodigo = objAdmMeioPagto.iRede
    
    lErro = CF("Rede_Le", objRede)
    If lErro <> SUCESSO And lErro <> 104244 Then gError 183113
    
    If lErro <> SUCESSO Then gError 183114
    
    Set colComissaoFantasma = New colComissao
    Set colcolComissao = New colcolComissao

    'Lê em colCodPagtoLoja as Codiçoes de Pagamento relacionados a Admnistradora
    lErro = CF("AdmMeioPagtoCondPagto_Le", objAdmMeioPagto)
    If lErro <> SUCESSO And lErro <> 104086 Then gError 183120

    iAchou = 0

    For Each objAdmMeioPagtoCondPagto In objAdmMeioPagto.colCondPagtoLoja
        
        If objAdmMeioPagtoCondPagto.iNumParcelas = objImpCoinfoCartoes.iQuantParc Then
            iAchou = 1
            Exit For
        End If
    Next

    If iAchou = 0 Then gError 183121

    'se a coleção retornar vazia-> erro
    If objAdmMeioPagtoCondPagto.colParcelas.Count = 0 Then gError 183122


    If objImpCoinfoCartoes.lNumTitulo <> 0 Then
        objTitRecCartao.lNumTitulo = objImpCoinfoCartoes.lNumTitulo ' lNumAuto
    Else
        'gera um número para o título a receber
        lErro = CF("Config_ObterNumInt", "CPRConfig", "NUM_PROX_NUMTITULO_CARTAO", lNumAuto, objAdmMeioPagtoCondPagto.colParcelas.Count, objImpCoinfoCartoes.iFilialEmpresa)
        If lErro <> SUCESSO Then gError 183123
    
        objTitRecCartao.lNumTitulo = lNumAuto
    
    End If
    
    objTitRecCartao.sSiglaDocumento = TIPODOC_CARTAO_CRED_DEB
    objTitRecCartao.dtDataEmissao = Date 'objImpCoinfoCartoes.dtDataDep
    dValor = objImpCoinfoCartoes.dValor * (1 - objAdmMeioPagtoCondPagto.dTaxa - objAdmMeioPagtoCondPagto.dDesconto)
    objTitRecCartao.iNumParcelas = objAdmMeioPagtoCondPagto.iParcelasRecebto
    objTitRecCartao.iStatus = STATUS_LANCADO
    objTitRecCartao.dtDataRegistro = Date 'gdtDataHoje
    objTitRecCartao.lCliente = objImpCoinfoCartoes.lCliente ' objRede.lCliente
    objTitRecCartao.iFilial = 1 'objRede.iFilialCli
    objTitRecCartao.iFilialEmpresa = objImpCoinfoCartoes.iFilialEmpresa
    objTitRecCartao.iMoeda = MOEDA_REAL
    objTitRecCartao.dtReajusteBase = DATA_NULA
    objTitRecCartao.dtReajustadoAte = DATA_NULA

    dtDataVencimento1 = objImpCoinfoCartoes.dtDataDep

    dValorTaxa = Arredonda_Moeda(objImpCoinfoCartoes.dValor * (objAdmMeioPagtoCondPagto.dTaxa - objAdmMeioPagtoCondPagto.dDesconto))

    'varre a coleção de parcelas "modelo do admmeiopagtocondpagto
    For Each objAdmMeioPagtoParcela In objAdmMeioPagtoCondPagto.colParcelas
        
        'cria uma coleção de comissão fantasmas para a parcela em questão
        colcolComissao.Add colComissaoFantasma

        'cria uma nova parcela a receber
        Set objParcelaRecCartao = New ClassParcelaReceber
        
        'o valor da parcela é o valor total multiplicado pelo percentual da parcela
        objParcelaRecCartao.dValor = Arredonda_Moeda(dValor * objAdmMeioPagtoParcela.dPercRecebimento)
        objParcelaRecCartao.iNumParcela = objAdmMeioPagtoParcela.iParcela
        
        dtDataVencimento1 = dtDataVencimento1 + objAdmMeioPagtoParcela.iIntervaloRecebimento
        objParcelaRecCartao.dtDataVencimento = dtDataVencimento1

        'calcula seu vencimento real
        lErro = CF("DataVencto_Real", dtDataVencimento1, dtDataVencimentoReal)
        If lErro <> SUCESSO Then gError 183124

        objParcelaRecCartao.dtDataVencimentoReal = dtDataVencimentoReal
        objParcelaRecCartao.iStatus = STATUS_ABERTO
        objParcelaRecCartao.iCobrador = COBRADOR_PROPRIA_EMPRESA
        objParcelaRecCartao.iCarteiraCobranca = CARTEIRA_CARTEIRA
        
        'adiciona à coleção de parcelas a receber
        With objParcelaRecCartao
        '#################################################
        'ALTERADO POR WAGNER
            Set objParcelaRecCartaoAux = colParcelasCartao.Add(0, 0, .iNumParcela, .iStatus, .dtDataVencimento, .dtDataVencimentoReal, .dSaldo, .dValor, .iProxSeqBaixa, .iCarteiraCobranca, .iCobrador, .sNumTitCobrador, 0, 0, 0, 0, 0, 0, .iDesconto1Codigo, DATA_NULA, .dDesconto1Valor, .iDesconto2Codigo, DATA_NULA, .dDesconto2Valor, .iDesconto3Codigo, DATA_NULA, .dDesconto3Valor, .lNumIntCheque, .iAceite, .iDescontada, .iProxSeqOcorr, .iPrevisao, .sObservacao, .dValor)
        '#################################################
        End With

        objParcelaRecCartaoAux.dtDataTransacaoCartao = objImpCoinfoCartoes.dtDataDep
        If Len(objImpCoinfoCartoes.sValidadeCC) = 6 Then
            objParcelaRecCartaoAux.dtValidadeCartao = StrParaDate("01/" & left(objImpCoinfoCartoes.sValidadeCC, 2) & "/" & right(objImpCoinfoCartoes.sValidadeCC, 4))
        ElseIf Len(objImpCoinfoCartoes.sValidadeCC) = 7 Then
            objParcelaRecCartaoAux.dtValidadeCartao = StrParaDate("01/" & objImpCoinfoCartoes.sValidadeCC)
        End If
        objParcelaRecCartaoAux.sAprovacaoCartao = objImpCoinfoCartoes.sNumAuto
        objParcelaRecCartaoAux.sNumeroCartao = objImpCoinfoCartoes.sNumCredCart
        objParcelaRecCartaoAux.iParcelamento = objAdmMeioPagtoCondPagto.iParcelamento
        objParcelaRecCartaoAux.iAdmMeioPagto = objAdmMeioPagto.iCodigo

        objTitRecCartao.dValor = objTitRecCartao.dValor + objParcelaRecCartao.dValor

    Next

    If objAdmMeioPagto.dTaxaVista > 0 Then
    
        Set colComissaoFantasma = New colComissao
        Set colcolComissao = New colcolComissao
    
        'cria uma coleção de comissão fantasmas para a parcela em questão
        colcolComissao.Add colComissaoFantasma
    
        'cria uma nova parcela a receber
        Set objParcelaRecCartao = New ClassParcelaReceber

        objParcelaRecCartao.iNumParcela = 1
        objTitRecCartao.iNumParcelas = 1

        objParcelaRecCartao.dtDataVencimento = dtDataVencimento1

        'calcula seu vencimento real
        lErro = CF("DataVencto_Real", dtDataVencimento1, dtDataVencimentoReal)
        If lErro <> SUCESSO Then gError 183124

        objParcelaRecCartao.dtDataVencimentoReal = dtDataVencimentoReal
        objParcelaRecCartao.iStatus = STATUS_ABERTO
        objParcelaRecCartao.iCobrador = COBRADOR_PROPRIA_EMPRESA
        objParcelaRecCartao.iCarteiraCobranca = CARTEIRA_CARTEIRA
        
        '******     INICIO DO CÁLCULO DO VALOR PRESENTE  **********
        dValorPresente = 0
    
        For Each objParcelaRecCartao1 In colParcelasCartao
            
            dValorPresente = dValorPresente + (objParcelaRecCartao1.dValor / ((1 + objAdmMeioPagto.dTaxaVista) ^ ((objParcelaRecCartao1.dtDataVencimento - objParcelaRecCartao.dtDataVencimento) / 30)))
            dDeducaoValorPresente = dDeducaoValorPresente + objParcelaRecCartao1.dValor - (objParcelaRecCartao1.dValor / ((1 + objAdmMeioPagto.dTaxaVista) ^ ((objParcelaRecCartao1.dtDataVencimento - objParcelaRecCartao.dtDataVencimento) / 30)))
        Next
    
        dValorPresente = Arredonda_Moeda(dValorPresente)
        dDeducaoValorPresente = Arredonda_Moeda(dDeducaoValorPresente)
        objParcelaRecCartao.dValor = dValorPresente
    
        '***********  FIM DO CÁLCULO DO VALOR PRESENTE  ***********
        
        Set colParcelasCartao = New colParcelaReceber
        
        'adiciona à coleção de parcelas a receber
        With objParcelaRecCartao
        '#################################################
        'ALTERADO POR WAGNER
            Set objParcelaRecCartaoAux = colParcelasCartao.Add(0, 0, .iNumParcela, .iStatus, .dtDataVencimento, .dtDataVencimentoReal, .dSaldo, .dValor, .iProxSeqBaixa, .iCarteiraCobranca, .iCobrador, .sNumTitCobrador, 0, 0, 0, 0, 0, 0, .iDesconto1Codigo, DATA_NULA, .dDesconto1Valor, .iDesconto2Codigo, DATA_NULA, .dDesconto2Valor, .iDesconto3Codigo, DATA_NULA, .dDesconto3Valor, .lNumIntCheque, .iAceite, .iDescontada, .iProxSeqOcorr, .iPrevisao, .sObservacao, .dValor)
        '#################################################
        End With
        
        objParcelaRecCartaoAux.dtDataTransacaoCartao = objImpCoinfoCartoes.dtDataDep
        If Len(objImpCoinfoCartoes.sValidadeCC) = 6 Then
            objParcelaRecCartaoAux.dtValidadeCartao = StrParaDate("01/" & left(objImpCoinfoCartoes.sValidadeCC, 2) & "/" & right(objImpCoinfoCartoes.sValidadeCC, 4))
        ElseIf Len(objImpCoinfoCartoes.sValidadeCC) = 7 Then
            objParcelaRecCartaoAux.dtValidadeCartao = StrParaDate("01/" & objImpCoinfoCartoes.sValidadeCC)
        End If
        objParcelaRecCartaoAux.sAprovacaoCartao = objImpCoinfoCartoes.sNumAuto
        objParcelaRecCartaoAux.sNumeroCartao = objImpCoinfoCartoes.sNumCredCart
        objParcelaRecCartaoAux.iParcelamento = objAdmMeioPagtoCondPagto.iParcelamento
        objParcelaRecCartaoAux.iAdmMeioPagto = objAdmMeioPagto.iCodigo

        objTitRecCartao.dValor = objParcelaRecCartao.dValor

    End If


    objTitRecCartao.dSaldo = Round(objTitRecCartao.dValor, 2)

    dValor = 0

    For iIndice = 1 To colParcelasCartao.Count
        
        Set objParcelaRecCartao = colParcelasCartao.Item(iIndice)
        
        If iIndice = colParcelasCartao.Count Then
            objParcelaRecCartao.dValor = objTitRecCartao.dSaldo - dValor
        Else
        
            objParcelaRecCartao.dValor = Round(objParcelaRecCartao.dValor, 2)
            dValor = dValor + objParcelaRecCartao.dValor
        End If
    
        objParcelaRecCartao.dSaldo = objParcelaRecCartao.dValor
    
    Next

    objTitRecCartao.dSaldo = objTitRecCartao.dValor
    
    objPRJInfo.sProjeto = "100102"

    objPRJCR.dValor = objTitRecCartao.dValor
    objPRJCR.sItem = "PROD"
    objPRJCR.iTipoOrigem = PRJ_CR_TIPO_TITREC
    objPRJCR.iCalcAuto = MARCADO
    objPRJCR.dPercent = 1
    objPRJInfo.iFilialEmpresa = 1

    objPRJInfo.colPRJCustoReceitaReal.Add objPRJCR

    Set objTitRecCartao.objProjetoInfo = objPRJInfo

    objProjeto.sCodigo = objPRJInfo.sProjeto
    objProjeto.iFilialEmpresa = objPRJInfo.iFilialEmpresa

    'Le
    lErro = CF("Projetos_Le", objProjeto)
    If lErro <> SUCESSO And lErro <> ERRO_LEITURA_SEM_DADOS Then gError ERRO_SEM_MENSAGEM

    objPRJInfo.lNumIntDocPRJ = objProjeto.lNumIntDoc
    objPRJCR.lNumIntDocPRJ = objProjeto.lNumIntDoc

    'Se não encontrou => Erro
    If lErro = ERRO_LEITURA_SEM_DADOS Then gError 209161

    lErro = CF("TituloReceber_Insere", objTitRecCartao, colParcelasCartao, colComissaoEmissao, colcolComissao)
    If lErro <> SUCESSO Then gError 183125
    
    objImpCoinfoCartoes.lNumIntTitulo = objTitRecCartao.lNumIntDoc
    'objImpCoinfoCartoes.lNumTitulo = objTitRecCartao.lNumTitulo
    
    objImpCoinfoCartoes.dValorTaxa = dValorTaxa
    objImpCoinfoCartoes.dDeducaoValorPresente = dDeducaoValorPresente
    objImpCoinfoCartoes.dValorTitulo = objTitRecCartao.dValor

    Coinfo_GerarTitRec_Cartao = SUCESSO

    Exit Function

Erro_Coinfo_GerarTitRec_Cartao:

    Coinfo_GerarTitRec_Cartao = gErr

    Select Case gErr
            
        Case 183111, 183113, 183120, 183123 To 183125

        Case 183112
            Call Rotina_Erro(vbOKOnly, "ERRO_CARTAO_INEXISTENTE", gErr, objImpCoinfoCartoes.sCiaCart)
        
        Case 183114
            Call Rotina_Erro(vbOKOnly, "ERRO_REDE_NAO_ENCONTRADA", gErr, objRede.iCodigo)

        Case 183121
            Call Rotina_Erro(vbOKOnly, "ERRO_PARCELAMENTO_INEXISTENTE", gErr, objImpCoinfoCartoes.iQuantParc, objImpCoinfoCartoes.sCiaCart)

        Case 183122
            Call Rotina_Erro(vbOKOnly, "ERRO_ADMMEIOPAGTOPARCELAS_NAOENCONTRADA", gErr, objAdmMeioPagtoCondPagto.iFilialEmpresa, objAdmMeioPagtoCondPagto.iAdmMeioPagto, objAdmMeioPagtoCondPagto.iParcelamento)

        Case ERRO_SEM_MENSAGEM
    
        Case 209161
            Call Rotina_Erro(vbOKOnly, "ERRO_PROJETOS_NAO_CADASTRADO2", gErr, objProjeto.sCodigo, objProjeto.iFilialEmpresa)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error$, 183126)

    End Select

    Exit Function

End Function

Public Function TRVVouVendedores_Exclui(ByVal lComando1 As Long, ByVal lComando2 As Long, ByVal objVou As ClassTRVVouchers) As Long

Dim lErro As Long
Dim iIndice As Integer
Dim iVend As Integer

On Error GoTo Erro_TRVVouVendedores_Exclui

    'Le a Vendedores do Voucher
    lErro = Comando_ExecutarPos(lComando1, "SELECT Vendedor FROM TRVVouVendedores WHERE TipVou = ? AND Serie = ? AND NumVou = ? ", _
                0, iVend, objVou.sTipVou, objVou.sSerie, objVou.lNumVou)
    If lErro <> AD_SQL_SUCESSO Then gError 200425

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(lComando1)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200426

    Do While lErro <> AD_SQL_SEM_DADOS

        'Trava registro contra alterações/Leituras
        lErro = Comando_LockExclusive(lComando1)
        If lErro <> SUCESSO Then gError 200427
    
        lErro = Comando_ExecutarPos(lComando2, "DELETE FROM TRVVouVendedores", lComando1)
        If lErro <> AD_SQL_SUCESSO Then gError 200428

        'Busca Próximo
        lErro = Comando_BuscarProximo(lComando1)
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200429

    Loop

    TRVVouVendedores_Exclui = SUCESSO

    Exit Function

Erro_TRVVouVendedores_Exclui:

    TRVVouVendedores_Exclui = gErr

    Select Case gErr

        Case 200425, 200426, 200429
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVVOUVENDEDORES", gErr)

        Case 200427
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVVOUVENDEDORES", gErr)

        Case 200428
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_TRVVOUVENDEDORES", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 200430)

    End Select

    Exit Function

End Function

Public Function TRVVoucher_Reativa(ByVal objTRVVoucher As ClassTRVVouchers) As Long

Dim lErro As Long
Dim lTransacao As Long

On Error GoTo Erro_TRVVoucher_Reativa

    'Abertura de transação
    lTransacao = Transacao_Abrir()
    If lTransacao = 0 Then gError 192646

    lErro = TRVVouchers_Reativa_EmTrans(objTRVVoucher)
    If lErro <> SUCESSO Then gError 192647

    'Confirma a transação
    lErro = Transacao_Commit()
    If lErro <> AD_SQL_SUCESSO Then gError 192648

    TRVVoucher_Reativa = SUCESSO

    Exit Function

Erro_TRVVoucher_Reativa:

    TRVVoucher_Reativa = gErr

    Select Case gErr

        Case 192646
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_TRANSACAO", gErr)

        Case 192647

        Case 192648
            Call Rotina_Erro(vbOKOnly, "ERRO_COMMIT", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 192649)

    End Select

    'Desfaz Transação
    Call Transacao_Rollback

    Exit Function

End Function

Public Function TRVVouchers_Reativa_EmTrans(ByVal objVou As ClassTRVVouchers) As Long

Dim lErro As Long
Dim alComando(0 To 13) As Long
Dim iIndice As Integer
Dim lNumFat As Long
Dim iStatus As Integer
Dim lNumIntDocTitRec As Long
Dim lNumIntDocDestino As Long
Dim iTipoDocDestino As Integer
Dim sTipoDoc As String
Dim objOcorrencia As ClassTRVOcorrencias
Dim objOcorrenciaDet As ClassTRVOcorrenciaDet
Dim dValor As Double
Dim lCliente As Long
Dim iFilialEmpresa As Integer
Dim sSiglaDocumento As String
Dim lNumVou As Long
Dim sSerie As String
Dim sTipVou As String
Dim lCodigo As Long
Dim iCartao As Integer
Dim lNumIntDocNVL As Long
Dim dValorOcr As Double
Dim dValorComissao As Double
Dim bComissaoCorp As Boolean
Dim lNumIntComi As Long
Dim dValorBruto As Double
Dim sTipoDocAux As String
Dim objVouExp As New ClassTRVVouExp
Dim lClienteVou As Long
Dim lCliPassageiro As Long

On Error GoTo Erro_TRVVouchers_Reativa_EmTrans

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 190848
    Next
    
    sTipoDoc = String(STRING_TRV_OCR_TIPODOC, 0)
    sSerie = String(STRING_TRV_OCR_SERIE, 0)
    sTipVou = String(STRING_TRV_OCR_TIPOVOU, 0)

    lErro = Comando_ExecutarPos(alComando(0), "SELECT NumFatCoinfo, Status, NumIntDocDestino,TipoDocDestino, Valor, Cliente, NumVou, Serie, TipVou, Cartao, NumIntDocNVL, ValorOCR, ValorBruto, ClienteVou, CliPassageiro FROM TRVVouchers WHERE TipoDoc = 'VOU' AND NumVou = ? AND Serie = ? AND TipVou= ? ", _
                        0, lNumFat, iStatus, lNumIntDocDestino, iTipoDocDestino, dValor, lCliente, lNumVou, sSerie, sTipVou, iCartao, lNumIntDocNVL, dValorOcr, dValorBruto, lClienteVou, lCliPassageiro, objVou.lNumVou, objVou.sSerie, objVou.sTipVou)
    If lErro <> AD_SQL_SUCESSO Then gError 190849

    'Busca Primeiro documento
    lErro = Comando_BuscarPrimeiro(alComando(0))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 190850
    
    'Se existir
    If lErro <> AD_SQL_SEM_DADOS Then

        'Trava registro contra alterações/Leituras
        lErro = Comando_LockExclusive(alComando(0))
        If lErro <> SUCESSO Then gError 190852
                   
        'Se já estiver ativo dá erro
        If iStatus = STATUS_TRV_VOU_ABERTO Then gError 192760
        
   
        'Se já foi inativado
        If lNumIntDocNVL <> 0 Then
           
            Set objOcorrencia = New ClassTRVOcorrencias
                
            objOcorrencia.lNumIntDoc = lNumIntDocNVL
                
            lErro = TRVOcorrencias_Exclui_EmTrans(objOcorrencia)
            If lErro <> SUCESSO Then gError 192765
'
'            lErro = Comando_ExecutarPos(alComando(3), "UPDATE TRVVouchers SET NumIntDocNVL = ?", alComando(0), 0)
'            If lErro <> AD_SQL_SUCESSO Then gError 192766

        Else
            lErro = Comando_ExecutarPos(alComando(1), "UPDATE TRVVouchers SET Status = ?, DataCanc  = ?, HoraCanc = ?, UsuarioCanc = ?", alComando(0), STATUS_TRV_VOU_ABERTO, DATA_NULA, 0, "")
            If lErro <> AD_SQL_SUCESSO Then gError 190846
                            
        End If
            
'        lErro = Comando_ExecutarPos(alComando(1), "UPDATE TRVVouchers SET Status = ?, DataCanc  = ?, HoraCanc = ?, UsuarioCanc = ?", alComando(0), STATUS_TRV_VOU_ABERTO, DATA_NULA, 0, "")
'        If lErro <> AD_SQL_SUCESSO Then gError 190846
                
    End If
    
    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVVouchers_Reativa_EmTrans = SUCESSO

    Exit Function

Erro_TRVVouchers_Reativa_EmTrans:

    TRVVouchers_Reativa_EmTrans = gErr

    Select Case gErr

        Case 190846, 192766
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVVOUCHERS", gErr)

        Case 190848
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 190849, 190850, 192761
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVVOUCHERS", gErr)

        Case 190852
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVVOUCHERS", gErr)

        Case 190853
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_TRVVOUCHERS", gErr)
            
        Case 192760
            Call Rotina_Erro(vbOKOnly, "ERRO_VOUCHER_JA_CANCELADO", gErr)
            
        Case 192764, 192765, 192824, 200195, 196277
        
        Case 200710
            Call Rotina_Erro(vbOKOnly, "ERRO_CANC_VOU_COM_OCR", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 190847)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Public Function TRVRelsEmExcel_Gera(ByVal iTipo As Integer, ByVal dtDataDe As Date, ByVal dtDataAte As Date, ByVal sNomeDir As String, ByVal sNomeArq As String) As Long

Dim lErro As Long
Dim alComandoTVA(0 To 20) As Long
Dim alComandoTVI(0 To 20) As Long
Dim iIndice As Integer
Dim sDSN As String
Dim iLenDSN As Integer
Dim sParamOut As String
Dim iLenParamOut As Integer
Dim lConexaoTVA As Long
Dim lConexaoTVI As Long
Dim objEmpresa As New ClassDicEmpresa

On Error GoTo Erro_TRVRelsEmExcel_Gera

    Set objEmpresa = New ClassDicEmpresa

    objEmpresa.lCodigo = 1 'TVA'

    lErro = Empresa_Le(objEmpresa)
    If lErro <> SUCESSO Then gError 200781

    sDSN = objEmpresa.sStringConexao
    iLenDSN = Len(sDSN)
    sParamOut = String(1024, 0)
    iLenParamOut = 1024

    lConexaoTVA = Conexao_AbrirExt(AD_SQL_DRIVER_ODBC, sDSN, iLenDSN, sParamOut, iLenParamOut)
    If lConexaoTVA = 0 Then gError 200782

    Set objEmpresa = New ClassDicEmpresa

    objEmpresa.lCodigo = 2 'TVI'

    lErro = Empresa_Le(objEmpresa)
    If lErro <> SUCESSO Then gError 200783

    sDSN = objEmpresa.sStringConexao
    iLenDSN = Len(sDSN)
    sParamOut = String(1024, 0)
    iLenParamOut = 1024

    lConexaoTVI = Conexao_AbrirExt(AD_SQL_DRIVER_ODBC, sDSN, iLenDSN, sParamOut, iLenParamOut)
    If lConexaoTVI = 0 Then gError 200784

    'Abertura de Comando
    For iIndice = LBound(alComandoTVI) To UBound(alComandoTVI)
        alComandoTVI(iIndice) = Comando_AbrirExt(lConexaoTVI)
        If alComandoTVI(iIndice) = 0 Then gError 200776
    Next

    'Abertura de Comando
    For iIndice = LBound(alComandoTVA) To UBound(alComandoTVA)
        alComandoTVA(iIndice) = Comando_AbrirExt(lConexaoTVA)
        If alComandoTVA(iIndice) = 0 Then gError 200777
    Next
    
    Select Case iTipo
    
        Case 1
            lErro = TRVRelsEmExcel_Gera_Tipo1(alComandoTVA(), alComandoTVI(), dtDataDe, dtDataAte, sNomeDir, sNomeArq)
        
        Case Else
            gError 200778
            
    End Select
    If lErro <> SUCESSO Then gError 200779
       
    'Fecha Comando
    For iIndice = LBound(alComandoTVI) To UBound(alComandoTVI)
        Call Comando_Fechar(alComandoTVI(iIndice))
    Next
    
    'Fecha Comando
    For iIndice = LBound(alComandoTVA) To UBound(alComandoTVA)
        Call Comando_Fechar(alComandoTVA(iIndice))
    Next
    
    Call Conexao_FecharExt(lConexaoTVA)
    Call Conexao_FecharExt(lConexaoTVI)

    TRVRelsEmExcel_Gera = SUCESSO

    Exit Function

Erro_TRVRelsEmExcel_Gera:

    TRVRelsEmExcel_Gera = gErr

    Select Case gErr

        Case 200776, 200777
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)
            
        Case 200778 'ERRO_TIPO_CAMPO_INVALIDO
            Call Rotina_Erro(vbOKOnly, "ERRO_TIPO_CAMPO_INVALIDO", gErr)
        
        Case 200779, 200781 To 200784

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 200780)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComandoTVI) To UBound(alComandoTVI)
        Call Comando_Fechar(alComandoTVI(iIndice))
    Next
    
    'Fecha Comando
    For iIndice = LBound(alComandoTVA) To UBound(alComandoTVA)
        Call Comando_Fechar(alComandoTVA(iIndice))
    Next

    Call Conexao_FecharExt(lConexaoTVA)
    Call Conexao_FecharExt(lConexaoTVI)

    Exit Function
    
End Function

Private Function TRVRelsEmExcel_Gera_Tipo1(alComandoTVA() As Long, alComandoTVI() As Long, ByVal dtDataDe As Date, ByVal dtDataAte As Date, ByVal sNomeDir As String, ByVal sNomeArq As String) As Long

Dim lErro As Long
Dim sRegistro As String
Dim bArqAberto As Boolean
Dim sSerie As String
Dim sTipVou As String
Dim lNumVou As Long
Dim sNomeArquivo As String
Dim lCountTVA As Long
Dim lCountTVI As Long
Dim objFrmAguarde As New ClassFrmAguarde
Dim objFrmAguardeTela As New FrmAguarde
Dim objVou As ClassTRVVouchers
Dim lClienteAnt As Long
Dim sGrupo As String
Dim objVend As ClassVendedor
Dim objVendAux As ClassVendedor
Dim objVendTRV As ClassVendedorTRV
Dim colVend As New Collection
Dim objProd As ClassProduto
Dim colProd As New Collection
Dim sNomeProm As String
Dim sNomeSup As String
Dim sNomeGer As String
Dim sNomeDire As String
Dim bAchou As String
Dim sNomeVend As String
Dim iCargo As Integer
Dim sNomeCliente As String
Dim sDescProd As String
Dim dValorNet As Double
Dim objVouInfo As ClassTRVVoucherInfoN
Dim sAporte As String
Dim dValorAporte As Double
Dim iMoeda As Integer
Dim dValor As Double
Dim lEmpresaPai As Long
Dim iFilial As Integer
Dim sAporteAnt As String
Dim lClienteAux As Long
Dim sResponsavel As String, sUsuRespCallCenter As String
Dim dValorAporteCred As Double

On Error GoTo Erro_TRVRelsEmExcel_Gera_Tipo1
    
    sNomeArquivo = sNomeDir & sNomeArq & ".csv"
   
    Open sNomeArquivo For Output As #1
    bArqAberto = True

    Print #1, "CodEst;CodGru;NomeProm;NomeSup;NomeGer;CodEmp;Fantasia;Controle;DescPro;NumVou;DatEmi;Moeda;TarifMoe;Cambio;ValNetUS$;ValNetR$;Aporte;RespCallCenter"

    'CONTAGEM DE VOUCHERS
    'Le os vouchers
    lErro = Comando_Executar(alComandoTVA(0), "SELECT COUNT(*) FROM TRVVouchers WHERE TipoDoc = 'VOU' AND Data BETWEEN ? AND ? AND Status <> 7", lCountTVA, dtDataDe, dtDataAte)
    If lErro <> AD_SQL_SUCESSO Then gError 200743

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComandoTVA(0))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200744

    'Le os vouchers
    lErro = Comando_Executar(alComandoTVI(0), "SELECT COUNT(*) FROM TRVVouchers WHERE TipoDoc = 'VOU' AND Data BETWEEN ? AND ? AND Status <> 7", lCountTVI, dtDataDe, dtDataAte)
    If lErro <> AD_SQL_SUCESSO Then gError 200745

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComandoTVI(0))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200746
    
    objFrmAguarde.iTotalItens = lCountTVA + lCountTVI
    Call objFrmAguardeTela.Inicializa_Progressao(objFrmAguarde)
    'FIM DA CONTAGEM DE VOUCHERS

    'PROCESSA TVA
    'Alocação de espaço no buffer
    sTipVou = String(STRING_TRV_OCR_TIPODOC, 0)
    sSerie = String(STRING_TRV_OCR_SERIE, 0)
    
    'Le os vouchers
    lErro = Comando_Executar(alComandoTVA(1), "SELECT TipVou, Serie, NumVou, ValorAporteCred FROM TRVVouchers WHERE TipoDoc = 'VOU' AND Data BETWEEN ? AND ? AND Status <> 7 ORDER BY ClienteVou, Data", sTipVou, sSerie, lNumVou, dValorAporteCred, dtDataDe, dtDataAte)
    If lErro <> AD_SQL_SUCESSO Then gError 200747

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComandoTVA(1))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200748
    
    Do While lErro <> AD_SQL_SEM_DADOS
    
        sNomeProm = ""
        sNomeSup = ""
        sNomeGer = ""
        sNomeDire = ""
        sAporte = "Não"
        dValorAporte = 0
    
        Set objVou = New ClassTRVVouchers
        
        objVou.sTipoDoc = TRV_TIPODOC_VOU_TEXTO
        objVou.sTipVou = sTipVou
        objVou.sSerie = sSerie
        objVou.lNumVou = lNumVou
    
        lErro = CF("TRVVouchers_Le", objVou, alComandoTVA(2), alComandoTVA(3))
        If lErro <> SUCESSO Then gError 200749
        
        'Le o Responsável
        lErro = Comando_Executar(alComandoTVA(12), "SELECT Cliente FROM TRVCliDataCallCenter WHERE Cliente = ? AND ((DataDe <= ? OR DataDe = ?) AND (DataAte >= ? OR DataAte = ?)) ", _
        lClienteAux, objVou.lClienteVou, objVou.dtData, DATA_NULA, objVou.dtData, DATA_NULA)
        If lErro <> AD_SQL_SUCESSO Then gError 200754

        'Busca Primeiro
        lErro = Comando_BuscarPrimeiro(alComandoTVA(12))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200755

        If lErro = AD_SQL_SUCESSO Then sAporte = "CallCenter"

'        sResponsavel = String(STRING_MAXIMO, 0)
'        sUsuRespCallCenter = String(STRING_MAXIMO, 0)
'
'        'Le o Responsável
'        lErro = Comando_Executar(alComandoTVA(12), "SELECT Responsavel, UsuRespCallCenter FROM ClientesAtend WHERE Codigo = ? ", _
'        sResponsavel, sUsuRespCallCenter, objVou.lClienteVou)
'        If lErro <> AD_SQL_SUCESSO Then gError 200754
'
'        'Busca Primeiro
'        lErro = Comando_BuscarPrimeiro(alComandoTVA(12))
'        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200755
'
'        If sResponsavel = "Call Center" Then sAporte = "CallCenter"
        
        If lClienteAnt <> objVou.lClienteVou Then
        
            lClienteAnt = objVou.lClienteVou
            
            sGrupo = String(STRING_TRV_TAMANHO_OUTROS, 0)
            
            'Le a Filial do Cliente
            lErro = Comando_Executar(alComandoTVA(4), "SELECT Grupo, EmpresaPai FROM FiliaisClientesTRV WHERE CodCliente = ? AND CodFilial = ?", sGrupo, lEmpresaPai, objVou.lClienteVou, FILIAL_MATRIZ)
            If lErro <> AD_SQL_SUCESSO Then gError 200750
        
            'Busca Primeiro
            lErro = Comando_BuscarPrimeiro(alComandoTVA(4))
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200751
        
            sNomeCliente = String(STRING_CLIENTE_NOME_REDUZIDO, 0)
        
            'Le o Cliente
            lErro = Comando_Executar(alComandoTVA(7), "SELECT NomeReduzido FROM Clientes WHERE Codigo = ? ", sNomeCliente, objVou.lClienteVou)
            If lErro <> AD_SQL_SUCESSO Then gError 200752
        
            'Busca Primeiro
            lErro = Comando_BuscarPrimeiro(alComandoTVA(7))
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200753
            
'            'Le o Responsável
'            lErro = Comando_Executar(alComandoTVA(12), "SELECT Filial FROM FilialClienteCategorias WHERE Categoria = ? AND Cliente = ? AND Item = ?", _
'            iFilial, "Responsável", objVou.lClienteVou, "Call Center")
'            If lErro <> AD_SQL_SUCESSO Then gError 200754
'
'            'Busca Primeiro
'            lErro = Comando_BuscarPrimeiro(alComandoTVA(12))
'            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200755
'
'            If lErro = AD_SQL_SUCESSO Then sAporte = "CallCenter"
'
        Else
            sAporte = sAporteAnt
        End If
        
        bAchou = False
        For Each objVend In colVend
            If objVend.iCodigo = objVou.lPromotor Then
                bAchou = True
                Exit For
            End If
        Next
        If bAchou = False Then
        
            Set objVend = New ClassVendedor
            Set objVendTRV = New ClassVendedorTRV
            Set objVend.objInfoUsu = objVendTRV
                            
            If objVou.lPromotor <> 0 Then
            
                colVend.Add objVend
            
                sNomeVend = String(STRING_VENDEDOR_NOME_RED, 0)
            
                'Le o vendedor
                lErro = Comando_Executar(alComandoTVA(5), "SELECT NomeReduzido FROM Vendedores WHERE Codigo = ? ", sNomeVend, objVou.lPromotor)
                If lErro <> AD_SQL_SUCESSO Then gError 200756
            
                'Busca Primeiro
                lErro = Comando_BuscarPrimeiro(alComandoTVA(5))
                If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200757
            
                'Le o vendedor
                lErro = Comando_Executar(alComandoTVA(6), "SELECT Cargo FROM VendedorTRV WHERE Vendedor = ? ", iCargo, objVou.lPromotor)
                If lErro <> AD_SQL_SUCESSO Then gError 200758
            
                'Busca Primeiro
                lErro = Comando_BuscarPrimeiro(alComandoTVA(6))
                If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200759
                
                objVend.iCodigo = objVou.lPromotor
                objVend.sNomeReduzido = sNomeVend
                objVendTRV.iCargo = iCargo
                           
            End If
        
        End If

        If objVend.iCodigo <> 0 Then
            sNomeProm = objVend.sNomeReduzido 'objVend.iCodigo & SEPARADOR & objVend.sNomeReduzido
        End If
        
        For Each objVendAux In objVou.colVendedores
            If objVendAux.iCodigo <> 9999 And objVendAux.iCodigo <> 0 Then
                bAchou = False
                For Each objVend In colVend
                    If objVend.iCodigo = objVendAux.iCodigo Then
                        bAchou = True
                        Exit For
                    End If
                Next
                If bAchou = False Then
                              
                    Set objVend = New ClassVendedor
                    Set objVendTRV = New ClassVendedorTRV
                    Set objVend.objInfoUsu = objVendTRV
                
                    If objVendAux.iCodigo <> 0 Then
                    
                        colVend.Add objVend
                    
                        sNomeVend = String(STRING_VENDEDOR_NOME_RED, 0)
                    
                        'Le o vendedor
                        lErro = Comando_Executar(alComandoTVA(5), "SELECT NomeReduzido FROM Vendedores WHERE Codigo = ? ", sNomeVend, objVendAux.iCodigo)
                        If lErro <> AD_SQL_SUCESSO Then gError 200760
                    
                        'Busca Primeiro
                        lErro = Comando_BuscarPrimeiro(alComandoTVA(5))
                        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200761
                    
                        'Le o vendedor
                        lErro = Comando_Executar(alComandoTVA(6), "SELECT Cargo FROM VendedorTRV WHERE Vendedor = ? ", iCargo, objVendAux.iCodigo)
                        If lErro <> AD_SQL_SUCESSO Then gError 200762
                    
                        'Busca Primeiro
                        lErro = Comando_BuscarPrimeiro(alComandoTVA(6))
                        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200763
                        
                        objVend.iCodigo = objVendAux.iCodigo
                        objVend.sNomeReduzido = sNomeVend
                        objVendTRV.iCargo = iCargo
                                   
                    End If
                
                End If
        
                If objVend.iCodigo <> 0 Then
                    Select Case objVend.objInfoUsu.iCargo
                        Case VENDEDOR_CARGO_PROMOTOR
                            sNomeProm = IIf(Len(Trim(sNomeProm)) = 0, "", sNomeProm & ", ") & objVend.sNomeReduzido '& objVend.iCodigo & SEPARADOR & objVend.sNomeReduzido
                        Case VENDEDOR_CARGO_SUPERVISOR
                            sNomeSup = IIf(Len(Trim(sNomeSup)) = 0, "", sNomeSup & ", ") & objVend.sNomeReduzido ' & objVend.iCodigo & SEPARADOR & objVend.sNomeReduzido
                        Case VENDEDOR_CARGO_GERENTE
                            sNomeGer = IIf(Len(Trim(sNomeGer)) = 0, "", sNomeGer & ", ") & objVend.sNomeReduzido ' & objVend.iCodigo & SEPARADOR & objVend.sNomeReduzido
                        Case VENDEDOR_CARGO_DIRETOR
                            sNomeDire = IIf(Len(Trim(sNomeDire)) = 0, "", sNomeDire & ", ") & objVend.sNomeReduzido ' & objVend.iCodigo & SEPARADOR & objVend.sNomeReduzido
                    End Select
                End If
            End If
        Next
        
        bAchou = False
        For Each objProd In colProd
            If objProd.sCodigo = objVou.sProduto Then
                bAchou = True
                Exit For
            End If
        Next
        If bAchou = False Then
        
            Set objProd = New ClassProduto
            
            If Len(Trim(objVou.sProduto)) <> 0 Then
            
                sDescProd = String(STRING_PRODUTO_DESCRICAO, 0)
            
                'Le o Prodedor
                lErro = Comando_Executar(alComandoTVA(8), "SELECT Descricao FROM Produtos WHERE Codigo = ? ", sDescProd, objVou.sProduto)
                If lErro <> AD_SQL_SUCESSO Then gError 200764
            
                'Busca Primeiro
                lErro = Comando_BuscarPrimeiro(alComandoTVA(8))
                If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200765
                                      
                objProd.sCodigo = objVou.sProduto
                objProd.sDescricao = sDescProd
                
                colProd.Add objProd
                                      
            End If
        
        End If
        
        lErro = CF("TRVVoucherInfo_Le", objVou, alComandoTVA(9))
        If lErro <> SUCESSO Then gError 200766
        
        dValorNet = 0
        For Each objVouInfo In objVou.colTRVVoucherInfo
            Select Case objVouInfo.sTipoDoc
                Case TRV_TIPODOC_CMCC_TEXTO, TRV_TIPODOC_CMA_TEXTO, TRV_TIPODOC_CMC_TEXTO, TRV_TIPODOC_CMR_TEXTO, TRV_TIPODOC_OVER_TEXTO
                    dValorNet = dValorNet - objVouInfo.dValor
                Case TRV_TIPODOC_BRUTO_TEXTO
                    dValorNet = dValorNet + objVouInfo.dValor
            End Select
        Next
        dValorNet = dValorNet - objVou.dValorAporte - dValorAporteCred
        
        If sAporte = "Não" Then
           
            lErro = Comando_Executar(alComandoTVA(10), "SELECT Moeda, Valor FROM TRVAportes, TRVAportePagtoFat WHERE Cliente = ? AND TRVAportes.NumIntDoc = NumIntDocAporte AND ValidadeDe <= ? AND ValidadeAte >= ? ", iMoeda, dValor, lEmpresaPai, objVou.dtData, objVou.dtData)
            If lErro <> AD_SQL_SUCESSO Then gError 200767
          
            lErro = Comando_BuscarPrimeiro(alComandoTVA(10))
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200768
        
            Do While lErro = AD_SQL_SUCESSO
            
                If iMoeda = MOEDA_DOLAR Then
                    dValorAporte = dValorAporte + dValor * objVou.dCambio
                Else
                    dValorAporte = dValorAporte + dValor
                End If
                    
                lErro = Comando_BuscarProximo(alComandoTVA(10))
                If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200769
            
            Loop
        
            lErro = Comando_Executar(alComandoTVA(11), "SELECT Moeda, Valor FROM TRVAportes, TRVAportePagtoDireto WHERE Cliente = ? AND TRVAportes.NumIntDoc = NumIntDocAporte AND DataEmissao <= ? AND DataEmissao+365 >= ? ", iMoeda, dValor, lEmpresaPai, objVou.dtData, objVou.dtData)
            If lErro <> AD_SQL_SUCESSO Then gError 200770
        
            lErro = Comando_BuscarPrimeiro(alComandoTVA(11))
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200771
        
            Do While lErro = AD_SQL_SUCESSO
        
                If iMoeda = MOEDA_DOLAR Then
                    dValorAporte = dValorAporte + dValor * objVou.dCambio
                Else
                    dValorAporte = dValorAporte + dValor
                End If
        
                lErro = Comando_BuscarProximo(alComandoTVA(11))
                If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200772
        
            Loop
            
            If dValorAporte > 2000 Then
                sAporte = "Sim"
            End If
        End If

        sRegistro = "TVA;" & sGrupo & ";" & sNomeProm & ";" & sNomeSup & ";" & sNomeGer & ";" & CStr(objVou.lClienteVou) & ";" & sNomeCliente & ";" & objVou.sControle & ";" & Trim(objProd.sCodigo) & SEPARADOR & objProd.sDescricao & ";" & objVou.lNumVou & ";" & Format(objVou.dtData, "dd/mm/yyyy") & ";" & objVou.sMoeda & ";" & Format(objVou.dValorCambio, "STANDARD") & ";" & Format(objVou.dCambio, "#0.0000") & ";" & Format(dValorNet / IIf(objVou.dCambio = 0, 1, objVou.dCambio), "STANDARD") & ";" & Format(dValorNet, "STANDARD") & ";" & sAporte & ";" & sUsuRespCallCenter

        Print #1, sRegistro
        
        sAporteAnt = sAporte
        
        'Busca Próximo
        lErro = Comando_BuscarProximo(alComandoTVA(1))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200773
    
        Call objFrmAguardeTela.ProcessouItem
        
        If objFrmAguarde.iCancelar = MARCADO Then Exit Do

    Loop
    
    'Set objFrmAguardeTela = Nothing
    If objFrmAguarde.iCancelar = MARCADO Then gError 200774
    'FIM PROCESSA TVA
    
    'PROCESSA TVI
    'Alocação de espaço no buffer
    sTipVou = String(STRING_TRV_OCR_TIPODOC, 0)
    sSerie = String(STRING_TRV_OCR_SERIE, 0)
    
    'Le os vouchers
    lErro = Comando_Executar(alComandoTVI(1), "SELECT TipVou, Serie, NumVou FROM TRVVouchers WHERE TipoDoc = 'VOU' AND Data BETWEEN ? AND ? AND Status <> 7 ORDER BY ClienteVou, Data", sTipVou, sSerie, lNumVou, dtDataDe, dtDataAte)
    If lErro <> AD_SQL_SUCESSO Then gError 200747

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComandoTVI(1))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200748
    
    Do While lErro <> AD_SQL_SEM_DADOS
    
        sNomeProm = ""
        sNomeSup = ""
        sNomeGer = ""
        sNomeDire = ""
        sAporte = "Não"
        dValorAporte = 0
    
        Set objVou = New ClassTRVVouchers
        
        objVou.sTipoDoc = TRV_TIPODOC_VOU_TEXTO
        objVou.sTipVou = sTipVou
        objVou.sSerie = sSerie
        objVou.lNumVou = lNumVou
    
        lErro = CF("TRVVouchers_Le", objVou, alComandoTVI(2), alComandoTVI(3))
        If lErro <> SUCESSO Then gError 200749
        
        'Le o Responsável
        lErro = Comando_Executar(alComandoTVA(12), "SELECT Cliente FROM TRVCliDataCallCenter WHERE Cliente = ? AND ((DataDe <= ? OR DataDe = ?) AND (DataAte >= ? OR DataAte = ?)) ", _
        lClienteAux, objVou.lClienteVou, objVou.dtData, DATA_NULA, objVou.dtData, DATA_NULA)
        If lErro <> AD_SQL_SUCESSO Then gError 200754

        'Busca Primeiro
        lErro = Comando_BuscarPrimeiro(alComandoTVA(12))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200755

        If lErro = AD_SQL_SUCESSO Then sAporte = "CallCenter"

'        sResponsavel = String(STRING_MAXIMO, 0)
'        sUsuRespCallCenter = String(STRING_MAXIMO, 0)
'
'        'Le o Responsável
'        lErro = Comando_Executar(alComandoTVA(12), "SELECT Responsavel, UsuRespCallCenter FROM ClientesAtend WHERE Codigo = ? ", _
'        sResponsavel, sUsuRespCallCenter, objVou.lClienteVou)
'        If lErro <> AD_SQL_SUCESSO Then gError 200754
'
'        'Busca Primeiro
'        lErro = Comando_BuscarPrimeiro(alComandoTVA(12))
'        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200755
'
'        If sResponsavel = "Call Center" Then sAporte = "CallCenter"
           
        If lClienteAnt <> objVou.lClienteVou Then
        
            lClienteAnt = objVou.lClienteVou
            
            sGrupo = String(STRING_TRV_TAMANHO_OUTROS, 0)
            
            'Le a Filial do Cliente
            lErro = Comando_Executar(alComandoTVA(4), "SELECT Grupo, EmpresaPai FROM FiliaisClientesTRV WHERE CodCliente = ? AND CodFilial = ?", sGrupo, lEmpresaPai, objVou.lClienteVou, FILIAL_MATRIZ)
            If lErro <> AD_SQL_SUCESSO Then gError 200750
        
            'Busca Primeiro
            lErro = Comando_BuscarPrimeiro(alComandoTVA(4))
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200751
        
            sNomeCliente = String(STRING_CLIENTE_NOME_REDUZIDO, 0)
        
            'Le o Cliente
            lErro = Comando_Executar(alComandoTVA(7), "SELECT NomeReduzido FROM Clientes WHERE Codigo = ? ", sNomeCliente, objVou.lClienteVou)
            If lErro <> AD_SQL_SUCESSO Then gError 200752
        
            'Busca Primeiro
            lErro = Comando_BuscarPrimeiro(alComandoTVA(7))
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200753
            
'            'Le o Responsável
'            lErro = Comando_Executar(alComandoTVA(12), "SELECT Filial FROM FilialClienteCategorias WHERE Categoria = ? AND Cliente = ? AND Item = ?", _
'            iFilial, "Responsável", objVou.lClienteVou, "Call Center")
'            If lErro <> AD_SQL_SUCESSO Then gError 200754
'
'            'Busca Primeiro
'            lErro = Comando_BuscarPrimeiro(alComandoTVA(12))
'            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200755
'
'            If lErro = AD_SQL_SUCESSO Then sAporte = "CallCenter"
        Else
            sAporteAnt = sAporte
        End If
        
        bAchou = False
        For Each objVend In colVend
            If objVend.iCodigo = objVou.lPromotor Then
                bAchou = True
                Exit For
            End If
        Next
        If bAchou = False Then
        
            Set objVend = New ClassVendedor
            Set objVendTRV = New ClassVendedorTRV
            Set objVend.objInfoUsu = objVendTRV
                              
            If objVou.lPromotor <> 0 Then
            
                colVend.Add objVend

                sNomeVend = String(STRING_VENDEDOR_NOME_RED, 0)
            
                'Le o vendedor
                lErro = Comando_Executar(alComandoTVA(5), "SELECT NomeReduzido FROM Vendedores WHERE Codigo = ? ", sNomeVend, objVou.lPromotor)
                If lErro <> AD_SQL_SUCESSO Then gError 200756
            
                'Busca Primeiro
                lErro = Comando_BuscarPrimeiro(alComandoTVA(5))
                If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200757
            
                'Le o vendedor
                lErro = Comando_Executar(alComandoTVA(6), "SELECT Cargo FROM VendedorTRV WHERE Vendedor = ? ", iCargo, objVou.lPromotor)
                If lErro <> AD_SQL_SUCESSO Then gError 200758
            
                'Busca Primeiro
                lErro = Comando_BuscarPrimeiro(alComandoTVA(6))
                If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200759
                
                objVend.iCodigo = objVou.lPromotor
                objVend.sNomeReduzido = sNomeVend
                objVendTRV.iCargo = iCargo
                           
            End If
        
        End If

        If objVend.iCodigo <> 0 Then
            sNomeProm = objVend.iCodigo & SEPARADOR & objVend.sNomeReduzido
        End If
        
        For Each objVendAux In objVou.colVendedores
            If objVendAux.iCodigo <> 9999 And objVendAux.iCodigo <> 0 Then
                bAchou = False
                For Each objVend In colVend
                    If objVend.iCodigo = objVendAux.iCodigo Then
                        bAchou = True
                        Exit For
                    End If
                Next
                If bAchou = False Then
                              
                    Set objVend = New ClassVendedor
                    Set objVendTRV = New ClassVendedorTRV
                    Set objVend.objInfoUsu = objVendTRV
                    
                    If objVendAux.iCodigo <> 0 Then
                    
                        colVend.Add objVend
                    
                        sNomeVend = String(STRING_VENDEDOR_NOME_RED, 0)
                    
                        'Le o vendedor
                        lErro = Comando_Executar(alComandoTVA(5), "SELECT NomeReduzido FROM Vendedores WHERE Codigo = ? ", sNomeVend, objVendAux.iCodigo)
                        If lErro <> AD_SQL_SUCESSO Then gError 200760
                    
                        'Busca Primeiro
                        lErro = Comando_BuscarPrimeiro(alComandoTVA(5))
                        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200761
                    
                        'Le o vendedor
                        lErro = Comando_Executar(alComandoTVA(6), "SELECT Cargo FROM VendedorTRV WHERE Vendedor = ? ", iCargo, objVendAux.iCodigo)
                        If lErro <> AD_SQL_SUCESSO Then gError 200762
                    
                        'Busca Primeiro
                        lErro = Comando_BuscarPrimeiro(alComandoTVA(6))
                        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200763
                        
                        objVend.iCodigo = objVendAux.iCodigo
                        objVend.sNomeReduzido = sNomeVend
                        objVendTRV.iCargo = iCargo
                                   
                    End If
                
                End If
        
                If objVend.iCodigo <> 0 Then
                    Select Case objVend.objInfoUsu.iCargo
                        Case VENDEDOR_CARGO_PROMOTOR
                            sNomeProm = IIf(Len(Trim(sNomeProm)) = 0, "", sNomeProm & ", ") & objVend.iCodigo & SEPARADOR & objVend.sNomeReduzido
                        Case VENDEDOR_CARGO_SUPERVISOR
                            sNomeSup = IIf(Len(Trim(sNomeSup)) = 0, "", sNomeSup & ", ") & objVend.iCodigo & SEPARADOR & objVend.sNomeReduzido
                        Case VENDEDOR_CARGO_GERENTE
                            sNomeGer = IIf(Len(Trim(sNomeGer)) = 0, "", sNomeGer & ", ") & objVend.iCodigo & SEPARADOR & objVend.sNomeReduzido
                        Case VENDEDOR_CARGO_DIRETOR
                            sNomeDire = IIf(Len(Trim(sNomeDire)) = 0, "", sNomeDire & ", ") & objVend.iCodigo & SEPARADOR & objVend.sNomeReduzido
                    End Select
                End If
            End If
        Next
        
        bAchou = False
        For Each objProd In colProd
            If objProd.sCodigo = objVou.sProduto Then
                bAchou = True
                Exit For
            End If
        Next
        If bAchou = False Then
        
            Set objProd = New ClassProduto
            
            If Len(Trim(objVou.sProduto)) <> 0 Then
            
                sDescProd = String(STRING_PRODUTO_DESCRICAO, 0)
            
                'Le o Prodedor
                lErro = Comando_Executar(alComandoTVA(8), "SELECT Descricao FROM Produtos WHERE Codigo = ? ", sDescProd, objVou.sProduto)
                If lErro <> AD_SQL_SUCESSO Then gError 200764
            
                'Busca Primeiro
                lErro = Comando_BuscarPrimeiro(alComandoTVA(8))
                If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200765
                                      
                objProd.sCodigo = objVou.sProduto
                objProd.sDescricao = sDescProd
                
                colProd.Add objProd
            
            End If
        
        End If
        
        lErro = CF("TRVVoucherInfo_Le", objVou, alComandoTVI(9))
        If lErro <> SUCESSO Then gError 200766
        
        dValorNet = 0
        For Each objVouInfo In objVou.colTRVVoucherInfo
            Select Case objVouInfo.sTipoDoc
                Case TRV_TIPODOC_CMCC_TEXTO, TRV_TIPODOC_CMA_TEXTO, TRV_TIPODOC_CMC_TEXTO, TRV_TIPODOC_CMR_TEXTO, TRV_TIPODOC_OVER_TEXTO
                    dValorNet = dValorNet - objVouInfo.dValor
                Case TRV_TIPODOC_BRUTO_TEXTO
                    dValorNet = dValorNet + objVouInfo.dValor
            End Select
        Next
            
        If sAporte = "Não" Then
    
            lErro = Comando_Executar(alComandoTVI(10), "SELECT Moeda, Valor FROM TRVAportes, TRVAportePagtoFat WHERE Cliente = ? AND TRVAportes.NumIntDoc = NumIntDocAporte AND ValidadeDe <= ? AND ValidadeAte >= ? ", iMoeda, dValor, lEmpresaPai, objVou.dtData, objVou.dtData)
            If lErro <> AD_SQL_SUCESSO Then gError 200767
          
            lErro = Comando_BuscarPrimeiro(alComandoTVI(10))
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200768
        
            Do While lErro = AD_SQL_SUCESSO
            
                If iMoeda = MOEDA_DOLAR Then
                    dValorAporte = dValorAporte + dValor * objVou.dCambio
                Else
                    dValorAporte = dValorAporte + dValor
                End If
                    
                lErro = Comando_BuscarProximo(alComandoTVI(10))
                If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200769
            
            Loop
        
            lErro = Comando_Executar(alComandoTVI(11), "SELECT Moeda, Valor FROM TRVAportes, TRVAportePagtoDireto WHERE Cliente = ? AND TRVAportes.NumIntDoc = NumIntDocAporte AND DataEmissao <= ? AND DataEmissao+365 >= ? ", iMoeda, dValor, lEmpresaPai, objVou.dtData, objVou.dtData)
            If lErro <> AD_SQL_SUCESSO Then gError 200770
        
            lErro = Comando_BuscarPrimeiro(alComandoTVI(11))
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200771
        
            Do While lErro = AD_SQL_SUCESSO
        
                If iMoeda = MOEDA_DOLAR Then
                    dValorAporte = dValorAporte + dValor * objVou.dCambio
                Else
                    dValorAporte = dValorAporte + dValor
                End If
        
                lErro = Comando_BuscarProximo(alComandoTVI(11))
                If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200772
        
            Loop
            
            If dValorAporte > 2000 Then
                sAporte = "Sim"
            End If
        End If

        sRegistro = "TVI;" & sGrupo & ";" & sNomeProm & ";" & sNomeSup & ";" & sNomeGer & ";" & CStr(objVou.lClienteVou) & ";" & sNomeCliente & ";" & objVou.sControle & ";" & Trim(objProd.sCodigo) & SEPARADOR & objProd.sDescricao & ";" & objVou.lNumVou & ";" & Format(objVou.dtData, "dd/mm/yyyy") & ";" & objVou.sMoeda & ";" & Format(objVou.dValorCambio, "STANDARD") & ";" & Format(objVou.dCambio, "#0.0000") & ";" & Format(dValorNet / IIf(objVou.dCambio = 0, 1, objVou.dCambio), "STANDARD") & ";" & Format(dValorNet, "STANDARD") & ";" & sAporte & ";" & sUsuRespCallCenter

        Print #1, sRegistro
        
        sAporteAnt = sAporte
        
        'Busca Próximo
        lErro = Comando_BuscarProximo(alComandoTVI(1))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 200773
    
        Call objFrmAguardeTela.ProcessouItem
        
        If objFrmAguarde.iCancelar = MARCADO Then Exit Do

    Loop
    
    Set objFrmAguardeTela = Nothing
    If objFrmAguarde.iCancelar = MARCADO Then gError 200774
    'FIM PROCESSA TVA
    
    Close #1
    bArqAberto = False
       
    TRVRelsEmExcel_Gera_Tipo1 = SUCESSO

    Exit Function

Erro_TRVRelsEmExcel_Gera_Tipo1:

    TRVRelsEmExcel_Gera_Tipo1 = gErr

    Select Case gErr

        Case 200743 To 200748, 200773
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVVOUCHERS", gErr)
            
        Case 200749, 200766, 200774
        
        Case 200750, 200751
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_FILIAISCLIENTESTRV", gErr)
            
        Case 200752, 200753
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_CLIENTES", gErr)
        
        Case 200754, 200755
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_FILIALCLIENTECATEGORIAS", gErr)

        Case 200756, 200757, 200760, 200761
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_VENDEDORES", gErr)
        
        Case 200758, 200759, 200762, 200763
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_VENDEDORTRV", gErr)
            
        Case 200764, 200765
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_PRODUTOS", gErr)
            
        Case 200767 To 200772
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVAPORTES", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 200775)

    End Select

    If Not (objFrmAguardeTela Is Nothing) Then
        Call objFrmAguardeTela.Trata_Erro
    End If

    If bArqAberto Then Close #1

    Exit Function

End Function

'ROTINAS CRIADAS AUTOMATICAMENTE PELA TELA BROWSECRIA
'GRAVAÇÃO
Public Function RelTRVAtendCRM_Prepara(ByVal objRelTRVAtendCRMSel As ClassRelTRVAtendCRMSel) As Long

Dim lErro As Long
Dim lTransacao As Long
Dim alComando(1 To 20) As Long
Dim iIndice As Integer

On Error GoTo Erro_RelTRVAtendCRM_Prepara

    'Abertura de transação
    lTransacao = Transacao_Abrir()
    If lTransacao = 0 Then gError 206461
    
    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 206462
    Next

    lErro = RelTRVAtendCRM_Prepara1(alComando(), objRelTRVAtendCRMSel)
    If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
    
    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    'Confirma a transação
    lErro = Transacao_Commit()
    If lErro <> AD_SQL_SUCESSO Then gError 206463

    RelTRVAtendCRM_Prepara = SUCESSO

    Exit Function

Erro_RelTRVAtendCRM_Prepara:

    RelTRVAtendCRM_Prepara = gErr

    Select Case gErr

        Case 206461
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_TRANSACAO", gErr)

        Case 206462
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case ERRO_SEM_MENSAGEM

        Case 206463
            Call Rotina_Erro(vbOKOnly, "ERRO_COMMIT", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 206464)

    End Select
    
    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    'Desfaz Transação
    Call Transacao_Rollback

    Exit Function

End Function

Private Function RelTRVAtendCRM_Prepara1(alComando() As Long, ByVal objRelTRVAtendCRMSel As ClassRelTRVAtendCRMSel) As Long

Dim lErro As Long
Dim iIndice As Integer
Dim lNumIntRel As Long
Dim objItem As ClassRelTRVAtendCRM
Dim tItem As typeRelTRVAtendCRM, sCodUsuario As String
Dim sFiltro As String, iSeq As Integer

On Error GoTo Erro_RelTRVAtendCRM_Prepara1

    'Obter NumIntRel
    lErro = CF("Config_ObterNumInt", "TRVConfig", "NUM_INT_REL_TRVATEND", lNumIntRel)
    If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
    
    objRelTRVAtendCRMSel.lNumIntRel = lNumIntRel

    lErro = Comando_Executar(alComando(1), "INSERT INTO RelTRVAtendCRMSel( NumIntRel, FiltroDataDe, FiltroDataAte, DataGer, " & _
            "HoraGer, UsuGer, SoCallCenter) VALUES (?,?,?,?,?,?,?)", _
            objRelTRVAtendCRMSel.lNumIntRel, objRelTRVAtendCRMSel.dtFiltroDataDe, objRelTRVAtendCRMSel.dtFiltroDataAte, Date, _
            CDbl(Now), gsUsuario, objRelTRVAtendCRMSel.iSoCallCenter)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206478
    
    Set objItem = New ClassRelTRVAtendCRM

    objItem.iAtendenteCod = 0
    objItem.sAtendenteCodUsu = ""
    objItem.sAtendenteNome = "SEM ATENDENTE"

    objRelTRVAtendCRMSel.colItens.Add objItem

    tItem.sAtendenteNome = String(STRING_USUARIO_NOME, 0)
    sCodUsuario = String(STRING_USUARIO_CODIGO, 0)

    lErro = Comando_Executar(alComando(2), "SELECT A.Codigo, A.CodUsuario, U.Nome FROM Atendentes AS A, Usuario AS U WHERE A.CodUsuario = U.CodUsuario ORDER BY U.Nome", tItem.iAtendenteCod, sCodUsuario, tItem.sAtendenteNome)
    If lErro <> AD_SQL_SUCESSO Then gError 206479

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(2))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206480
    
    Do While lErro <> AD_SQL_SEM_DADOS
    
        Set objItem = New ClassRelTRVAtendCRM
    
        objItem.iAtendenteCod = tItem.iAtendenteCod
        objItem.sAtendenteCodUsu = sCodUsuario
        objItem.sAtendenteNome = tItem.sAtendenteNome
    
        objRelTRVAtendCRMSel.colItens.Add objItem
    
        'Busca Próximo
        lErro = Comando_BuscarProximo(alComando(2))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206481
    
    Loop
    
    If objRelTRVAtendCRMSel.iSoCallCenter = MARCADO Then
        sFiltro = "Responsavel = 'Call Center' "
    Else
        sFiltro = ""
    End If
    
    sCodUsuario = String(STRING_USUARIO_CODIGO, 0)
    
    'Obtem o total de clientes
    lErro = Comando_Executar(alComando(3), "SELECT UsuRespCallCenter, COUNT(*) FROM ClientesAtend WHERE Tipo IN (2,3,4,5,6,13,14,15) " & IIf(Len(sFiltro) = 0, "", "AND " & sFiltro) & " GROUP BY UsuRespCallCenter", sCodUsuario, tItem.lTotalCli)
    If lErro <> AD_SQL_SUCESSO Then gError 206482

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(3))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206483
    
    Do While lErro <> AD_SQL_SEM_DADOS
    
        For Each objItem In objRelTRVAtendCRMSel.colItens
            If UCase(objItem.sAtendenteCodUsu) = UCase(sCodUsuario) Then
                objItem.lTotalCli = tItem.lTotalCli
                Exit For
            End If
        Next

        lErro = Comando_BuscarProximo(alComando(3))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206484

    Loop
    
    For iIndice = objRelTRVAtendCRMSel.colItens.Count To 1 Step -1
        If objRelTRVAtendCRMSel.colItens.Item(iIndice).lTotalCli = 0 Then
            objRelTRVAtendCRMSel.colItens.Remove (iIndice)
        End If
    Next
    
    'Obtem o total de contatos no período
    lErro = Comando_Executar(alComando(4), "SELECT R.Atendente, COUNT(DISTINCT R.Cliente), COUNT(*), SUM(Origem - 1) AS TotalContAtivo, SUM(-(Origem - 2)) AS TotalContReceptivo  FROM RelacionamentoClientes As R, ClientesAtend As C WHERE C.Codigo = R.Cliente AND R.Tipo = 21 AND R.Data BETWEEN ? AND ? " & IIf(Len(sFiltro) = 0, "", "AND C." & sFiltro) & " GROUP BY R.Atendente", tItem.iAtendenteCod, tItem.lTotalCliContact, tItem.lTotalContRealizados, tItem.lTotalContAtivo, tItem.lTotalContReceptivo, objRelTRVAtendCRMSel.dtFiltroDataDe, objRelTRVAtendCRMSel.dtFiltroDataAte)
    If lErro <> AD_SQL_SUCESSO Then gError 206485

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(4))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206486
    
    Do While lErro <> AD_SQL_SEM_DADOS
    
        For Each objItem In objRelTRVAtendCRMSel.colItens
            If objItem.iAtendenteCod = tItem.iAtendenteCod Then
                objItem.lTotalCliContact = tItem.lTotalCliContact
                objItem.lTotalContRealizados = tItem.lTotalContRealizados
                objItem.lTotalContAtivo = tItem.lTotalContAtivo
                objItem.lTotalContReceptivo = tItem.lTotalContReceptivo
                Exit For
            End If
        Next

        lErro = Comando_BuscarProximo(alComando(4))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206487

    Loop
    
    sCodUsuario = String(STRING_USUARIO_CODIGO, 0)
    
    'Obtem o total clientes cadastrados no período
    lErro = Comando_Executar(alComando(5), "SELECT A.UsuRespCallCenter , COUNT(DISTINCT A.Codigo) FROM ClientesAtend AS A, ClientesDataCad AS C WHERE A.Codigo = C.Codigo AND A.Tipo IN (2,3,4,5,6,13,14,15) AND C.DataCadastro BETWEEN ? AND ? " & IIf(Len(sFiltro) = 0, "", "AND A." & sFiltro) & " GROUP BY A.UsuRespCallCenter", sCodUsuario, tItem.lTotalCliNovos, objRelTRVAtendCRMSel.dtFiltroDataDe, objRelTRVAtendCRMSel.dtFiltroDataAte)
    If lErro <> AD_SQL_SUCESSO Then gError 206488

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(5))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206489
    
    Do While lErro <> AD_SQL_SEM_DADOS
    
        For Each objItem In objRelTRVAtendCRMSel.colItens
            If UCase(objItem.sAtendenteCodUsu) = UCase(sCodUsuario) Then
                objItem.lTotalCliNovos = tItem.lTotalCliNovos
                Exit For
            End If
        Next

        lErro = Comando_BuscarProximo(alComando(5))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206490

    Loop
    
    sCodUsuario = String(STRING_USUARIO_CODIGO, 0)
    
    'Obtem o total vendido no período
    lErro = Comando_Executar(alComando(6), "SELECT C.UsuRespCallCenter, SUM(V.Valor) As ValorFat, SUM(V.ValorBruto) As ValorBruto, SUM(V.ValorBrutoComOCR - ValorCMAComOCR - ValorCMC - ValorCMR - ValorCMCC - ValorCME) AS ValorLiq ,SUM(Pax) AS QtdPax, COUNT(*) AS QtdVou, COUNT(DISTINCT ClienteVou) FROM TrvVouchers AS V, ClientesAtend AS C WHERE V.ClienteVou = C.Codigo AND V.TipoDoc = 'VOU' AND V.Status <> 7 AND V.ExtraiInfoSigav = 0 AND V.Data BETWEEN ? AND ? " & IIf(Len(sFiltro) = 0, "", "AND C." & sFiltro) & " GROUP BY C.UsuRespCallCenter", sCodUsuario, tItem.dTotalVendFat, tItem.dTotalVendBruto, tItem.dTotalVendLiq, tItem.lTotalVou, tItem.lTotalPax, tItem.lTotalPDV, objRelTRVAtendCRMSel.dtFiltroDataDe, objRelTRVAtendCRMSel.dtFiltroDataAte)
    If lErro <> AD_SQL_SUCESSO Then gError 206491

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(6))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206492
    
    Do While lErro <> AD_SQL_SEM_DADOS
    
        For Each objItem In objRelTRVAtendCRMSel.colItens
            If UCase(objItem.sAtendenteCodUsu) = UCase(sCodUsuario) Then
                objItem.dTotalVendFat = tItem.dTotalVendFat
                objItem.dTotalVendLiq = tItem.dTotalVendLiq
                objItem.dTotalVendBruto = tItem.dTotalVendBruto
                objItem.lTotalVou = tItem.lTotalVou
                objItem.lTotalPax = tItem.lTotalPax
                objItem.lTotalPDV = tItem.lTotalPDV
                Exit For
            End If
        Next

        lErro = Comando_BuscarProximo(alComando(6))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206493

    Loop
    
    sCodUsuario = String(STRING_USUARIO_CODIGO, 0)
    
    'Obtem o total cancelado no período
    lErro = Comando_Executar(alComando(7), "SELECT C.UsuRespCallCenter, COUNT(*) AS QtdVou FROM TrvVouchers AS V, ClientesAtend AS C WHERE V.ClienteVou = C.Codigo AND V.TipoDoc = 'VOU' AND V.Status = 7 AND V.Data BETWEEN ? AND ? " & IIf(Len(sFiltro) = 0, "", "AND C." & sFiltro) & " GROUP BY C.UsuRespCallCenter", sCodUsuario, tItem.lTotalVouCanc, objRelTRVAtendCRMSel.dtFiltroDataDe, objRelTRVAtendCRMSel.dtFiltroDataAte)
    If lErro <> AD_SQL_SUCESSO Then gError 206494

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(7))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206495
    
    Do While lErro <> AD_SQL_SEM_DADOS
    
        For Each objItem In objRelTRVAtendCRMSel.colItens
            If UCase(objItem.sAtendenteCodUsu) = UCase(sCodUsuario) Then
                objItem.lTotalVouCanc = tItem.lTotalVouCanc
                Exit For
            End If
        Next

        lErro = Comando_BuscarProximo(alComando(7))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206496

    Loop
    
    'Obtem o maior cliente no período
    For Each objItem In objRelTRVAtendCRMSel.colItens
    
        tItem.sMaiorCliNome = String(STRING_CLIENTE_NOME_REDUZIDO, 0)
    
        lErro = Comando_Executar(alComando(8), "SELECT C.Codigo, C.NomeReduzido, SUM(V.Valor) As ValorFat, SUM(V.ValorBruto) As ValorBruto, SUM(V.ValorBrutoComOCR - ValorCMAComOCR - ValorCMC - ValorCMR - ValorCMCC - ValorCME) AS ValorLiq FROM TrvVouchers AS V, ClientesAtend AS C WHERE V.ClienteVou = C.Codigo AND V.TipoDoc = 'VOU' AND V.Status <> 7 AND C.UsuRespCallCenter = ? AND V.Data BETWEEN ? AND ? " & IIf(Len(sFiltro) = 0, "", "AND C." & sFiltro) & " GROUP BY C.Codigo, C.NomeReduzido ORDER BY Sum(ValorBruto) DESC", tItem.lMaiorCliCod, tItem.sMaiorCliNome, tItem.dMaiorCliVendFat, tItem.dMaiorCliVendBruto, tItem.dMaiorCliVendLiq, objItem.sAtendenteCodUsu, objRelTRVAtendCRMSel.dtFiltroDataDe, objRelTRVAtendCRMSel.dtFiltroDataAte)
        If lErro <> AD_SQL_SUCESSO Then gError 200747
    
        'Busca Primeiro
        lErro = Comando_BuscarPrimeiro(alComando(8))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206497
        
        If lErro <> AD_SQL_SEM_DADOS Then
            objItem.dMaiorCliVendBruto = tItem.dMaiorCliVendBruto
            objItem.dMaiorCliVendFat = tItem.dMaiorCliVendFat
            objItem.dMaiorCliVendLiq = tItem.dMaiorCliVendLiq
            objItem.lMaiorCliCod = tItem.lMaiorCliCod
            objItem.sMaiorCliNome = tItem.sMaiorCliNome
        End If
    
    Next
    
    'Obtem o maior produto no período
    For Each objItem In objRelTRVAtendCRMSel.colItens
    
        tItem.sMaiorProdCod = String(STRING_PRODUTO, 0)
        tItem.sMaiorProdDesc = String(STRING_PRODUTO_DESCRICAO, 0)
    
        lErro = Comando_Executar(alComando(9), "SELECT P.Codigo, P.Descricao, COUNT(*) As QtdVou FROM TrvVouchers AS V, ClientesAtend AS C, Produtos AS P WHERE V.Produto = P.Codigo AND V.ClienteVou = C.Codigo AND V.TipoDoc = 'VOU' AND V.Status <> 7 AND C.UsuRespCallCenter = ? AND V.Data BETWEEN ? AND ? " & IIf(Len(sFiltro) = 0, "", "AND C." & sFiltro) & " GROUP BY P.Codigo, P.Descricao ORDER BY COUNT(*) DESC", tItem.sMaiorProdCod, tItem.sMaiorProdDesc, tItem.lMaiorProdQtd, objItem.sAtendenteCodUsu, objRelTRVAtendCRMSel.dtFiltroDataDe, objRelTRVAtendCRMSel.dtFiltroDataAte)
        If lErro <> AD_SQL_SUCESSO Then gError 206498
    
        'Busca Primeiro
        lErro = Comando_BuscarPrimeiro(alComando(9))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206499
        
        If lErro <> AD_SQL_SEM_DADOS Then
            objItem.sMaiorProdCod = tItem.sMaiorProdCod
            objItem.sMaiorProdDesc = tItem.sMaiorProdDesc
            objItem.lMaiorProdQtd = tItem.lMaiorProdQtd
        End If
    Next
       
    'Obtem o total investido
    'Em Fatura
    sCodUsuario = String(STRING_USUARIO_CODIGO, 0)
    lErro = Comando_Executar(alComando(10), "SELECT C.UsuRespCallCenter, SUM(X.ValorAporte + X.ValorAporteCred) FROM TrvTitulosExp AS X, TRVFaturas AS F, ClientesAtend As C WHERE F.Cliente = C.Codigo AND F.NumIntDoc = X.NumIntDocOrigem  AND F.TipoDocDestino = X.TipoDocOrigem AND F.Status <> 5 AND F.DataEmissao BETWEEN ? AND ? " & IIf(Len(sFiltro) = 0, "", "AND C." & sFiltro) & " GROUP BY C.UsuRespCallCenter", sCodUsuario, tItem.dTotalInvestido, objRelTRVAtendCRMSel.dtFiltroDataDe, objRelTRVAtendCRMSel.dtFiltroDataAte)
    If lErro <> AD_SQL_SUCESSO Then gError 206500

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(10))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206501
    
    Do While lErro <> AD_SQL_SEM_DADOS
    
        For Each objItem In objRelTRVAtendCRMSel.colItens
            If UCase(objItem.sAtendenteCodUsu) = UCase(sCodUsuario) Then
                objItem.dTotalInvestido = tItem.dTotalInvestido
                Exit For
            End If
        Next

        lErro = Comando_BuscarProximo(alComando(10))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206502

    Loop
    
    'Direto
    sCodUsuario = String(STRING_USUARIO_CODIGO, 0)
    lErro = Comando_Executar(alComando(19), "SELECT C.UsuRespCallCenter, SUM(A.Valor) FROM TRVAportePagtoDireto AS A, TitulosPagTodos AS T, ClientesAtend As C WHERE T.Fornecedor = C.Codigo AND A.FormaPagto = 1 AND A.NumIntDocDestino = T.NumIntDoc AND T.Status <>5 AND T.DataEmissao BETWEEN ? AND ? " & IIf(Len(sFiltro) = 0, "", "AND C." & sFiltro) & " GROUP BY C.UsuRespCallCenter", sCodUsuario, tItem.dTotalInvestido, objRelTRVAtendCRMSel.dtFiltroDataDe, objRelTRVAtendCRMSel.dtFiltroDataAte)
    If lErro <> AD_SQL_SUCESSO Then gError 206500

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(19))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206501
    
    Do While lErro <> AD_SQL_SEM_DADOS
    
        For Each objItem In objRelTRVAtendCRMSel.colItens
            If UCase(objItem.sAtendenteCodUsu) = UCase(sCodUsuario) Then
                objItem.dTotalInvestido = objItem.dTotalInvestido + tItem.dTotalInvestido
                Exit For
            End If
        Next

        lErro = Comando_BuscarProximo(alComando(19))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206502

    Loop
    
    lErro = RelTRVCliInativos_Grava(alComando(11), alComando(12), alComando(13), alComando(14), TRV_TIPOREL_ATENDENTE, lNumIntRel, objRelTRVAtendCRMSel.dtFiltroDataDe, objRelTRVAtendCRMSel.dtFiltroDataAte, objRelTRVAtendCRMSel.iSoCallCenter)
    If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
    
    sCodUsuario = String(STRING_USUARIO_CODIGO, 0)
    
    'Obtem os clientes inativos
    lErro = Comando_Executar(alComando(15), "SELECT UsuRespCallCenter, COUNT(*) FROM RelTRVCliInativos WHERE TipoRel = ? AND NumIntRel = ? GROUP BY UsuRespCallCenter", sCodUsuario, tItem.lTotalCliInat, TRV_TIPOREL_ATENDENTE, lNumIntRel)
    If lErro <> AD_SQL_SUCESSO Then gError 206503

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(15))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206504
    
    Do While lErro <> AD_SQL_SEM_DADOS
    
        For Each objItem In objRelTRVAtendCRMSel.colItens
            If UCase(objItem.sAtendenteCodUsu) = UCase(sCodUsuario) Then
                objItem.lTotalCliInat = tItem.lTotalCliInat
                Exit For
            End If
        Next

        lErro = Comando_BuscarProximo(alComando(15))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206505

    Loop
    
    sCodUsuario = String(STRING_USUARIO_CODIGO, 0)
    
    'Obtem os clientes reativados
    lErro = Comando_Executar(alComando(16), "SELECT R.UsuRespCallCenter, COUNT(*) FROM RelTRVCliInativos AS R, ClientesAtend As A WHERE A.Codigo = R.Cliente AND R.TipoRel = ? AND R.NumIntRel = ? AND R.DataUltCompraNoPer <> ?  " & IIf(Len(sFiltro) = 0, "", "AND A." & sFiltro) & " GROUP BY R.UsuRespCallCenter", sCodUsuario, tItem.lTotalCliInatReativ, TRV_TIPOREL_ATENDENTE, lNumIntRel, DATA_NULA)
    If lErro <> AD_SQL_SUCESSO Then gError 206506

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(16))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206507
    
    Do While lErro <> AD_SQL_SEM_DADOS
    
        For Each objItem In objRelTRVAtendCRMSel.colItens
            If UCase(objItem.sAtendenteCodUsu) = UCase(sCodUsuario) Then
                objItem.lTotalCliInatReativ = tItem.lTotalCliInatReativ
                Exit For
            End If
        Next

        lErro = Comando_BuscarProximo(alComando(16))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206508

    Loop
    
    'Obtem o total de contatos no período com clientes inativos
    lErro = Comando_Executar(alComando(17), "SELECT R.Atendente, COUNT(DISTINCT R.Cliente) FROM RelacionamentoClientes As R, RelTRVCliInativos As C, ClientesAtend As A WHERE C.Cliente = R.Cliente AND A.Codigo = C.Cliente AND R.Tipo = 21 AND R.Data BETWEEN ? AND ? " & IIf(Len(sFiltro) = 0, "", "AND A." & sFiltro) & " GROUP BY R.Atendente", tItem.iAtendenteCod, tItem.lTotalCliInatContact, objRelTRVAtendCRMSel.dtFiltroDataDe, objRelTRVAtendCRMSel.dtFiltroDataAte)
    If lErro <> AD_SQL_SUCESSO Then gError 206509

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(17))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206510
    
    Do While lErro <> AD_SQL_SEM_DADOS
    
        For Each objItem In objRelTRVAtendCRMSel.colItens
            If objItem.iAtendenteCod = tItem.iAtendenteCod Then
                objItem.lTotalCliInatContact = tItem.lTotalCliInatContact
                Exit For
            End If
        Next

        lErro = Comando_BuscarProximo(alComando(17))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206511

    Loop
    
    For Each objItem In objRelTRVAtendCRMSel.colItens
        If objItem.lTotalVou <> 0 Then objItem.dVendaMediaBruto = Arredonda_Moeda(objItem.dTotalVendBruto / objItem.lTotalVou)
        If objItem.lTotalVou <> 0 Then objItem.dVendaMediaFat = Arredonda_Moeda(objItem.dTotalVendFat / objItem.lTotalVou)
        If objItem.lTotalVou <> 0 Then objItem.dVendaMediaLiq = Arredonda_Moeda(objItem.dTotalVendLiq / objItem.lTotalVou)
        If objItem.dVendaMediaBruto <> 0 Then objItem.dPercDescMedio = Arredonda_Moeda(1 - (objItem.dVendaMediaLiq / objItem.dVendaMediaBruto), 4)
        If objItem.lTotalVou <> 0 Then objItem.dPercCancMedio = Arredonda_Moeda(objItem.lTotalVouCanc / objItem.lTotalVou, 4)
        If objItem.lTotalCli <> 0 Then objItem.dPercCliContact = Arredonda_Moeda(objItem.lTotalCliContact / objItem.lTotalCli, 4)
        If objItem.lTotalCliInat <> 0 Then objItem.dPercCliReativ = Arredonda_Moeda(objItem.lTotalCliInatReativ / objItem.lTotalCliInat, 4)
    Next
    
    For Each objItem In objRelTRVAtendCRMSel.colItens
    
        If objItem.lTotalCli <> 0 Then
        
            iSeq = iSeq + 1
        
            objItem.iSeq = iSeq
        
            lErro = Comando_Executar(alComando(18), "INSERT INTO RelTRVAtendCRM( NumIntRel, Seq, AtendenteCod, AtendenteNome, " & _
                    "TotalVou, TotalCanc, TotalPax, TotalCli, TotalCliInat, " & _
                    "TotalCliNovos, TotalCliReativ, TotalCliInatReativ, TotalCliContact, TotalCliInatContact, " & _
                    "TotalContRealizados, PercCliReativ, PercCliContact, MaiorCliCod, MaiorCliNome, " & _
                    "MaiorCliVendFat, MaiorCliVendLiq, MaiorCliVendBruto, MaiorProdCod, MaiorProdDesc, " & _
                    "MaiorProdQtd, VendaMediaFat, VendaMediaLiq, VendaMediaBruto, PercDescMedio, " & _
                    "TotalVendFat, TotalVendLiq, TotalVendBruto, TotalInvestido, PercCancMedio,TotalContAtivo, TotalContReceptivo, TotalPDV) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)", _
                    objRelTRVAtendCRMSel.lNumIntRel, objItem.iSeq, objItem.iAtendenteCod, objItem.sAtendenteNome, _
                    objItem.lTotalVou, objItem.lTotalVouCanc, objItem.lTotalPax, objItem.lTotalCli, objItem.lTotalCliInat, _
                    objItem.lTotalCliNovos, objItem.lTotalCliReativ, objItem.lTotalCliInatReativ, objItem.lTotalCliContact, objItem.lTotalCliInatContact, _
                    objItem.lTotalContRealizados, objItem.dPercCliReativ, objItem.dPercCliContact, objItem.lMaiorCliCod, objItem.sMaiorCliNome, _
                    objItem.dMaiorCliVendFat, objItem.dMaiorCliVendLiq, objItem.dMaiorCliVendBruto, objItem.sMaiorProdCod, objItem.sMaiorProdDesc, _
                    objItem.lMaiorProdQtd, objItem.dVendaMediaFat, objItem.dVendaMediaLiq, objItem.dVendaMediaBruto, objItem.dPercDescMedio, _
                    objItem.dTotalVendFat, objItem.dTotalVendLiq, objItem.dTotalVendBruto, objItem.dTotalInvestido, objItem.dPercCancMedio, objItem.lTotalContAtivo, objItem.lTotalContReceptivo, objItem.lTotalPDV)
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206512
        
        End If
        
    Next

    RelTRVAtendCRM_Prepara1 = SUCESSO

    Exit Function

Erro_RelTRVAtendCRM_Prepara1:

    RelTRVAtendCRM_Prepara1 = gErr

    Select Case gErr
    
        Case ERRO_SEM_MENSAGEM

        Case 206478
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_RELTRVATENDCRMSEL", gErr)
            
        Case 206479 To 206481
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_ATENDENTES", gErr)

        Case 206482 To 206511
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_CLIENTES", gErr)

        Case 206512
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_RELTRVATENDCRM", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 206513)

    End Select

    Exit Function

End Function

Private Function RelTRVCliInativos_Grava(ByVal lComando1 As Long, ByVal lComando2 As Long, ByVal lComando3 As Long, ByVal lComando4 As Long, ByVal iTipoRel As Integer, ByVal lNumIntRel As Long, ByVal dtDataDe As Date, ByVal dtDataAte As Date, ByVal iSoCallCenter As Integer) As Long

Dim lErro As Long
Dim sFiltro As String
Dim sCodUsuario As String
Dim lCliente As Long
Dim dtDataUltCompraAntPer As Date
Dim dtDataUltCompraNoPer As Date
Dim dtDataInatividade As Date
Dim lSeq As Long

On Error GoTo Erro_RelTRVCliInativos_Grava
    
    If iSoCallCenter = MARCADO Then
        sFiltro = "Responsavel = 'Call Center' "
    Else
        sFiltro = ""
    End If
    
    dtDataInatividade = DateAdd("m", -6, dtDataDe)
    
    sCodUsuario = String(STRING_USUARIO, 0)
    
    'Le os clientes diferentes
    lErro = Comando_Executar(lComando1, "SELECT C.UsuRespCallCenter, C.Codigo FROM ClientesAtend AS C, ClientesDataCad AS X WHERE X.Codigo = C.Codigo AND C.Tipo IN (2,3,4,5,6,13,14,15) AND X.DataCadastro < ? " & IIf(Len(sFiltro) = 0, "", "AND C." & sFiltro), sCodUsuario, lCliente, dtDataInatividade)
    If lErro <> AD_SQL_SUCESSO Then gError 206470

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(lComando1)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206471

    Do While lErro <> AD_SQL_SEM_DADOS
    
        dtDataUltCompraAntPer = DATA_NULA
    
        'Le a maior data de compra de cada cliente antes da data selecionada
        lErro = Comando_Executar(lComando2, "SELECT MAX(V.Data) FROM TrvVouchers AS V WHERE V.ClienteVou = ? AND V.TipoDoc = 'VOU' AND V.Status <> 7 AND V.Data < ? ", dtDataUltCompraAntPer, lCliente, dtDataDe)
        If lErro <> AD_SQL_SUCESSO Then gError 206472
    
        'Busca Primeiro
        lErro = Comando_BuscarPrimeiro(lComando2)
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206473
        
        If dtDataUltCompraAntPer < dtDataInatividade Then
        'Cliente inativo
        
            dtDataUltCompraNoPer = DATA_NULA
        
            'Le a maior data de compra de cada cliente dentro do período
            lErro = Comando_Executar(lComando3, "SELECT MAX(V.Data) FROM TrvVouchers AS V WHERE V.ClienteVou = ? AND V.TipoDoc = 'VOU' AND V.Status <> 7 AND V.Data BETWEEN ? AND ? ", dtDataUltCompraNoPer, lCliente, dtDataDe, dtDataAte)
            If lErro <> AD_SQL_SUCESSO Then gError 206474
        
            'Busca Primeiro
            lErro = Comando_BuscarPrimeiro(lComando3)
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206475
        
            lSeq = lSeq + 1
        
            lErro = Comando_Executar(lComando4, "INSERT INTO RelTRVCliInativos( TipoRel,NumIntRel,Seq,Cliente,UsuRespCallCenter,DataUltCompraAntPer,DataUltCompraNoPer) VALUES (?,?,?,?,?,?,?)", _
                    iTipoRel, lNumIntRel, lSeq, lCliente, sCodUsuario, dtDataUltCompraAntPer, dtDataUltCompraNoPer)
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206476
        
        End If

        'Busca Próximo
        lErro = Comando_BuscarProximo(lComando1)
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206477

    Loop

    RelTRVCliInativos_Grava = SUCESSO

    Exit Function

Erro_RelTRVCliInativos_Grava:

    RelTRVCliInativos_Grava = gErr

    Select Case gErr
    
        Case 206470, 206471, 206477
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_CLIENTES", gErr)

        Case 206472 To 206475
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVVOUCHERS", gErr)

        Case 206476
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_RELTRVCLIINATIVOS", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 206514)

    End Select

    Exit Function
    
End Function

Public Function RelTRVDesviosVend_Prepara(ByVal objRelTRVDesviosVendSel As ClassRelTRVDesviosVendSel) As Long

Dim lErro As Long
Dim lTransacao As Long
Dim alComando(1 To 20) As Long
Dim iIndice As Integer

On Error GoTo Erro_RelTRVDesviosVend_Prepara

    'Abertura de transação
    lTransacao = Transacao_Abrir()
    If lTransacao = 0 Then gError 206515
    
    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 206516
    Next

    lErro = RelTRVDesviosVend_Prepara1(alComando(), objRelTRVDesviosVendSel)
    If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
    
    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    'Confirma a transação
    lErro = Transacao_Commit()
    If lErro <> AD_SQL_SUCESSO Then gError 206517

    RelTRVDesviosVend_Prepara = SUCESSO

    Exit Function

Erro_RelTRVDesviosVend_Prepara:

    RelTRVDesviosVend_Prepara = gErr

    Select Case gErr

        Case 206515
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_TRANSACAO", gErr)

        Case 206516
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case ERRO_SEM_MENSAGEM

        Case 206517
            Call Rotina_Erro(vbOKOnly, "ERRO_COMMIT", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 206518)

    End Select
    
    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    'Desfaz Transação
    Call Transacao_Rollback

    Exit Function

End Function

Private Function RelTRVDesviosVend_Prepara1(alComando() As Long, ByVal objRelTRVDesviosVendSel As ClassRelTRVDesviosVendSel) As Long

Dim lErro As Long
Dim iIndice As Integer
Dim lNumIntRel As Long
Dim objItem As ClassRelTRVDesviosVend
Dim lCliente As Long
Dim sNomeCliente As String
Dim sResponsavel As String
Dim sAtendente As String
Dim sPromotor As String
Dim dtDataIni As Date, dtDataFim As Date
Dim dValorFat(1 To 4) As Double
Dim dValorBruto(1 To 4) As Double
Dim dValorLiq(1 To 4) As Double
Dim lQtd(1 To 4) As Long
Dim dtDataMin(1 To 4) As Date
Dim dtDataMax(1 To 4) As Date
Dim dDias As Double, iExibe As Integer
Dim lSeq As Long, sFiltro

On Error GoTo Erro_RelTRVDesviosVend_Prepara1

    'Obter NumIntRel
    lErro = CF("Config_ObterNumInt", "TRVConfig", "NUM_INT_REL_TRVDESVVEND", lNumIntRel)
    If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
    
    objRelTRVDesviosVendSel.lNumIntRel = lNumIntRel
    
    lErro = Comando_Executar(alComando(1), "INSERT INTO RelTRVDesviosVendSel( NumIntRel, DataGer, HoraGer, UsuGer, " & _
                "Ano, Mes, Desvios, PercDesvMes, PercDesvAno, " & _
                "MinVendVlr, MinVendQtd, TrazerCliNComp, ValorBase) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)", _
                objRelTRVDesviosVendSel.lNumIntRel, Date, CDbl(Now), gsUsuario, _
                objRelTRVDesviosVendSel.iAno, objRelTRVDesviosVendSel.iMes, objRelTRVDesviosVendSel.iDesvios, objRelTRVDesviosVendSel.dPercDesvMes, objRelTRVDesviosVendSel.dPercDesvAno, _
                objRelTRVDesviosVendSel.dMinVendVlr, objRelTRVDesviosVendSel.iMinVendQtd, objRelTRVDesviosVendSel.iTrazerCliNComp, objRelTRVDesviosVendSel.iValorBase)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206519
    
    sNomeCliente = String(STRING_CLIENTE_NOME_REDUZIDO, 0)
    sResponsavel = String(STRING_CATEGORIACLIENTEITEM_ITEM, 0)
    sAtendente = String(STRING_USUARIO_CODIGO, 0)
    sPromotor = String(STRING_VENDEDOR_NOME_REDUZIDO, 0)
    
    sFiltro = ""
    If objRelTRVDesviosVendSel.sResponsavel <> "" Then
        sFiltro = sFiltro & IIf(sFiltro <> "", " AND ", " ") & "Responsavel = '" & objRelTRVDesviosVendSel.sResponsavel & "' "
    End If
    If objRelTRVDesviosVendSel.sRespCallCenter <> "" Then
        sFiltro = sFiltro & IIf(sFiltro <> "", " AND ", " ") & "UsuRespCallCenter = '" & objRelTRVDesviosVendSel.sRespCallCenter & "' "
    End If
    If objRelTRVDesviosVendSel.iVendedor <> 0 Then
        sFiltro = sFiltro & IIf(sFiltro <> "", " AND ", " ") & "Vendedor = " & CStr(objRelTRVDesviosVendSel.iVendedor) & " "
    End If
    If objRelTRVDesviosVendSel.iRegiao <> 0 Then
        sFiltro = sFiltro & IIf(sFiltro <> "", " AND ", " ") & "Regiao = " & CStr(objRelTRVDesviosVendSel.iRegiao) & " "
    End If
    If sFiltro <> "" Then sFiltro = " WHERE " & sFiltro
    
    lErro = Comando_Executar(alComando(2), "SELECT Codigo, NomeReduzido, Responsavel, UsuRespCallCenter, NomeVendedor FROM ClientesAtend " & sFiltro, lCliente, sNomeCliente, sResponsavel, sAtendente, sPromotor)
    If lErro <> AD_SQL_SUCESSO Then gError 206520
        
    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(2))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206521
    
    Do While lErro <> AD_SQL_SEM_DADOS
    
        Set objItem = New ClassRelTRVDesviosVend
        
        lSeq = lSeq + 1
        
        objItem.lNumIntRel = lNumIntRel
        objItem.lCliente = lCliente
        objItem.sNomeCliente = sNomeCliente
        If sResponsavel <> "Call Center" Then
            objItem.sRespFunc = sPromotor
        Else
            objItem.sRespFunc = sAtendente
        End If
        objItem.sRespSetor = sResponsavel
        objItem.lSeq = lSeq
    
        For iIndice = 1 To 4
        
            Select Case iIndice
                Case 1 'Total
                    dtDataIni = DATA_NULA
                    dtDataFim = Date
                Case 2 'No mês
                    dtDataIni = CDate("01/" & Format(objRelTRVDesviosVendSel.iMes, "00") & "/" & Format(objRelTRVDesviosVendSel.iAno, "0000"))
                    dtDataFim = DateAdd("d", -1, DateAdd("m", 1, dtDataIni))
                Case 3 'Mês anterior
                    dtDataIni = DateAdd("m", -1, CDate("01/" & Format(objRelTRVDesviosVendSel.iMes, "00") & "/" & Format(objRelTRVDesviosVendSel.iAno, "0000")))
                    dtDataFim = DateAdd("d", -1, DateAdd("m", 1, dtDataIni))
                Case 4 'Ano anterior
                    dtDataIni = CDate("01/" & Format(objRelTRVDesviosVendSel.iMes, "00") & "/" & Format(objRelTRVDesviosVendSel.iAno - 1, "0000"))
                    dtDataFim = DateAdd("d", -1, DateAdd("m", 1, dtDataIni))
            End Select
        
            'Obtem o total de contatos no período com clientes inativos
            lErro = Comando_Executar(alComando(3), "SELECT COUNT(*), SUM(V.Valor) As ValorFat, SUM(V.ValorBruto) As ValorBruto, SUM(V.ValorBrutoComOCR - ValorCMAComOCR - ValorCMC - ValorCMR - ValorCMCC - ValorCME) AS ValorLiq, MIN(V.Data) AS PriVend, MAX(V.Data) AS UltVend  FROM TRVVouchers AS V WHERE V.Status <> 7 AND V.TipoDoc = 'VOU' AND V.ClienteVou = ? AND Data BETWEEN ? AND ? ", lQtd(iIndice), dValorFat(iIndice), dValorBruto(iIndice), dValorLiq(iIndice), dtDataMin(iIndice), dtDataMax(iIndice), objItem.lCliente, dtDataIni, dtDataFim)
            If lErro <> AD_SQL_SUCESSO Then gError 206522
        
            'Busca Primeiro
            lErro = Comando_BuscarPrimeiro(alComando(3))
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206523
                       
        Next
        
        objItem.dtPrimeiraCompra = dtDataMin(1)
        objItem.dtUltimaCompra = dtDataMax(1)
        
        dDias = DateDiff("d", objItem.dtPrimeiraCompra, Date)
        
        objItem.dTotalValorBruto = dValorBruto(1)
        objItem.dTotalValorFat = dValorFat(1)
        objItem.dTotalValorLiq = dValorLiq(1)
        objItem.lTotalQtdVou = lQtd(1)
        
        objItem.dValorBrutoNoMes = dValorBruto(2)
        objItem.dValorFatNoMes = dValorFat(2)
        objItem.dValorLiqNoMes = dValorFat(2)
        objItem.lQtdVouNoMes = lQtd(2)
        
        objItem.dValorBrutoMesAnt = dValorBruto(3)
        objItem.dValorFatMesAnt = dValorFat(3)
        objItem.dValorLiqMesAnt = dValorFat(3)
        objItem.lQtdVouNoMesAnt = lQtd(3)
        
        objItem.dValorBrutoMesAnoAnt = dValorBruto(4)
        objItem.dValorFatMesAnoAnt = dValorFat(4)
        objItem.dValorLiqMesAnoAnt = dValorFat(4)
        objItem.lQtdVouNoMesAnoAnt = lQtd(4)
        
        If objItem.lQtdVouNoMesAnoAnt <> 0 Then objItem.dDesvioQtdAno = (objItem.lQtdVouNoMes / objItem.lQtdVouNoMesAnoAnt) - 1
        If objItem.lQtdVouNoMesAnt <> 0 Then objItem.dDesvioQtdMes = (objItem.lQtdVouNoMes / objItem.lQtdVouNoMesAnt) - 1
        
        Select Case objRelTRVDesviosVendSel.iValorBase
            Case 1 'Faturável
                If objItem.dValorFatMesAnoAnt <> 0 Then objItem.dDesvioValorAno = (objItem.dValorFatNoMes / objItem.dValorFatMesAnoAnt) - 1
                If objItem.dValorFatMesAnt <> 0 Then objItem.dDesvioValorMes = (objItem.dValorFatNoMes / objItem.dValorFatMesAnt) / -1
            Case 2 'Bruto
                If objItem.dValorBrutoMesAnoAnt <> 0 Then objItem.dDesvioValorAno = (objItem.dValorBrutoNoMes / objItem.dValorBrutoMesAnoAnt) - 1
                If objItem.dValorBrutoMesAnt <> 0 Then objItem.dDesvioValorMes = (objItem.dValorBrutoNoMes / objItem.dValorBrutoMesAnt) - 1
            Case 3 'Líquido
                If objItem.dValorLiqMesAnoAnt <> 0 Then objItem.dDesvioValorAno = (objItem.dValorLiqNoMes / objItem.dValorLiqMesAnoAnt) - 1
                If objItem.dValorLiqMesAnt <> 0 Then objItem.dDesvioValorMes = (objItem.dValorLiqNoMes / objItem.dValorLiqMesAnt) - 1
        End Select
        
        If dDias <> 0 Then objItem.dQtdVouMedio = (objItem.lTotalQtdVou / dDias) * 30
        If dDias <> 0 Then objItem.dValorBrutoMedio = (objItem.dTotalValorBruto / dDias) * 30
        If dDias <> 0 Then objItem.dValorFatMedio = (objItem.dTotalValorFat / dDias) * 30
        If dDias <> 0 Then objItem.dValorLiqMedio = (objItem.dTotalValorLiq / dDias) * 30
        
        iExibe = DESMARCADO
        
        'Verifica se está dentro do desvio filtrado (Ignora desvio 0)
        Select Case objRelTRVDesviosVendSel.iDesvios
            Case 1 'Só maior
                If (objItem.dDesvioValorAno >= objRelTRVDesviosVendSel.dPercDesvAno Or objRelTRVDesviosVendSel.dPercDesvAno = 0) And (objItem.dDesvioValorMes >= objRelTRVDesviosVendSel.dPercDesvMes Or objRelTRVDesviosVendSel.dPercDesvMes = 0) Then
                    iExibe = MARCADO
                End If
            Case 2 'Só menor
                If (objItem.dDesvioValorAno <= -objRelTRVDesviosVendSel.dPercDesvAno Or objRelTRVDesviosVendSel.dPercDesvAno = 0) And (objItem.dDesvioValorMes <= -objRelTRVDesviosVendSel.dPercDesvMes Or objRelTRVDesviosVendSel.dPercDesvMes = 0) Then
                    iExibe = MARCADO
                End If
            Case 3 'Ambos
                If (Abs(objItem.dDesvioValorAno) >= Abs(objRelTRVDesviosVendSel.dPercDesvAno) Or objRelTRVDesviosVendSel.dPercDesvAno = 0) And (Abs(objItem.dDesvioValorMes) >= Abs(objRelTRVDesviosVendSel.dPercDesvMes) Or objRelTRVDesviosVendSel.dPercDesvMes = 0) Then
                    iExibe = MARCADO
                End If
        End Select
        
        'Se não tem vendas suficientes em um dos meses não exibe
        If objRelTRVDesviosVendSel.dMinVendVlr > objItem.dValorBrutoMesAnt And objRelTRVDesviosVendSel.dMinVendVlr > objItem.dValorBrutoMesAnoAnt And objRelTRVDesviosVendSel.dMinVendVlr > objItem.dValorBrutoNoMes Then
            iExibe = DESMARCADO
        End If
        If objRelTRVDesviosVendSel.iMinVendQtd > objItem.lQtdVouNoMes And objRelTRVDesviosVendSel.iMinVendQtd > objItem.lQtdVouNoMesAnt And objRelTRVDesviosVendSel.iMinVendQtd > objItem.lQtdVouNoMesAnoAnt Then
            iExibe = DESMARCADO
        End If
        
        'Se não está marcado para considerar clientes que não compraram no mês e não existe valor não exibe
        If objRelTRVDesviosVendSel.iTrazerCliNComp = MARCADO And objItem.dValorBrutoNoMes = 0 Then
            iExibe = MARCADO
        End If
        
        lErro = Comando_Executar(alComando(4), "INSERT INTO RelTRVDesviosVend( NumIntRel, Seq, Cliente, NomeCliente, " & _
                "ValorFatNoMes, ValorBrutoNoMes, ValorLiqNoMes, ValorFatMesAnt, ValorBrutoMesAnt, " & _
                "ValorLiqMesAnt, ValorFatMesAnoAnt, ValorBrutoMesAnoAnt, ValorLiqMesAnoAnt, TotalValorFat, " & _
                "TotalValorBruto, TotalValorLiq, ValorFatMedio, ValorBrutoMedio, ValorLiqMedio, " & _
                "DesvioValorMes, DesvioValorAno, QtdVouNoMes, QtdVouNoMesAnt, QtdVouNoMesAnoAnt, " & _
                "DesvioQtdMes, DesvioQtdAno, TotalQtdVou, QtdVouMedio, PrimeiraCompra, " & _
                "UltimaCompra, RespSetor, RespFunc,Exibir) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)", _
                objItem.lNumIntRel, objItem.lSeq, objItem.lCliente, objItem.sNomeCliente, _
                objItem.dValorFatNoMes, objItem.dValorBrutoNoMes, objItem.dValorLiqNoMes, objItem.dValorFatMesAnt, objItem.dValorBrutoMesAnt, _
                objItem.dValorLiqMesAnt, objItem.dValorFatMesAnoAnt, objItem.dValorBrutoMesAnoAnt, objItem.dValorLiqMesAnoAnt, objItem.dTotalValorFat, _
                objItem.dTotalValorBruto, objItem.dTotalValorLiq, objItem.dValorFatMedio, objItem.dValorBrutoMedio, objItem.dValorLiqMedio, _
                objItem.dDesvioValorMes, objItem.dDesvioValorAno, objItem.lQtdVouNoMes, objItem.lQtdVouNoMesAnt, objItem.lQtdVouNoMesAnoAnt, _
                objItem.dDesvioQtdMes, objItem.dDesvioQtdAno, objItem.lTotalQtdVou, objItem.dQtdVouMedio, objItem.dtPrimeiraCompra, _
                objItem.dtUltimaCompra, objItem.sRespSetor, objItem.sRespFunc, iExibe)
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206524
        
        'Busca Próximo
        lErro = Comando_BuscarProximo(alComando(2))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206525
        
    Loop

    RelTRVDesviosVend_Prepara1 = SUCESSO

    Exit Function

Erro_RelTRVDesviosVend_Prepara1:

    RelTRVDesviosVend_Prepara1 = gErr

    Select Case gErr
    
        Case ERRO_SEM_MENSAGEM

        Case 206519
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_RELTRVDESVIOSVENDSEL", gErr)
            
        Case 206520 To 206523, 206525
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_CLIENTES", gErr)

        Case 206524
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_RELTRVDESVIOSVEND", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 206526)

    End Select

    Exit Function

End Function

Public Function RelTRVEstPeriodo_Prepara(ByVal objRelTRVEstPeriodoSel As ClassRelTRVEstPeriodoSel) As Long

Dim lErro As Long
Dim lTransacao As Long
Dim alComando(1 To 20) As Long
Dim iIndice As Integer

On Error GoTo Erro_RelTRVEstPeriodo_Prepara

    'Abertura de transação
    lTransacao = Transacao_Abrir()
    If lTransacao = 0 Then gError 206527
    
    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 206528
    Next

    lErro = RelTRVEstPeriodo_Prepara1(alComando(), objRelTRVEstPeriodoSel)
    If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
    
    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    'Confirma a transação
    lErro = Transacao_Commit()
    If lErro <> AD_SQL_SUCESSO Then gError 206529

    RelTRVEstPeriodo_Prepara = SUCESSO

    Exit Function

Erro_RelTRVEstPeriodo_Prepara:

    RelTRVEstPeriodo_Prepara = gErr

    Select Case gErr

        Case 206527
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_TRANSACAO", gErr)

        Case 206528
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case ERRO_SEM_MENSAGEM

        Case 206529
            Call Rotina_Erro(vbOKOnly, "ERRO_COMMIT", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 206530)

    End Select
    
    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    'Desfaz Transação
    Call Transacao_Rollback

    Exit Function

End Function

Private Function RelTRVEstPeriodo_Prepara1(alComando() As Long, ByVal objRelTRVEstPeriodoSel As ClassRelTRVEstPeriodoSel) As Long

Dim lErro As Long
Dim iIndice As Integer
Dim lNumIntRel As Long
Dim objCab As New ClassRelTRVEstPeriodoCab
Dim objItem As ClassRelTRVEstPeriodoDet
Dim iTipo As Integer
Dim sTipoNome As String
Dim sCampoTipo As String, sCampoValor As String, sResponsavel As String
Dim bAchou As Boolean
Dim dValorBruto As Double, dValorFat As Double, dValorLiq As Double
Dim lQtdPax As Long, lQtdVou As Long, lTotalCliNovos As Long, lTotalVouCanc As Long
Dim sMaiorCliNome As String, lMaiorCliCod As Long
Dim sMaiorProdCod As String, sMaiorProdDesc As String, lMaiorProdQtd As Long
Dim dValorInvestido As Double, lSeq As Long, lQtdAg As Long
Dim lTipoContato As Long, lContatos As Long, lTotalCliInatReativ As Long
Dim dTC As Double, dTF As Double

On Error GoTo Erro_RelTRVEstPeriodo_Prepara1

    'Obter NumIntRel
    lErro = CF("Config_ObterNumInt", "TRVConfig", "NUM_INT_REL_TRVESTPER", lNumIntRel)
    If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
    
    objRelTRVEstPeriodoSel.lNumIntRel = lNumIntRel
    objCab.lNumIntRel = lNumIntRel
    
    lErro = Comando_Executar(alComando(1), "INSERT INTO RelTRVEstPeriodoSel( NumIntRel, DataGer, HoraGer, UsuGer, " & _
            "FiltroDataDe, FiltroDataAte) VALUES (?,?,?,?,?,?)", _
            objRelTRVEstPeriodoSel.lNumIntRel, Date, CDbl(Now), gsUsuario, _
            objRelTRVEstPeriodoSel.dtFiltroDataDe, objRelTRVEstPeriodoSel.dtFiltroDataAte)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206531
    
    'Estatística
    'Vendas
    sResponsavel = String(255, 0)
    lErro = Comando_Executar(alComando(6), "SELECT V.Responsavel,COUNT(DISTINCT ClienteVou) As QtdAg, SUM(V.Valor) As ValorFat, SUM(V.ValorBruto) As ValorBruto, SUM(V.ValorBrutoComOCR - ValorCMAComOCR - ValorCMC - ValorCMR - ValorCMCC - ValorCME) AS ValorLiq, COUNT(*) As QtdVou, SUM(V.QtdPax) AS QtdPax, SUM(ValorAporte) AS ValorInvestido, SUM(TC), SUM(TF) FROM TRVVouchersResp AS V WHERE V.Data BETWEEN ? AND ? GROUP BY V.Responsavel", sResponsavel, lQtdAg, dValorFat, dValorBruto, dValorLiq, lQtdVou, lQtdPax, dValorInvestido, dTC, dTF, objRelTRVEstPeriodoSel.dtFiltroDataDe, objRelTRVEstPeriodoSel.dtFiltroDataAte)
    If lErro <> AD_SQL_SUCESSO Then gError 206532

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(6))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206533

    Do While lErro <> AD_SQL_SEM_DADOS
    
        If sResponsavel = "Call Center" Then
            objCab.dCValorBruto = dValorBruto
            objCab.dCValorFat = dValorFat
            objCab.dCValorLiq = dValorLiq
            objCab.dCValorInvestido = dValorInvestido
            objCab.lCQtdPax = lQtdPax
            objCab.lCQtdVou = lQtdVou
            objCab.lCQtdAg = lQtdAg
            'If dValorBruto <> 0 Then objCab.dCPercDescMedio = 1 - (dValorLiq / dValorBruto)
            If dTF <> 0 Then objCab.dCPercDescMedio = 1 - (dTC / dTF)
        Else
            objCab.dPValorBruto = dValorBruto
            objCab.dPValorFat = dValorFat
            objCab.dPValorLiq = dValorLiq
            objCab.dPValorInvestido = dValorInvestido
            objCab.lPQtdPax = lQtdPax
            objCab.lPQtdVou = lQtdVou
            objCab.lPQtdAg = lQtdAg
            'If dValorBruto <> 0 Then objCab.dPPercDescMedio = 1 - (dValorLiq / dValorBruto)
            If dTF <> 0 Then objCab.dPPercDescMedio = 1 - (dTC / dTF)
        End If
        
        'Busca Próximo
        lErro = Comando_BuscarProximo(alComando(6))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206534
        
    Loop

    'Clientes Novos
    sResponsavel = String(255, 0)

    lErro = Comando_Executar(alComando(7), "SELECT A.Responsavel , COUNT(DISTINCT A.Codigo) FROM ClientesAtend AS A, ClientesDataCad AS C WHERE A.Codigo = C.Codigo AND A.Tipo IN (2,3,4,5,6,13,14,15) AND C.DataCadastro BETWEEN ? AND ? GROUP BY A.Responsavel", sResponsavel, lTotalCliNovos, objRelTRVEstPeriodoSel.dtFiltroDataDe, objRelTRVEstPeriodoSel.dtFiltroDataAte)
    If lErro <> AD_SQL_SUCESSO Then gError 206535

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(7))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206536

    Do While lErro <> AD_SQL_SEM_DADOS
    
        If sResponsavel = "Call Center" Then
            objCab.lCCliNovos = lTotalCliNovos
        Else
            objCab.lPCliNovos = lTotalCliNovos
        End If
        
        'Busca Próximo
        lErro = Comando_BuscarProximo(alComando(7))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206537
        
    Loop
    
    'Obtem o total cancelado no período
    sResponsavel = String(255, 0)

    lErro = Comando_Executar(alComando(8), "SELECT C.Responsavel, COUNT(*) AS QtdVou FROM TrvVouchers AS V, ClientesAtend AS C WHERE V.ClienteVou = C.Codigo AND V.TipoDoc = 'VOU' AND V.Status = 7 AND V.Data BETWEEN ? AND ? GROUP BY C.Responsavel", sResponsavel, lTotalVouCanc, objRelTRVEstPeriodoSel.dtFiltroDataDe, objRelTRVEstPeriodoSel.dtFiltroDataAte)
    If lErro <> AD_SQL_SUCESSO Then gError 206538

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(8))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206539

    Do While lErro <> AD_SQL_SEM_DADOS
    
        If sResponsavel = "Call Center" Then
            If objCab.lCQtdVou + lTotalVouCanc <> 0 Then objCab.dCPercVouCanc = lTotalVouCanc / (objCab.lCQtdVou + lTotalVouCanc)
        Else
            If objCab.lPQtdVou + lTotalVouCanc <> 0 Then objCab.dPPercVouCanc = lTotalVouCanc / (objCab.lPQtdVou + lTotalVouCanc)
        End If
        
        'Busca Próximo
        lErro = Comando_BuscarProximo(alComando(8))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206540
        
    Loop

    'Maior Cliente no período
    For iIndice = 1 To 2
        
        If iIndice = 1 Then
            sCampoTipo = "Call Center"
        Else
            sCampoTipo = "Promotor"
        End If
        
        sMaiorCliNome = String(STRING_CLIENTE_NOME_REDUZIDO, 0)
    
        lErro = Comando_Executar(alComando(9), "SELECT C.Codigo, C.NomeReduzido, SUM(V.Valor) As ValorFat, SUM(V.ValorBruto) As ValorBruto, SUM(V.ValorBrutoComOCR - ValorCMAComOCR - ValorCMC - ValorCMR - ValorCMCC - ValorCME) AS ValorLiq FROM TrvVouchers AS V, ClientesAtend AS C WHERE V.ClienteVou = C.Codigo AND V.TipoDoc = 'VOU' AND V.Status = 7 AND C.Responsavel = ? AND V.Data BETWEEN ? AND ? GROUP BY C.Codigo, C.NomeReduzido ORDER BY Sum(ValorBruto) DESC", lMaiorCliCod, sMaiorCliNome, dValorFat, dValorBruto, dValorLiq, sCampoTipo, objRelTRVEstPeriodoSel.dtFiltroDataDe, objRelTRVEstPeriodoSel.dtFiltroDataAte)
        If lErro <> AD_SQL_SUCESSO Then gError 206541
    
        'Busca Primeiro
        lErro = Comando_BuscarPrimeiro(alComando(9))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206542
        
        If lErro <> AD_SQL_SEM_DADOS Then
            If iIndice = 1 Then
                objCab.dCMaiorCliValorBruto = dValorBruto
                objCab.dCMaiorCliValorFat = dValorFat
                objCab.dCMaiorCliValorLiq = dValorLiq
                objCab.lCMaiorCliCod = lMaiorCliCod
                objCab.sCMaiorCliNome = sMaiorCliNome
            Else
                objCab.dPMaiorCliValorBruto = dValorBruto
                objCab.dPMaiorCliValorFat = dValorFat
                objCab.dPMaiorCliValorLiq = dValorLiq
                objCab.lPMaiorCliCod = lMaiorCliCod
                objCab.sPMaiorCliNome = sMaiorCliNome
            End If
        End If
        
    Next
    
    'Produto com maior saída no período
    For iIndice = 1 To 2
        
        If iIndice = 1 Then
            sCampoTipo = "Call Center"
        Else
            sCampoTipo = "Promotor"
        End If
        
        sMaiorProdCod = String(STRING_PRODUTO, 0)
        sMaiorProdDesc = String(STRING_PRODUTO_DESCRICAO, 0)
    
        lErro = Comando_Executar(alComando(10), "SELECT P.Codigo, P.Descricao, COUNT(*), SUM(V.Valor) As ValorFat, SUM(V.ValorBruto) As ValorBruto, SUM(V.ValorBrutoComOCR - ValorCMAComOCR - ValorCMC - ValorCMR - ValorCMCC - ValorCME) AS ValorLiq FROM TrvVouchers AS V, ClientesAtend AS C, Produtos AS P WHERE V.ClienteVou = C.Codigo AND V.TipoDoc = 'VOU' AND V.Status <> 7 AND P.Codigo = V.Produto AND C.Responsavel = ? AND V.Data BETWEEN ? AND ? GROUP BY P.Codigo, P.Descricao ORDER BY COUNT(*) DESC", sMaiorProdCod, sMaiorProdDesc, lMaiorProdQtd, dValorFat, dValorBruto, dValorLiq, sCampoTipo, objRelTRVEstPeriodoSel.dtFiltroDataDe, objRelTRVEstPeriodoSel.dtFiltroDataAte)
        If lErro <> AD_SQL_SUCESSO Then gError 206543
    
        'Busca Primeiro
        lErro = Comando_BuscarPrimeiro(alComando(10))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206544
        
        If lErro <> AD_SQL_SEM_DADOS Then
            If iIndice = 1 Then
                objCab.lCMaiorProdQtd = lMaiorProdQtd
                objCab.sCMaiorProdCod = sMaiorProdCod
                objCab.sCMaiorProdDesc = sMaiorProdDesc
                objCab.dCMaiorProdVlrBruto = dValorBruto
                objCab.dCMaiorProdVlrFat = dValorFat
                objCab.dCMaiorProdVlrLiq = dValorLiq
            Else
                objCab.lPMaiorProdQtd = lMaiorProdQtd
                objCab.sPMaiorProdCod = sMaiorProdCod
                objCab.sPMaiorProdDesc = sMaiorProdDesc
                objCab.dPMaiorProdVlrBruto = dValorBruto
                objCab.dPMaiorProdVlrFat = dValorFat
                objCab.dPMaiorProdVlrLiq = dValorLiq
            End If
        End If
        
    Next
    
    'Obtém os contatos
    sResponsavel = String(255, 0)
    
    lErro = Comando_Executar(alComando(11), "SELECT C.Responsavel, R.Tipo, COUNT(*) FROM RelacionamentoClientes As R, ClientesAtend As C WHERE C.Codigo = R.Cliente AND R.Data BETWEEN ? AND ? GROUP BY C.Responsavel, R.Tipo", sResponsavel, lTipoContato, lContatos, objRelTRVEstPeriodoSel.dtFiltroDataDe, objRelTRVEstPeriodoSel.dtFiltroDataAte)
    If lErro <> AD_SQL_SUCESSO Then gError 206545

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(11))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206546

    Do While lErro <> AD_SQL_SEM_DADOS
    
        If sResponsavel = "Call Center" Then
            Select Case lTipoContato
                Case 20
                    objCab.lCContatosCobr = objCab.lCContatosCobr + lContatos
                Case 21
                    objCab.lCContatosCall = objCab.lCContatosCall + lContatos
                Case Else
                    objCab.lCContatosOutros = objCab.lCContatosOutros + lContatos
            End Select
        Else
            Select Case lTipoContato
                Case 20
                    objCab.lPContatosCobr = objCab.lPContatosCobr + lContatos
                Case 21
                    objCab.lPContatosCall = objCab.lPContatosCall + lContatos
                Case Else
                    objCab.lPContatosOutros = objCab.lPContatosOutros + lContatos
            End Select
        End If
        
        'Busca Próximo
        lErro = Comando_BuscarProximo(alComando(11))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206547
        
    Loop
    
    lErro = RelTRVCliInativos_Grava(alComando(12), alComando(13), alComando(14), alComando(15), TRV_TIPOREL_ESTATISTICA, lNumIntRel, objRelTRVEstPeriodoSel.dtFiltroDataDe, objRelTRVEstPeriodoSel.dtFiltroDataAte, DESMARCADO)
    If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM

    'Obtem os clientes reativados
    sResponsavel = String(255, 0)
    
    lErro = Comando_Executar(alComando(16), "SELECT C.Responsavel, COUNT(*) FROM RelTRVCliInativos AS R, ClientesAtend AS C WHERE R.TipoRel = ? AND R.NumIntRel = ? AND C.Codigo = R.Cliente AND R.DataUltCompraNoPer <> ? GROUP BY C.Responsavel", sResponsavel, lTotalCliInatReativ, TRV_TIPOREL_ESTATISTICA, lNumIntRel, DATA_NULA)
    If lErro <> AD_SQL_SUCESSO Then gError 206548

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(16))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206549

    Do While lErro <> AD_SQL_SEM_DADOS
    
        If sResponsavel = "Call Center" Then
            objCab.lCCliReativ = lTotalCliInatReativ
        Else
            objCab.lPCliReativ = lTotalCliInatReativ
        End If
        
        'Busca Próximo
        lErro = Comando_BuscarProximo(alComando(16))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206550
        
    Loop

    lErro = Comando_Executar(alComando(17), "INSERT INTO RelTRVEstPeriodoCab( NumIntRel, CQtdAg, PQtdAg, CQtdVou, " & _
            "PQtdVou, CQtdPax, PQtdPax, CValorFat, PValorFat, " & _
            "CValorLiq, PValorLiq, CValorBruto, PValorBruto, CValorInvestido, " & _
            "PValorInvestido, CCliNovos, PCliNovos, CCliReativ, PCliReativ, " & _
            "CPercDescMedio, PPercDescMedio, CMaiorProdCod, PMaiorProdCod, CMaiorProdDesc, " & _
            "PMaiorProdDesc, CMaiorProdQtd, PMaiorProdQtd, CMaiorProdVlrFat, PMaiorProdVlrFat, " & _
            "CMaiorProdVlrLiq, PMaiorProdVlrLiq, CMaiorProdVlrBruto, PMaiorProdVlrBruto, CContatosCall, " & _
            "PContatosCall, CContatosCobr, PContatosCobr, CContatosOutros, PContatosOutros, " & _
            "CMaiorCliCod, PMaiorCliCod, CMaiorCliNome, PMaiorCliNome, CMaiorCliValorFat, " & _
            "PMaiorCliValorFat, CMaiorCliValorLiq, PMaiorCliValorLiq, CMaiorCliValorBruto, PMaiorCliValorBruto, " & _
            "CPercVouCanc, PPercVouCanc) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)", _
            objCab.lNumIntRel, objCab.lCQtdAg, objCab.lPQtdAg, objCab.lCQtdVou, _
            objCab.lPQtdVou, objCab.lCQtdPax, objCab.lPQtdPax, objCab.dCValorFat, objCab.dPValorFat, _
            objCab.dCValorLiq, objCab.dPValorLiq, objCab.dCValorBruto, objCab.dPValorBruto, objCab.dCValorInvestido, _
            objCab.dPValorInvestido, objCab.lCCliNovos, objCab.lPCliNovos, objCab.lCCliReativ, objCab.lPCliReativ, _
            objCab.dCPercDescMedio, objCab.dPPercDescMedio, objCab.sCMaiorProdCod, objCab.sPMaiorProdCod, objCab.sCMaiorProdDesc, _
            objCab.sPMaiorProdDesc, objCab.lCMaiorProdQtd, objCab.lPMaiorProdQtd, objCab.dCMaiorProdVlrFat, objCab.dPMaiorProdVlrFat, _
            objCab.dCMaiorProdVlrLiq, objCab.dPMaiorProdVlrLiq, objCab.dCMaiorProdVlrBruto, objCab.dPMaiorProdVlrBruto, objCab.lCContatosCall, _
            objCab.lPContatosCall, objCab.lCContatosCobr, objCab.lPContatosCobr, objCab.lCContatosOutros, objCab.lPContatosOutros, _
            objCab.lCMaiorCliCod, objCab.lPMaiorCliCod, objCab.sCMaiorCliNome, objCab.sPMaiorCliNome, objCab.dCMaiorCliValorFat, _
            objCab.dPMaiorCliValorFat, objCab.dCMaiorCliValorLiq, objCab.dPMaiorCliValorLiq, objCab.dCMaiorCliValorBruto, objCab.dPMaiorCliValorBruto, _
            objCab.dCPercVouCanc, objCab.dPPercVouCanc)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206551

    'Comparativo
    For iIndice = 1 To 4
        iTipo = iIndice
        Select Case iTipo
            Case 1
                sTipoNome = "Mês a Mês"
                sCampoTipo = "AnoMes"
            Case 2
                If objRelTRVEstPeriodoSel.iExibirCidades = MARCADO Then
                    sTipoNome = "Por Cidade"
                    sCampoTipo = "FilCidade"
                Else
                    sTipoNome = "Por Filial Empresa"
                    sCampoTipo = "FilialEmpresa"
                End If
            Case 3
                sTipoNome = "Por Produto"
                sCampoTipo = "DescProd"
            Case 4
                sTipoNome = "Por Marca"
                sCampoTipo = "Marca"
        End Select
        
        sCampoValor = String(255, 0)
        sResponsavel = String(255, 0)
        
        lErro = Comando_Executar(alComando(1 + iIndice), "SELECT V.Responsavel, " & sCampoTipo & ", SUM(V.Valor) As ValorFat, SUM(V.ValorBruto) As ValorBruto, SUM(V.ValorBrutoComOCR - ValorCMAComOCR - ValorCMC - ValorCMR - ValorCMCC - ValorCME) AS ValorLiq, COUNT(*) As QtdVou, SUM(V.QtdPax) AS QtdPax, SUM(ValorAporte) AS ValorInvestido, SUM(TC), SUM(TF) FROM TRVVouchersResp AS V WHERE V.Data BETWEEN ? AND ? AND " & sCampoTipo & " <> '' GROUP BY V.Responsavel, " & sCampoTipo & " ORDER BY " & sCampoTipo, sResponsavel, sCampoValor, dValorFat, dValorBruto, dValorLiq, lQtdVou, lQtdPax, dValorInvestido, dTC, dTF, objRelTRVEstPeriodoSel.dtFiltroDataDe, objRelTRVEstPeriodoSel.dtFiltroDataAte)
        If lErro <> AD_SQL_SUCESSO Then gError 206552
    
        'Busca Primeiro
        lErro = Comando_BuscarPrimeiro(alComando(1 + iIndice))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206553
            
        Do While lErro <> AD_SQL_SEM_DADOS
        
            bAchou = False
            For Each objItem In objRelTRVEstPeriodoSel.colItens
                If objItem.iTipo = iTipo And objItem.sTextoLinha = sCampoValor Then
                    bAchou = True
                    Exit For
                End If
            Next
            If Not bAchou Then
                Set objItem = New ClassRelTRVEstPeriodoDet
                objRelTRVEstPeriodoSel.colItens.Add objItem
                objItem.iTipo = iTipo
                objItem.sTipoNome = sTipoNome
                objItem.sTextoLinha = sCampoValor
                objItem.lNumIntRel = lNumIntRel
            End If
            
            If sResponsavel = "Call Center" Then
                objItem.dCValorBruto = dValorBruto
                objItem.dCValorFat = dValorFat
                objItem.dCValorLiq = dValorLiq
                objItem.dCValorInvestido = dValorInvestido
                
                objItem.lCQtdPax = lQtdPax
                objItem.lCQtdVou = lQtdVou
                
                'If dValorBruto <> 0 Then objItem.dCPercDescMedio = 1 - (dValorLiq / dValorBruto)
                If dTF <> 0 Then objItem.dCPercDescMedio = 1 - (dTC / dTF)
                
            Else
                objItem.dPValorBruto = dValorBruto
                objItem.dPValorFat = dValorFat
                objItem.dPValorLiq = dValorLiq
                objItem.dPValorInvestido = dValorInvestido
                
                objItem.lPQtdPax = lQtdPax
                objItem.lPQtdVou = lQtdVou
                
                'If dValorBruto <> 0 Then objItem.dPPercDescMedio = 1 - (dValorLiq / dValorBruto)
                If dTF <> 0 Then objItem.dPPercDescMedio = 1 - (dTC / dTF)
            End If
            
           'Busca Próximo
            lErro = Comando_BuscarProximo(alComando(1 + iIndice))
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206554
    
        Loop
           
    Next

    For Each objItem In objRelTRVEstPeriodoSel.colItens
    
        lSeq = lSeq + 1
        objItem.lSeq = lSeq
        
        If objItem.lCQtdPax + objItem.lPQtdPax <> 0 Then
            objItem.dCPercPax = objItem.lCQtdPax / (objItem.lCQtdPax + objItem.lPQtdPax)
            objItem.dPPercPax = 1 - objItem.dCPercPax
        End If
        If objItem.dCValorBruto + objItem.dPValorBruto <> 0 Then
            objItem.dCPercValorBruto = objItem.dCValorBruto / (objItem.dCValorBruto + objItem.dPValorBruto)
            objItem.dPPercValorBruto = 1 - objItem.dCPercValorBruto
        End If
        If objItem.dCValorFat + objItem.dPValorFat <> 0 Then
            objItem.dCPercValorFat = objItem.dCValorFat / (objItem.dCValorFat + objItem.dPValorFat)
            objItem.dPPercValorFat = 1 - objItem.dCPercValorFat
        End If
        If objItem.dCValorLiq + objItem.dPValorLiq <> 0 Then
            objItem.dCPercValorLiq = objItem.dCValorLiq / (objItem.dCValorLiq + objItem.dPValorLiq)
            objItem.dPPercValorLiq = 1 - objItem.dCPercValorLiq
        End If
        If objItem.lCQtdVou + objItem.lPQtdVou <> 0 Then
            objItem.dCPercVou = objItem.lCQtdVou / (objItem.lCQtdVou + objItem.lPQtdVou)
            objItem.dPPercVou = 1 - objItem.dCPercVou
        End If
        
        lErro = Comando_Executar(alComando(18), "INSERT INTO RelTRVEstPeriodoDet( NumIntRel, Seq, Tipo, TipoNome, " & _
                "TextoLinha, PQtdVou, PPercVou, PQtdPax, PPercPax, " & _
                "PValorFat, PPercValorFat, PValorLiq, PPercValorLiq, PValorBruto, " & _
                "PPercValorBruto, PValorInvestido, PPercDescMedio, CQtdVou, CPercVou, " & _
                "CQtdPax, CPercPax, CValorFat, CPercValorFat, CValorLiq, " & _
                "CPercValorLiq, CValorBruto, CPercValorBruto, CValorInvestido, CPercDescMedio) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)", _
                objItem.lNumIntRel, objItem.lSeq, objItem.iTipo, objItem.sTipoNome, _
                objItem.sTextoLinha, objItem.lPQtdVou, objItem.dPPercVou, objItem.lPQtdPax, objItem.dPPercPax, _
                objItem.dPValorFat, objItem.dPPercValorFat, objItem.dPValorLiq, objItem.dPPercValorLiq, objItem.dPValorBruto, _
                objItem.dPPercValorBruto, objItem.dPValorInvestido, objItem.dPPercDescMedio, objItem.lCQtdVou, objItem.dCPercVou, _
                objItem.lCQtdPax, objItem.dCPercPax, objItem.dCValorFat, objItem.dCPercValorFat, objItem.dCValorLiq, _
                objItem.dCPercValorLiq, objItem.dCValorBruto, objItem.dCPercValorBruto, objItem.dCValorInvestido, objItem.dCPercDescMedio)
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206555

    Next
    
    RelTRVEstPeriodo_Prepara1 = SUCESSO

    Exit Function

Erro_RelTRVEstPeriodo_Prepara1:

    RelTRVEstPeriodo_Prepara1 = gErr

    Select Case gErr
    
        Case ERRO_SEM_MENSAGEM

        Case 206531
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_RelTRVESTPERIODOSEL", gErr)

        Case 206532 To 206550, 206552 To 206554
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_CLIENTES", gErr)

        Case 206551
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_RelTRVESTPERIODOCAB", gErr)

        Case 206555
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_RelTRVESTPERIODODET", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 206556)

    End Select

    Exit Function

End Function


Public Function CamposGenericos_ValidaExclusao_TRVEmiCargo() As Long
'Verifica se é válida a exclusão de valores para o campo Tipo

Dim lComando As Long
Dim lErro As Long
Dim lCargo As Long, lCliente  As Long, lEmissor  As Long

On Error GoTo Erro_CamposGenericos_ValidaExclusao_TRVEmiCargo
    
    'Abre comando
    lComando = Comando_Abrir()
    If lComando = 0 Then gError 190550
    
    'Busca nas ocorrências origens que não existam na tabela CamposGenericos Valores
    lErro = Comando_Executar(lComando, "SELECT Cliente, FornEmissor, Cargo FROM TRVCliEmissores WHERE Cargo NOT IN (SELECT CodValor FROM CamposGenericosValores WHERE CodCampo = ?) ", lCliente, lEmissor, lCargo, CAMPOSGENERICOS_TRVEMICARGO)
    If lErro <> AD_SQL_SUCESSO Then gError 190551
    
    'Posiciona no primeiro registro
    lErro = Comando_BuscarPrimeiro(lComando)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 190552
    
    'Se encontrou algum registro => erro de inconsistência
    If lErro = AD_SQL_SUCESSO Then gError 190553
    
    'Fecha comando
    Call Comando_Fechar(lComando)
    
    CamposGenericos_ValidaExclusao_TRVEmiCargo = SUCESSO
    
    Exit Function
    
Erro_CamposGenericos_ValidaExclusao_TRVEmiCargo:

    CamposGenericos_ValidaExclusao_TRVEmiCargo = gErr
    
    Select Case gErr
    
        Case 190550
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)
        
        Case 190551, 190552
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_CAMPOSGENERICOS", gErr, CAMPOSGENERICOS_TRVEMICARGO)
        
        Case 190553
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_CARGO_CLIEMI", gErr, lCargo, lEmissor, lCliente)
            
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error$, 190554)
    
    End Select

    'Fecha comando
    Call Comando_Fechar(lComando)

End Function

Public Function TRVVouEmiCI_Acerta(ByVal objVou As ClassTRVVouchers) As Long

Dim lErro As Long
Dim alComando(0 To 14) As Long
Dim iIndice As Integer
Dim objVouBD As New ClassTRVVouchers
Dim objVouEmiCI As ClassTRVVouEmiCI
Dim objVouEmiCIBD As ClassTRVVouEmiCI
Dim colNovos As New Collection
Dim colExcluidos As New Collection
Dim colAlterados As New Collection
Dim bAchou As Boolean, dPercCITotal As Double, dPercCITotalBD As Double
Dim lContador As Long
Dim iStatus As Integer, iTipoLiberacao As Integer, lNumIntDocLiberacao As Long
Dim iStatusCMCC As Integer, iTipoLiberacaoCMCC As Integer, lNumIntDocLiberacaoCMCC As Long
Dim iStatusOVER As Integer, iTipoLiberacaoOVER As Integer, lNumIntDocLiberacaoOVER As Long
Dim dValorOVER As Double, dValorOVERAnt As Double, dValorAux As Double

On Error GoTo Erro_TRVVouEmiCI_Acerta

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 206582
    Next
    
    objVouBD.lNumVou = objVou.lNumVou
    objVouBD.sSerie = objVou.sSerie
    objVouBD.sTipVou = objVou.sTipVou
    objVouBD.sTipoDoc = objVou.sTipoDoc
    
    'Le todas as informações do voucher
    lErro = CF("TRVVouchers_Le", objVouBD)
    If lErro <> SUCESSO And lErro <> ERRO_LEITURA_SEM_DADOS Then gError ERRO_SEM_MENSAGEM
    
    lErro = CF("TRVVouEmiCI_Le", objVouBD)
    If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
    
    dValorAux = IIf(objVouBD.iCartao = MARCADO, objVouBD.dValorBaseComis, objVouBD.dValorBruto)
    
    dPercCITotal = 0
    For Each objVouEmiCI In objVou.colEmiCI
        bAchou = False
        For Each objVouEmiCIBD In objVouBD.colEmiCI
            If objVouEmiCI.lFornEmissor = objVouEmiCIBD.lFornEmissor Then
                bAchou = True
                objVouEmiCI.dPercCIAnt = objVouEmiCIBD.dPercCI
                colAlterados.Add objVouEmiCI
                Exit For
            End If
        Next
        If Not bAchou Then
            colNovos.Add objVouEmiCI
        End If
        dPercCITotal = dPercCITotal + objVouEmiCI.dPercCI
    Next
    
    If dPercCITotal > 1 Then gError 206583
    
    For Each objVouEmiCIBD In objVouBD.colEmiCI
        bAchou = False
        For Each objVouEmiCI In objVou.colEmiCI
            If objVouEmiCI.lFornEmissor = objVouEmiCIBD.lFornEmissor Then
                bAchou = True
                Exit For
            End If
        Next
        If Not bAchou Then
            colExcluidos.Add objVouEmiCIBD
        End If
        dPercCITotalBD = dPercCITotalBD + objVouEmiCIBD.dPercCI
    Next
        
    lErro = Comando_Executar(alComando(0), "DELETE TRVVouEmiCI WHERE NumVou = ? AND Serie = ? AND TipVou = ?", objVou.lNumVou, objVou.sSerie, objVou.sTipVou)
    If lErro <> AD_SQL_SUCESSO Then gError 206584

    For Each objVouEmiCI In objVou.colEmiCI
        lErro = Comando_Executar(alComando(1), "INSERT INTO TRVVouEmiCI (NumVou, Serie, TipVou, FornEmissor, PercCI) VALUES (?,?,?,?,?) ", objVou.lNumVou, objVou.sSerie, objVou.sTipVou, objVouEmiCI.lFornEmissor, objVouEmiCI.dPercCI)
        If lErro <> AD_SQL_SUCESSO Then gError 206585
    Next

    'Pega o último sequencial do último item gerado para esse voucher
    lErro = TRVVou_Gera_Comis_Obtem_Seq(alComando(2), objVou, lContador)
    If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
    
    iStatus = TRV_VOU_INFO_STATUS_BLOQUEADO
    
    'Verifica se o a receber já está baixado, se sim coloca o status como liberado e guarda o tipo de liberação e o numintbaixa
    'O do OVER que é configurado de acordo com a agência (De Cartão é liberado direto)
    lErro = TRVVou_Gera_Comis_Obtem_Status(alComando(10), alComando(11), objVou, iStatus, iTipoLiberacao, lNumIntDocLiberacao, iStatusCMCC, iTipoLiberacaoCMCC, lNumIntDocLiberacaoCMCC, iStatusOVER, iTipoLiberacaoOVER, lNumIntDocLiberacaoOVER)
    If lErro <> SUCESSO Then gError 198162

    For Each objVouEmiCI In colExcluidos
        'Estorna a C.I. por emissor
        lErro = TRVVou_Gera_Comis_Trata_Estorno3(alComando(3), alComando(4), alComando(5), alComando(6), alComando(7), objVou, Date, "Exclusão de C.I. do emissor " & CStr(objVouEmiCI.lFornEmissor), TRV_TIPODOC_OVER_TEXTO, objVouEmiCI.lFornEmissor, TRV_CLIENTEINFO_TIPO_FORNECEDOR, lContador)
        If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
    Next
    For Each objVouEmiCI In colNovos
        'Insere as comissões novas
        dValorOVER = dValorAux * (objVouBD.dComissaoEmissor * objVouEmiCI.dPercCI)
        lErro = TRVVou_Gera_Comis_Insere_Info(alComando(12), alComando(13), alComando(14), objVou, TRV_TIPODOC_OVER_TEXTO, Date, dValorOVER, "Inclusão de C.I. do emissor " & CStr(objVouEmiCI.lFornEmissor), iStatusOVER, iTipoLiberacaoOVER, lNumIntDocLiberacaoOVER, 0, TRV_CLIENTEINFO_TIPO_FORNECEDOR, objVouEmiCI.lFornEmissor, TRV_TIPO_ESTORNO_LANC_NORMAL, 0, lContador, , MARCADO)
        If lErro <> AD_SQL_SUCESSO Then gError ERRO_SEM_MENSAGEM
    Next
    For Each objVouEmiCI In colAlterados
        'Insere as comissões novas
        dValorOVER = dValorAux * (objVouBD.dComissaoEmissor * objVouEmiCI.dPercCI)
        dValorOVERAnt = dValorAux * (objVouBD.dComissaoEmissor * objVouEmiCI.dPercCIAnt)
        lErro = TRVVou_Gera_Comis_Insere_Info(alComando(12), alComando(13), alComando(14), objVou, TRV_TIPODOC_OVER_TEXTO, Date, dValorOVER - dValorOVERAnt, "Alteração do % de C.I.: Anterior: " & Format(objVouEmiCI.dPercCIAnt, "PERCENT") & " Atual: " & Format(objVouEmiCI.dPercCI, "PERCENT"), iStatusOVER, iTipoLiberacaoOVER, lNumIntDocLiberacaoOVER, 0, TRV_CLIENTEINFO_TIPO_FORNECEDOR, objVouEmiCI.lFornEmissor, TRV_TIPO_ESTORNO_LANC_NORMAL, 0, lContador, , MARCADO)
        If lErro <> AD_SQL_SUCESSO Then gError ERRO_SEM_MENSAGEM
    Next
    'Se teve alteração no total de C.I. tem que acertar em cima com os dados que estavam no BD
    'Se houve alterações no emissor ou em seu percentual os acertos vão pela rotina normal
    If Abs(dPercCITotalBD - dPercCITotal) > DELTA_VALORMONETARIO Then
        dValorOVER = dValorAux * (objVouBD.dComissaoEmissor * (1 - dPercCITotal))
        dValorOVERAnt = dValorAux * (objVouBD.dComissaoEmissor * (1 - dPercCITotalBD))
        lErro = TRVVou_Gera_Comis_Insere_Info(alComando(12), alComando(13), alComando(14), objVou, TRV_TIPODOC_OVER_TEXTO, Date, dValorOVER - dValorOVERAnt, "Alteração do % Total de C.I.: Anterior: " & Format(dPercCITotalBD, "PERCENT") & " Atual: " & Format(dPercCITotal, "PERCENT"), iStatusOVER, iTipoLiberacaoOVER, lNumIntDocLiberacaoOVER, 0, TRV_CLIENTEINFO_TIPO_FORNECEDOR, objVou.lEmissor, TRV_TIPO_ESTORNO_LANC_NORMAL, 0, lContador)
        If lErro <> AD_SQL_SUCESSO Then gError ERRO_SEM_MENSAGEM
    End If
    
    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVVouEmiCI_Acerta = SUCESSO

    Exit Function

Erro_TRVVouEmiCI_Acerta:

    TRVVouEmiCI_Acerta = gErr

    Select Case gErr

        Case 206582
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)
            
        Case 206583
            Call Rotina_Erro(vbOKOnly, "ERRO_PERC_CI_MAIOR_1", gErr)
            
        Case 206584
            Call Rotina_Erro(vbOKOnly, "ERRO_DELETE_TRVVOUEMICI", gErr)
            
        Case 206585
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERT_TRVVOUEMICI", gErr)
            
        Case ERRO_SEM_MENSAGEM
        
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 206586)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Private Function TRVVou_Gera_Comis_Trata_Estorno3(ByVal lComando1 As Long, ByVal lComando2 As Long, ByVal lComando3 As Long, ByVal lComando4 As Long, ByVal lComando5 As Long, ByVal objVou As ClassTRVVouchers, ByVal dtData As Date, ByVal sHistorico As String, ByVal sTipoDocEstornado As String, ByVal lCliForn As Long, ByVal iTipoCliForn As Integer, lContador As Long, Optional ByVal dFatorEstorno As Double = 1) As Long
'Extorna a comissão indireta

Dim lErro As Long
Dim lNumIntDoc As Long
Dim dValorEstornar As Double
Dim dValorEstornarAux As Double
Dim iStatus As Integer
Dim iTipoLiberacao As Integer
Dim lNumIntDocLiberacao As Long
Dim lNumIntDocVouInfo As Long
Dim lNumIntDocEstorno As Long
Dim lSeq As Long
Dim objVouInfo As ClassTRVVoucherInfoN
Dim objVouInfoAux As ClassTRVVoucherInfoN
Dim colVouInfoItens As Collection
Dim colcolVouInfoItens As New Collection
Dim colVouInfoGrupado As New Collection
Dim bAchou As Boolean
Dim iIndice As Integer, iIndireta As Integer

On Error GoTo Erro_TRVVou_Gera_Comis_Trata_Estorno3

    lErro = Comando_ExecutarPos(lComando1, "SELECT NumIntDoc, Valor, Status,TipoLiberacao,NumIntDocLiberacao, Indireta FROM TRVVoucherInfo WHERE TipoDoc = ? AND TipVou = ? AND Serie = ? AND NumVou = ? AND Indireta = ? AND TipoCliForn = ? AND CliForn = ?", 0, _
                 lNumIntDocVouInfo, dValorEstornarAux, iStatus, iTipoLiberacao, lNumIntDocLiberacao, iIndireta, sTipoDocEstornado, objVou.sTipVou, objVou.sSerie, objVou.lNumVou, 1, iTipoCliForn, lCliForn)
    If lErro <> AD_SQL_SUCESSO Then gError 198100

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(lComando1)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 198101

    Do While lErro <> AD_SQL_SEM_DADOS
    
        lErro = Comando_LockExclusive(lComando1)
        If lErro <> AD_SQL_SUCESSO Then gError 198102
        
        Set objVouInfo = New ClassTRVVoucherInfoN
        
        objVouInfo.lNumIntDoc = lNumIntDocVouInfo
        objVouInfo.dValor = dValorEstornarAux
        objVouInfo.iTipoCliForn = iTipoCliForn
        objVouInfo.lCliForn = lCliForn
        objVouInfo.iIndireta = iIndireta
        objVouInfo.iStatus = iStatus
        objVouInfo.iTipoLiberacao = iTipoLiberacao
        objVouInfo.lNumIntDocLiberacao = lNumIntDocLiberacao
        
        bAchou = False
        iIndice = 0
        For Each objVouInfoAux In colVouInfoGrupado
            iIndice = iIndice + 1
            If objVouInfo.iStatus = objVouInfoAux.iStatus And _
                        objVouInfo.iTipoLiberacao = objVouInfoAux.iTipoLiberacao And _
                        objVouInfo.iIndireta = objVouInfoAux.iIndireta And _
                        objVouInfo.lNumIntDocLiberacao = objVouInfoAux.lNumIntDocLiberacao Then
                bAchou = True
                objVouInfoAux.dValor = objVouInfoAux.dValor + objVouInfo.dValor
                Set colVouInfoItens = colcolVouInfoItens.Item(iIndice)
                colVouInfoItens.Add objVouInfo
                Exit For
            End If
        Next
        If Not bAchou Then
            colVouInfoGrupado.Add objVouInfo
            Set colVouInfoItens = New Collection
            colcolVouInfoItens.Add colVouInfoItens
            colVouInfoItens.Add objVouInfo
        End If
        
        'Busca Próximo
        lErro = Comando_BuscarProximo(lComando1)
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 198106
    
    Loop

    iIndice = 0
    For Each objVouInfo In colVouInfoGrupado
    
        iIndice = iIndice + 1
    
        dValorEstornar = objVouInfo.dValor * dFatorEstorno
                
        'Insere o estorno
        If dFatorEstorno = 1 Then
            lErro = TRVVou_Gera_Comis_Insere_Info(lComando2, lComando3, lComando4, objVou, sTipoDocEstornado, dtData, -dValorEstornar, sHistorico, objVouInfo.iStatus, objVouInfo.iTipoLiberacao, objVouInfo.lNumIntDocLiberacao, 0, objVouInfo.iTipoCliForn, objVouInfo.lCliForn, TRV_TIPO_ESTORNO_LANC_ESTORNADOR, 0, lContador, lNumIntDocEstorno, objVouInfo.iIndireta)
        Else
            lErro = TRVVou_Gera_Comis_Insere_Info(lComando2, lComando3, lComando4, objVou, sTipoDocEstornado, dtData, -dValorEstornar, sHistorico, objVouInfo.iStatus, objVouInfo.iTipoLiberacao, objVouInfo.lNumIntDocLiberacao, 0, objVouInfo.iTipoCliForn, objVouInfo.lCliForn, TRV_TIPO_ESTORNO_LANC_NORMAL, 0, lContador, , objVouInfo.iIndireta)
            lNumIntDocEstorno = 0
        End If
        If lErro <> AD_SQL_SUCESSO Then gError 198103
                        
        Set colVouInfoItens = colcolVouInfoItens.Item(iIndice)
        
        If lNumIntDocEstorno <> 0 Then
        
            For Each objVouInfoAux In colVouInfoItens
                'Marca que o documento foi estornado e quem estornou
                lErro = Comando_Executar(lComando5, "UPDATE TRVVoucherInfo SET Estorno = ?, NumIntDocEstorno = ? WHERE NumIntDoc = ?", TRV_TIPO_ESTORNO_LANC_ESTORNADO, lNumIntDocEstorno, objVouInfoAux.lNumIntDoc)
                If lErro <> AD_SQL_SUCESSO Then gError 198105
            Next
            
        End If
        
    Next
 
    TRVVou_Gera_Comis_Trata_Estorno3 = SUCESSO

    Exit Function

Erro_TRVVou_Gera_Comis_Trata_Estorno3:

    TRVVou_Gera_Comis_Trata_Estorno3 = gErr

    Select Case gErr
    
        Case 198100, 198101, 198106
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVVOUCHERINFO", gErr)

        Case 198102
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVVOUCHERINFO", gErr)
            
        Case 198103, 198104

        Case 198105
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVVOUCHERINFO", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 198107)

    End Select

    Exit Function

End Function

Private Function TRVFaturamento_Gera_Excel(ByVal objInfoFatura As ClassTRVFATInfoFatura) As Long
'Gera as listagens em excel

Dim lErro As Long
Dim objInfoVou As ClassTRVFATInfoVoucher
Dim objInfoVouAux As ClassTRVFATInfoVoucher
Dim objPastaTrabalho As Object 'Excel.Workbook
Dim objPlanilhaExcel As Object 'Excel.Worksheet
Dim objFaixaCelulasPreencher As Object 'Excel.Range
Dim iLinha As Integer
Dim iColuna As Integer
Dim objColuna As ClassColunasExcel
Dim objCelulas As ClassCelulasExcel
Dim sNomeDiretorioArq As String
Dim sNomeDiretorioArqPen As String
Dim iSeq As Integer
Dim colInfoVouchersAG As Collection
Dim bAchou As Boolean
Dim objCliente As ClassCliente
Dim objFilialCliente As ClassFilialCliente
Dim objEndereco As ClassEndereco
Dim sConteudo As String, sModelo As String
Dim dValorTotal As Double, sFilialEmpresa As String

Const LIN_INICIAL = 13

On Error GoTo Erro_TRVFaturamento_Gera_Excel

    lErro = CF("TRVConfig_Le", TRVCONFIG_DIRETORIO_FAT_HTML, EMPRESA_TODA, sConteudo)
    If lErro <> SUCESSO Then gError 192192

    sModelo = sConteudo & "xls\Modelo\Modelo.xls"
    sNomeDiretorioArq = sConteudo & "xls\" & gsEmpresaTRVHTML & String(6 - Len(CStr(objInfoFatura.lNumeroFaturaReal)), "0") & CStr(objInfoFatura.lNumeroFaturaReal) & ".xls"
    sNomeDiretorioArqPen = sConteudo & "xls\" & "PEN" & gsEmpresaTRVHTML & String(6 - Len(CStr(objInfoFatura.lNumeroFaturaReal)), "0") & CStr(objInfoFatura.lNumeroFaturaReal) & ".xls"
    
    '****************
    'Itens da Fatura
    '****************
    Set colInfoVouchersAG = New Collection
    For Each objInfoVou In objInfoFatura.colInfoVouchers
        If objInfoVou.iMarcado = MARCADO Then
            bAchou = False
            For Each objInfoVouAux In colInfoVouchersAG
                If objInfoVouAux.lCliente = objInfoVou.lCliente Then
                    objInfoVouAux.dValor = objInfoVouAux.dValor + objInfoVou.dValor
                    bAchou = True
                    Exit For
                End If
            Next
            If Not bAchou Then
                Set objInfoVouAux = New ClassTRVFATInfoVoucher
                colInfoVouchersAG.Add objInfoVouAux
                objInfoVouAux.lCliente = objInfoVou.lCliente
                objInfoVouAux.dValor = objInfoVou.dValor
                objInfoVouAux.sEmissorCartao = objInfoVou.sEmissorCartao
                objInfoVouAux.sEmissorCPF = objInfoVou.sEmissorCPF
                objInfoVouAux.sEmissorNomeCompl = objInfoVou.sEmissorNomeCompl
            End If
        End If
    Next
    
    'Abre o excel
    lErro = Excel_Abrir()
    If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
    
    'Desabilita as mensagens do Excel
    GL_objExcelSist.DisplayAlerts = False
    
    Call GL_objExcelSist.Workbooks.Open(sModelo)
           
    Set objPastaTrabalho = GL_objExcelSist.ActiveWorkBook
       
    'Seleciona a planilha ativa na pasta de trabalho criada
    Set objPlanilhaExcel = objPastaTrabalho.ActiveSheet
    
    Set objFaixaCelulasPreencher = objPlanilhaExcel.Range(objPlanilhaExcel.Cells(1, 5), objPlanilhaExcel.Cells(1, 5))
    objFaixaCelulasPreencher.Value = "DATA: " & Format(objInfoFatura.dtDataEmissao, "dd/mm/yyyy")
    Set objFaixaCelulasPreencher = objPlanilhaExcel.Range(objPlanilhaExcel.Cells(1, 6), objPlanilhaExcel.Cells(1, 6))
    objFaixaCelulasPreencher.Value = "ID: " & gsEmpresaTRVHTML & String(6 - Len(CStr(objInfoFatura.lNumeroFaturaReal)), "0") & CStr(objInfoFatura.lNumeroFaturaReal)
    
    Select Case objInfoFatura.iFilialEmpresa
        Case 1
            sFilialEmpresa = "SÃO PAULO"
        Case 2
            sFilialEmpresa = "RECIFE"
        Case 3
            sFilialEmpresa = "CURITIBA"
        Case 4
            sFilialEmpresa = "RIO DE JANEIRO"
        Case 5
            sFilialEmpresa = "PORTO ALEGRE"
        Case 6
            sFilialEmpresa = "BELO HORIZONTE"
        Case Else
            sFilialEmpresa = "OUTRA"
    End Select
    
    Set objFaixaCelulasPreencher = objPlanilhaExcel.Range(objPlanilhaExcel.Cells(1, 3), objPlanilhaExcel.Cells(1, 3))
    objFaixaCelulasPreencher.Value = sFilialEmpresa
    
    iSeq = LIN_INICIAL
    For Each objInfoVou In colInfoVouchersAG
        Set objFaixaCelulasPreencher = objPlanilhaExcel.Range(objPlanilhaExcel.Cells(iSeq, 1), objPlanilhaExcel.Cells(iSeq, 1))
        objFaixaCelulasPreencher.Value = CStr(iSeq - LIN_INICIAL + 1)
        Set objFaixaCelulasPreencher = objPlanilhaExcel.Range(objPlanilhaExcel.Cells(iSeq, 2), objPlanilhaExcel.Cells(iSeq, 2))
        objFaixaCelulasPreencher.Value = objInfoVou.sEmissorNomeCompl
        Set objFaixaCelulasPreencher = objPlanilhaExcel.Range(objPlanilhaExcel.Cells(iSeq, 3), objPlanilhaExcel.Cells(iSeq, 3))
        objFaixaCelulasPreencher.Value = Format(objInfoVou.sEmissorCPF, "000\.000\.000-00; ; ; ")
        Set objFaixaCelulasPreencher = objPlanilhaExcel.Range(objPlanilhaExcel.Cells(iSeq, 4), objPlanilhaExcel.Cells(iSeq, 4))
        objFaixaCelulasPreencher.Value = objInfoVou.sEmissorCartao
        Set objFaixaCelulasPreencher = objPlanilhaExcel.Range(objPlanilhaExcel.Cells(iSeq, 5), objPlanilhaExcel.Cells(iSeq, 5))
        objFaixaCelulasPreencher.Value = Abs(objInfoVou.dValor)
        objFaixaCelulasPreencher.NumberFormat = "#,##0.00##"
        Set objFaixaCelulasPreencher = objPlanilhaExcel.Range(objPlanilhaExcel.Cells(iSeq, 6), objPlanilhaExcel.Cells(iSeq, 6))
        objFaixaCelulasPreencher.Value = ""
        iSeq = iSeq + 1
        dValorTotal = dValorTotal + Abs(objInfoVou.dValor)
    Next
    Set objFaixaCelulasPreencher = objPlanilhaExcel.Range(objPlanilhaExcel.Cells(iSeq, 3), objPlanilhaExcel.Cells(iSeq, 3))
    objFaixaCelulasPreencher.Value = "VALOR TOTAL CARGA :"
    objFaixaCelulasPreencher.Font.Bold = True
    Set objFaixaCelulasPreencher = objPlanilhaExcel.Range(objPlanilhaExcel.Cells(iSeq, 5), objPlanilhaExcel.Cells(iSeq, 5))
    objFaixaCelulasPreencher.Value = dValorTotal
    objFaixaCelulasPreencher.Font.Bold = True
    objFaixaCelulasPreencher.NumberFormat = "#,##0.00##"
    
    Set objFaixaCelulasPreencher = objPlanilhaExcel.Range(objPlanilhaExcel.Cells(5, 5), objPlanilhaExcel.Cells(5, 5))
    objFaixaCelulasPreencher.Value = dValorTotal
    objFaixaCelulasPreencher.NumberFormat = "#,##0.00##"
    
    Set objFaixaCelulasPreencher = objPlanilhaExcel.Range(objPlanilhaExcel.Cells(7, 3), objPlanilhaExcel.Cells(7, 3))
    objFaixaCelulasPreencher.Value = objInfoFatura.iQtdEmiSemCartao
    objFaixaCelulasPreencher.NumberFormat = "0"
    
    Set objFaixaCelulasPreencher = objPlanilhaExcel.Range(objPlanilhaExcel.Cells(7, 4), objPlanilhaExcel.Cells(7, 4))
    objFaixaCelulasPreencher.Value = objInfoFatura.dValorTarifaCartaoOver
    objFaixaCelulasPreencher.NumberFormat = "#,##0.00"
    
    GL_objExcelSist.Cells.Select
    GL_objExcelSist.Cells.EntireColumn.AutoFit
         
    objPastaTrabalho.SaveAS sNomeDiretorioArq
    objPastaTrabalho.Close
    
    'Fecha o Excel
    Call Excel_Fechar

    '****************
    'Itens da Pendentes
    '****************
    Set colInfoVouchersAG = New Collection
    For Each objInfoVou In objInfoFatura.colInfoVouchersPen
        bAchou = False
        For Each objInfoVouAux In colInfoVouchersAG
            If objInfoVouAux.lCliente = objInfoVou.lCliente Then
                objInfoVouAux.dValor = objInfoVouAux.dValor + objInfoVou.dValor
                bAchou = True
                Exit For
            End If
        Next
        If Not bAchou Then
            Set objInfoVouAux = New ClassTRVFATInfoVoucher
            colInfoVouchersAG.Add objInfoVouAux
            objInfoVouAux.lCliente = objInfoVou.lCliente
            objInfoVouAux.lCliVou = objInfoVou.lCliVou
            objInfoVouAux.sNomeCliVou = objInfoVou.sNomeCliVou
            objInfoVouAux.dValor = objInfoVou.dValor
            objInfoVouAux.sEmissorCartao = objInfoVou.sEmissorCartao
            objInfoVouAux.sEmissorCPF = objInfoVou.sEmissorCPF
            objInfoVouAux.sEmissorNomeCompl = objInfoVou.sEmissorNomeCompl
        End If
    Next
    
    'Abre o excel
    lErro = Excel_Abrir()
    If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
    
    'Desabilita as mensagens do Excel
    GL_objExcelSist.DisplayAlerts = False
    
    'Cria uma nova pasta de trabalho
    Set objPastaTrabalho = GL_objExcelSist.Workbooks.Add
    
    'Seleciona a planilha ativa na pasta de trabalho criada
    Set objPlanilhaExcel = objPastaTrabalho.ActiveSheet

    'Monta a Faixa das Células que receberão os valores passado
    Set objFaixaCelulasPreencher = objPlanilhaExcel.Range(objPlanilhaExcel.Cells(1, 1), objPlanilhaExcel.Cells(1, 1))
    objFaixaCelulasPreencher.Value = "Emissor"
    objFaixaCelulasPreencher.Font.Bold = True
    Set objFaixaCelulasPreencher = objPlanilhaExcel.Range(objPlanilhaExcel.Cells(1, 2), objPlanilhaExcel.Cells(1, 2))
    objFaixaCelulasPreencher.Value = "Nome do Emssor"
    objFaixaCelulasPreencher.Font.Bold = True
    Set objFaixaCelulasPreencher = objPlanilhaExcel.Range(objPlanilhaExcel.Cells(1, 3), objPlanilhaExcel.Cells(1, 3))
    objFaixaCelulasPreencher.Value = "CPF"
    objFaixaCelulasPreencher.Font.Bold = True
    Set objFaixaCelulasPreencher = objPlanilhaExcel.Range(objPlanilhaExcel.Cells(1, 4), objPlanilhaExcel.Cells(1, 4))
    objFaixaCelulasPreencher.Value = "No do Cartão"
    objFaixaCelulasPreencher.Font.Bold = True
    Set objFaixaCelulasPreencher = objPlanilhaExcel.Range(objPlanilhaExcel.Cells(1, 5), objPlanilhaExcel.Cells(1, 5))
    objFaixaCelulasPreencher.Value = "Agência"
    objFaixaCelulasPreencher.Font.Bold = True
    Set objFaixaCelulasPreencher = objPlanilhaExcel.Range(objPlanilhaExcel.Cells(1, 6), objPlanilhaExcel.Cells(1, 6))
    objFaixaCelulasPreencher.Value = "Nome da Agência"
    objFaixaCelulasPreencher.Font.Bold = True
    Set objFaixaCelulasPreencher = objPlanilhaExcel.Range(objPlanilhaExcel.Cells(1, 7), objPlanilhaExcel.Cells(1, 7))
    objFaixaCelulasPreencher.Value = "Telefone da Agência"
    objFaixaCelulasPreencher.Font.Bold = True
    Set objFaixaCelulasPreencher = objPlanilhaExcel.Range(objPlanilhaExcel.Cells(1, 8), objPlanilhaExcel.Cells(1, 8))
    objFaixaCelulasPreencher.Value = "Email da Agência"
    objFaixaCelulasPreencher.Font.Bold = True
    
    iSeq = 0
    For Each objInfoVou In colInfoVouchersAG
        iSeq = iSeq + 1
        
        Set objCliente = New ClassCliente
        Set objFilialCliente = New ClassFilialCliente
        Set objEndereco = New ClassEndereco
    
        objCliente.lCodigo = objInfoVou.lCliVou
        objFilialCliente.lCodCliente = objInfoVou.lCliVou
        objFilialCliente.iCodFilial = FILIAL_MATRIZ
        
        lErro = CF("Cliente_Le", objCliente)
        If lErro <> SUCESSO And lErro <> 12293 Then gError ERRO_SEM_MENSAGEM
    
        lErro = CF("FilialCliente_Le", objFilialCliente)
        If lErro <> SUCESSO And lErro <> 12567 Then gError ERRO_SEM_MENSAGEM
        
        objEndereco.lCodigo = objFilialCliente.lEndereco
        
        lErro = CF("Endereco_Le", objEndereco)
        If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
        
        Set objFaixaCelulasPreencher = objPlanilhaExcel.Range(objPlanilhaExcel.Cells(iSeq + 1, 1), objPlanilhaExcel.Cells(iSeq + 1, 1))
        objFaixaCelulasPreencher.Value = CStr(objInfoVou.lCliente)
        Set objFaixaCelulasPreencher = objPlanilhaExcel.Range(objPlanilhaExcel.Cells(iSeq + 1, 2), objPlanilhaExcel.Cells(iSeq + 1, 2))
        objFaixaCelulasPreencher.Value = objInfoVou.sEmissorNomeCompl
        Set objFaixaCelulasPreencher = objPlanilhaExcel.Range(objPlanilhaExcel.Cells(iSeq + 1, 3), objPlanilhaExcel.Cells(iSeq + 1, 3))
        objFaixaCelulasPreencher.Value = Format(objInfoVou.sEmissorCPF, "000\.000\.000-00; ; ; ")
        Set objFaixaCelulasPreencher = objPlanilhaExcel.Range(objPlanilhaExcel.Cells(iSeq + 1, 4), objPlanilhaExcel.Cells(iSeq + 1, 4))
        objFaixaCelulasPreencher.Value = objInfoVou.sEmissorCartao
        Set objFaixaCelulasPreencher = objPlanilhaExcel.Range(objPlanilhaExcel.Cells(iSeq + 1, 5), objPlanilhaExcel.Cells(iSeq + 1, 5))
        objFaixaCelulasPreencher.Value = objCliente.lCodigo
        Set objFaixaCelulasPreencher = objPlanilhaExcel.Range(objPlanilhaExcel.Cells(iSeq + 1, 6), objPlanilhaExcel.Cells(iSeq + 1, 6))
        objFaixaCelulasPreencher.Value = objCliente.sRazaoSocial
        Set objFaixaCelulasPreencher = objPlanilhaExcel.Range(objPlanilhaExcel.Cells(iSeq + 1, 7), objPlanilhaExcel.Cells(iSeq + 1, 7))
        objFaixaCelulasPreencher.Value = objEndereco.sTelefone1 & IIf(Len(Trim(objEndereco.sTelefone2)) <> 0, "\" & objEndereco.sTelefone2, "")
        Set objFaixaCelulasPreencher = objPlanilhaExcel.Range(objPlanilhaExcel.Cells(iSeq + 1, 8), objPlanilhaExcel.Cells(iSeq + 1, 8))
        objFaixaCelulasPreencher.Value = objEndereco.sEmail & IIf(Len(Trim(objEndereco.sEmail2)) <> 0, ";" & objEndereco.sEmail2, "")
    Next
    
    GL_objExcelSist.Cells.Select
    GL_objExcelSist.Cells.EntireColumn.AutoFit
         
    objPastaTrabalho.SaveAS sNomeDiretorioArqPen
    objPastaTrabalho.Close
    
    'Fecha o Excel
    Call Excel_Fechar
    
    TRVFaturamento_Gera_Excel = SUCESSO

    Exit Function

Erro_TRVFaturamento_Gera_Excel:

    TRVFaturamento_Gera_Excel = gErr

    Select Case gErr
    
        Case ERRO_SEM_MENSAGEM

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 198107)

    End Select

    'Fecha o Excel
    Call Excel_Fechar

    Exit Function

End Function

Public Function Excel_Abrir() As Long
'Cria uma instÂncia do Excel para uso pelo Corporator

On Error GoTo Erro_Excel_Abrir

    'Se não existe uma instância do excel em aberto
    If GL_objExcelSist Is Nothing Then
        
        'Cria uma nova instância do Excel
        Set GL_objExcelSist = CreateObject("Excel.Application")
    
    End If
    
    Excel_Abrir = SUCESSO
    
    Exit Function
    
Erro_Excel_Abrir:
    
    Excel_Abrir = gErr
    
    Select Case gErr

        Case 429
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCEL_NAO_INSTALADO", gErr, Error)
            
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 142314)
        
    End Select
    
    Call Excel_Fechar
    
    Exit Function

End Function

Public Function Excel_Fechar() As Long
'Fecha o Excel e libera o obj global que matném a referência ao Excel ativa para o sistema

    'Se existe uma instância do excel em aberto
    If Not GL_objExcelSist Is Nothing Then
        
        'Fecha o Excel
        GL_objExcelSist.Quit
        
        'Libera a memória alocada para referenciar o Excel
        Set GL_objExcelSist = Nothing
    
    End If

End Function

Private Function TRVVouchers_Ajusta_Valida_Dif_Comis(ByVal objVou As ClassTRVVouchers) As Long

Dim lErro As Long
Dim alComando(1 To 5) As Long
Dim iIndice As Integer, lContador As Long
Dim objVouBD As New ClassTRVVouchers
Dim objVouInfoPerc As ClassTRVVoucherInfoN
Dim colVouInfoPerc As New Collection
Dim dValorBase As Double, dTotalOverCI As Double
Dim objVouEmiCI As ClassTRVVouEmiCI, sTipoDoc As String, lCliForn As Long
Dim bAchou As Boolean, dValorDif As Double, dValorBD As Double, iIndireta As Integer
Dim iStatus As Integer, iTipoLiberacao As Integer, lNumIntDocLiberacao As Long, iTipoCliForn As Integer
Dim sTextoAux As String

Const VALOR_MAX_DE_ACERTO = 0.05

On Error GoTo Erro_TRVVouchers_Ajusta_Valida_Dif_Comis

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 206594
    Next
    
    Set objVouBD = New ClassTRVVouchers

    objVouBD.sTipoDoc = objVou.sTipoDoc
    objVouBD.sSerie = objVou.sSerie
    objVouBD.sTipVou = objVou.sTipVou
    objVouBD.lNumVou = objVou.lNumVou

    lErro = CF("TRVVouchers_Le", objVouBD)
    If lErro <> SUCESSO And lErro <> ERRO_LEITURA_SEM_DADOS Then gError ERRO_SEM_MENSAGEM
    
    lErro = CF("TRVVouEmiCI_Le", objVouBD)
    If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM

    If gdtDataInicioComisCorp <= objVouBD.dtData Then

        'Pega o último sequencial do último item gerado para esse voucher
        lErro = TRVVou_Gera_Comis_Obtem_Seq(alComando(5), objVouBD, lContador)
        If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
        
        If objVouBD.iCartao = MARCADO Then
            dValorBase = objVouBD.dValorBaseComis
        Else
            dValorBase = objVouBD.dValorBruto
        End If
        If objVouBD.iStatus = STATUS_TRV_VOU_CANCELADO And objVouBD.lNumFatCoinfo = 0 Then
            dValorBase = 0
        End If
        
        Set objVouInfoPerc = New ClassTRVVoucherInfoN
        objVouInfoPerc.sTipoDoc = TRV_TIPODOC_CMR_TEXTO
        objVouInfoPerc.lCliForn = objVouBD.lRepresentante
        objVouInfoPerc.dValor = Arredonda_Moeda(dValorBase * objVouBD.dComissaoRep)
        If objVou.iStatus = STATUS_TRV_VOU_CANCELADO Then objVouInfoPerc.dValor = 0
        colVouInfoPerc.Add objVouInfoPerc
        
        Set objVouInfoPerc = New ClassTRVVoucherInfoN
        objVouInfoPerc.sTipoDoc = TRV_TIPODOC_CMC_TEXTO
        objVouInfoPerc.lCliForn = objVouBD.lCorrentista
        objVouInfoPerc.dValor = Arredonda_Moeda(dValorBase * objVouBD.dComissaoCorr)
        If objVou.iStatus = STATUS_TRV_VOU_CANCELADO Then objVouInfoPerc.dValor = 0
        colVouInfoPerc.Add objVouInfoPerc
        
        Set objVouInfoPerc = New ClassTRVVoucherInfoN
        objVouInfoPerc.sTipoDoc = TRV_TIPODOC_BRUTO_TEXTO
        objVouInfoPerc.lCliForn = objVouBD.lClienteVou
        objVouInfoPerc.dValor = Arredonda_Moeda(objVouBD.dValorBruto)
        If objVou.iStatus = STATUS_TRV_VOU_CANCELADO Then objVouInfoPerc.dValor = 0
        colVouInfoPerc.Add objVouInfoPerc
        
        Set objVouInfoPerc = New ClassTRVVoucherInfoN
        objVouInfoPerc.sTipoDoc = TRV_TIPODOC_CMA_TEXTO
        objVouInfoPerc.lCliForn = objVouBD.lClienteComissao
        objVouInfoPerc.dValor = IIf(objVouBD.iCartao = MARCADO, 0, Arredonda_Moeda(dValorBase * objVouBD.dComissaoAg))
        If objVou.iStatus = STATUS_TRV_VOU_CANCELADO Then objVouInfoPerc.dValor = 0
        colVouInfoPerc.Add objVouInfoPerc
        
        Set objVouInfoPerc = New ClassTRVVoucherInfoN
        objVouInfoPerc.sTipoDoc = TRV_TIPODOC_CMCC_TEXTO
        objVouInfoPerc.lCliForn = objVouBD.lClienteComissao
        objVouInfoPerc.dValor = IIf(objVouBD.iCartao = DESMARCADO, 0, Arredonda_Moeda(dValorBase * objVouBD.dComissaoAg))
        If objVou.iStatus = STATUS_TRV_VOU_CANCELADO Then objVouInfoPerc.dValor = 0
        colVouInfoPerc.Add objVouInfoPerc
        
        dTotalOverCI = 0
        For Each objVouEmiCI In objVouBD.colEmiCI
            dTotalOverCI = dTotalOverCI + objVouEmiCI.dPercCI
            
            Set objVouInfoPerc = New ClassTRVVoucherInfoN
            objVouInfoPerc.sTipoDoc = TRV_TIPODOC_OVER_TEXTO
            objVouInfoPerc.lCliForn = objVouEmiCI.lFornEmissor
            objVouInfoPerc.dValor = Arredonda_Moeda(dValorBase * objVouBD.dComissaoEmissor * objVouEmiCI.dPercCI)
            objVouInfoPerc.iIndireta = MARCADO
            colVouInfoPerc.Add objVouInfoPerc
        Next
        
        Set objVouInfoPerc = New ClassTRVVoucherInfoN
        objVouInfoPerc.sTipoDoc = TRV_TIPODOC_OVER_TEXTO
        objVouInfoPerc.lCliForn = objVouBD.lEmissor
        objVouInfoPerc.dValor = Arredonda_Moeda(dValorBase * objVouBD.dComissaoEmissor * (1 - dTotalOverCI))
        colVouInfoPerc.Add objVouInfoPerc
        
        sTipoDoc = String(STRING_TRV_VOU_INFO_TIPODOC, 0)
        
        lErro = Comando_Executar(alComando(1), "SELECT TipoDoc,TipoCliForn, CliForn, SUM(Valor), Indireta, MIN(Status), MAX(TipoLiberacao), MAX(NumIntDocLiberacao) FROM TrvVoucherInfo WHERE NumVou = ? AND Serie = ? AND TipVou = ? AND (NumIntDocOCR = 0 OR Estorno = 1) GROUP BY TipoDoc, TipoCliForn, CliForn, Indireta", sTipoDoc, iTipoCliForn, lCliForn, dValorBD, iIndireta, iStatus, iTipoLiberacao, lNumIntDocLiberacao, objVouBD.lNumVou, objVouBD.sSerie, objVouBD.sTipVou)
        If lErro <> AD_SQL_SUCESSO Then gError 206595
    
        'Busca Primeiro
        lErro = Comando_BuscarPrimeiro(alComando(1))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206596
        
        Do While lErro <> AD_SQL_SEM_DADOS
        
            sTextoAux = ""
            
            dValorDif = -dValorBD
            For Each objVouInfoPerc In colVouInfoPerc
                If objVouInfoPerc.sTipoDoc = sTipoDoc And objVouInfoPerc.lCliForn = lCliForn And objVouInfoPerc.iIndireta = iIndireta Then
                    dValorDif = dValorDif + objVouInfoPerc.dValor
                    objVouInfoPerc.iManual = MARCADO
                End If
            Next
            'Não pode ter diferenças desse tamanho no BD, é necessário analisar o caso
            'se teve erro na geração da comissão ou erro na validação
            If Abs(dValorDif) > VALOR_MAX_DE_ACERTO Then gError 206597
            
            'Insere o registro do valor bruto
            lErro = TRVVou_Gera_Comis_Insere_Info(alComando(2), alComando(3), alComando(4), objVouBD, sTipoDoc, Date, dValorDif, "Ajuste de arredondamento", iStatus, iTipoLiberacao, lNumIntDocLiberacao, 0, iTipoCliForn, lCliForn, TRV_TIPO_ESTORNO_LANC_NORMAL, 0, lContador, , iIndireta)
            If lErro <> AD_SQL_SUCESSO Then gError ERRO_SEM_MENSAGEM
                    
            'Busca Próximo
            lErro = Comando_BuscarProximo(alComando(1))
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 206598
            
        Loop
        
        For Each objVouInfoPerc In colVouInfoPerc
            If objVouInfoPerc.iManual = DESMARCADO Then
                If Abs(objVouInfoPerc.dValor) > VALOR_MAX_DE_ACERTO Then gError 206599
            End If
        Next
        
        'Acerta o valor líquido do voucher e a comissão da agência
        lErro = TRVVouchers_Grava(objVouBD, 0, False, TRV_TIPO_GRAVACAO_ACERTO_VALOR_LIQ, False, 0, True)
        If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
        
    End If

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next
    
    TRVVouchers_Ajusta_Valida_Dif_Comis = SUCESSO
    
    Exit Function
    
Erro_TRVVouchers_Ajusta_Valida_Dif_Comis:
    
    TRVVouchers_Ajusta_Valida_Dif_Comis = gErr
    
    Select Case gErr
    
        Case 206594
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)
            
        Case 206595, 206596, 206598
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVVOUCHERINFO", gErr)
            
        Case 206597
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVVOUCHERINFO_INCONSISTENTE", gErr, objVouBD.sTipVou, objVouBD.sSerie, objVouBD.lNumVou, sTipoDoc, lCliForn, dValorDif)
            Call Rotina_Erro(vbOKOnly, "Valor Base: " & Format(dValorBase, "STANDARD") & " Valor BD: " & Format(dValorBD, "STANDARD") & " Bruto: " & Format(objVouBD.dValorBruto, "STANDARD") & " Bruto OCR: " & Format(objVouBD.dValorBrutoComOCR, "STANDARD"), gErr)
            'Call Rotina_Erro(vbOKOnly, sTextoAux, gErr)

        Case 206599
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVVOUCHERINFO_INCONSISTENTE", gErr, objVouBD.sTipVou, objVouBD.sSerie, objVouBD.lNumVou, objVouInfoPerc.sTipoDoc, objVouInfoPerc.lCliForn, objVouInfoPerc.dValor)
    
        Case ERRO_SEM_MENSAGEM

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 206600)
        
    End Select


    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next
    
    Exit Function
    
End Function

Public Function TRVVouComi_Altera() As Long

Dim lErro As Long
Dim lTransacao As Long, iIndice As Integer
Dim objVou As ClassTRVVouchers
Dim alComando(1 To 5) As Long
Dim sTipVou As String, sSerie As String, lNumVou As Long
Dim lCount As Long
Dim objFrmAguarde As New ClassFrmAguarde
Dim objFrmAguardeTela As New FrmAguarde

On Error GoTo Erro_TRVVouComi_Altera

    'Abertura de transação
    lTransacao = Transacao_Abrir()
    If lTransacao = 0 Then gError ERRO_SEM_MENSAGEM
      
    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError ERRO_SEM_MENSAGEM
    Next
    
    lErro = Comando_Executar(alComando(2), "UPDATE TRVConfig SET Conteudo = '01/01/2006' WHERE COdigo = ?", TRVCONFIG_DATA_COMIS_CORPORATOR)
    If lErro <> AD_SQL_SUCESSO Then gError ERRO_SEM_MENSAGEM
    
    lErro = Comando_Executar(alComando(4), "SELECT COUNT(*) FROM TRVVouchers AS V WHERE V.NumIntDocDestino  = 0 AND V.Status <> 7 AND V.Cartao = 0 AND V.ClienteVou IN (SELECT Cliente FROM FilialClienteCategorias WHERE Categoria = 'Cond. Faturamento' AND Item = 'CVCs')", lCount)
    If lErro <> AD_SQL_SUCESSO Then gError ERRO_SEM_MENSAGEM

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(4))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError ERRO_SEM_MENSAGEM
    
    objFrmAguarde.iTotalItens = lCount
    Call objFrmAguardeTela.Inicializa_Progressao(objFrmAguarde)
    
    sTipVou = String(255, 0)
    sSerie = String(255, 0)
 
    lErro = Comando_Executar(alComando(1), "SELECT V.TipVou, V.Serie, V.NumVou FROM TRVVouchers AS V WHERE V.NumIntDocDestino  = 0 AND V.Status <> 7 AND V.Cartao = 0 AND V.ClienteVou IN (SELECT Cliente FROM FilialClienteCategorias WHERE Categoria = 'Cond. Faturamento' AND Item = 'CVCs')", sTipVou, sSerie, lNumVou)
    If lErro <> AD_SQL_SUCESSO Then gError ERRO_SEM_MENSAGEM

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(1))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError ERRO_SEM_MENSAGEM

    Do While lErro <> AD_SQL_SEM_DADOS
    
        Set objVou = New ClassTRVVouchers
        
        objVou.lNumVou = lNumVou
        objVou.sSerie = sSerie
        objVou.sTipoDoc = TRV_TIPODOC_VOU_TEXTO
        objVou.sTipVou = sTipVou
   
        lErro = CF("TRVVouchers_Le", objVou)
        If lErro <> SUCESSO And lErro <> ERRO_LEITURA_SEM_DADOS Then gError ERRO_SEM_MENSAGEM
        
        If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
    
        If objVou.dComissaoAg <> 0.4 Or objVou.dComissaoRep <> 0 Or objVou.lRepresentante <> 0 Or objVou.lCorrentista <> 0 Or objVou.dComissaoCorr <> 0 Or objVou.dComissaoEmissor <> 0 Then
    
            objVou.dComissaoAg = 0.4
            objVou.dComissaoRep = 0
            objVou.lRepresentante = 0
            objVou.lCorrentista = 0
            objVou.dComissaoCorr = 0
            objVou.dComissaoEmissor = 0
    
            'Grava o/a TRVTiposOcorrencia no Banco de Dados
            lErro = TRVVouchers_Grava(objVou, , , TRV_TIPO_GRAVACAO_VOU_TELA, False, GL_lConexao)
            If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
            
            If objVou.dtData >= #9/15/2008# Then
             
                lErro = TRVVouchers_Ajusta_Valida_Dif_Comis(objVou)
                If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
            
            End If
            
        End If
        
        Call objFrmAguardeTela.ProcessouItem
        
        If objFrmAguarde.iCancelar = MARCADO Then Exit Do
        
        lErro = Comando_BuscarProximo(alComando(1))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError ERRO_SEM_MENSAGEM
        
    Loop
    
    Set objFrmAguardeTela = Nothing
    If objFrmAguarde.iCancelar = MARCADO Then gError ERRO_SEM_MENSAGEM
        
    lErro = Comando_Executar(alComando(3), "UPDATE TRVConfig SET Conteudo = '15/09/2008' WHERE Codigo = ?", TRVCONFIG_DATA_COMIS_CORPORATOR)
    If lErro <> AD_SQL_SUCESSO Then gError ERRO_SEM_MENSAGEM
        
    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next
    
    'Confirma a transação
    lErro = Transacao_Commit()
    If lErro <> AD_SQL_SUCESSO Then gError ERRO_SEM_MENSAGEM
    
    TRVVouComi_Altera = SUCESSO

    Exit Function

Erro_TRVVouComi_Altera:

    TRVVouComi_Altera = gErr

    Select Case gErr

        Case ERRO_SEM_MENSAGEM
        
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 198215)

    End Select
    
    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next
    
    'Desfaz Transação
    Call Transacao_Rollback
    
    If Not (objFrmAguardeTela Is Nothing) Then
        Call objFrmAguardeTela.Trata_Erro
    End If

    Exit Function

End Function

'ROTINAS CRIADAS AUTOMATICAMENTE PELA TELA BROWSECRIA
'GRAVAÇÃO
Public Function TRVOcrCasos_Grava(ByVal objOcrCaso As ClassTRVOcrCasos) As Long

Dim lErro As Long
Dim lTransacao As Long

On Error GoTo Erro_TRVOcrCasos_Grava

    'Abertura de transação
    lTransacao = Transacao_Abrir()
    If lTransacao = 0 Then gError 208430

    lErro = CF("TRVOcrCasos_Grava_EmTrans", objOcrCaso)
    If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM

    'Confirma a transação
    lErro = Transacao_Commit()
    If lErro <> AD_SQL_SUCESSO Then gError 208431

    TRVOcrCasos_Grava = SUCESSO

    Exit Function

Erro_TRVOcrCasos_Grava:

    TRVOcrCasos_Grava = gErr

    Select Case gErr

        Case 208430
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_TRANSACAO", gErr)

        Case 208431
            Call Rotina_Erro(vbOKOnly, "ERRO_COMMIT", gErr)
            
        Case ERRO_SEM_MENSAGEM

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 208432)

    End Select

    'Desfaz Transação
    Call Transacao_Rollback

    Exit Function

End Function

Public Function TRVOcrCasos_Grava_EmTrans(ByVal objOcrCaso As ClassTRVOcrCasos, Optional ByVal bImportacao As Boolean = False) As Long

Dim lErro As Long
Dim alComando(0 To 1) As Long
Dim iIndice As Integer
Dim lNumVou As Long
Dim lNumIntDoc As Long
Dim lCodEndereco As Long
Dim dtDataPagtoPax As Date
Dim dValorSolicitadoTotalRS As Double, dValorSolicitadoTotalUS As Double
Dim objSrv As ClassTRVOcrCasosSrv
Dim dValorAutorizadoAssistRS As Double, dValorAutorizadoSeguroRS As Double, iAnteciparPagtoSeguro As Integer
Dim dValorPagar As Double, dtDataProgFinanc As Date, lCodFornFavorecido As Long, dValorAutoSegRespTrvRS As Double
Dim sTipoSrv As String, sDescSrv As String
Dim lNumIntDocTitPagCobertura As Long, lNumIntDocTitPagProcesso As Long

On Error GoTo Erro_TRVOcrCasos_Grava_EmTrans

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 208433
    Next

    'Le a tabelaTRVOcrCasos
    lErro = Comando_ExecutarPos(alComando(0), "SELECT NumIntDoc, CodFornFavorecido, Endereco, DataPagtoPax, ValorAutorizadoAssistRS, ValorAutorizadoSeguroRS, AnteciparPagtoSeguro, DataProgFinanc, ValorAutoSegRespTrvRS FROM TRVOcrCasos WHERE Codigo= ? ", _
                0, lNumIntDoc, lCodFornFavorecido, lCodEndereco, dtDataPagtoPax, dValorAutorizadoAssistRS, dValorAutorizadoSeguroRS, iAnteciparPagtoSeguro, dtDataProgFinanc, dValorAutoSegRespTrvRS, objOcrCaso.sCodigo)
    If lErro <> AD_SQL_SUCESSO Then gError 208434

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(0))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 208435

    'Se existir => UPDATE, senão => INSERT
    If lErro = AD_SQL_SUCESSO Then
    
        If objOcrCaso.lNumIntDocTitPagCobertura <> lNumIntDocTitPagCobertura And lNumIntDocTitPagCobertura <> 0 Then gError 209267
        If objOcrCaso.lNumIntDocTitPagProcesso <> lNumIntDocTitPagProcesso And lNumIntDocTitPagProcesso <> 0 Then gError 209268
    
        dValorPagar = dValorAutorizadoAssistRS + IIf(iAnteciparPagtoSeguro = MARCADO, dValorAutorizadoSeguroRS, dValorAutoSegRespTrvRS)
       
        'A importação vai apenas fazer o insert caso não exista com os dados padrão que encontrar
        If Not bImportacao Then
        
            objOcrCaso.lCodFornFavorecido = lCodFornFavorecido

            lErro = TRVAssistVlrAuto_Atualiza(dtDataProgFinanc, -dValorPagar)
            If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM

            'Trava registro contra alterações/Leituras
            lErro = Comando_LockExclusive(alComando(0))
            If lErro <> SUCESSO Then gError 208436
            
            If objOcrCaso.dValorAutorizadoSeguroRS = 0 Or objOcrCaso.iAnteciparPagtoSeguro = MARCADO Then
                objOcrCaso.dtDataPagtoPax = dtDataPagtoPax
            End If
            
            dValorSolicitadoTotalRS = 0
            dValorSolicitadoTotalUS = 0
            sTipoSrv = ""
            sDescSrv = ""
            For Each objSrv In objOcrCaso.colCoberturas
                dValorSolicitadoTotalRS = dValorSolicitadoTotalRS + objSrv.dValorSolicitadoRS
                dValorSolicitadoTotalUS = dValorSolicitadoTotalUS + objSrv.dValorSolicitadoUS
                If objSrv.iTipo = TRV_SRV_TIPO_ASSIST Then
                    If sTipoSrv = "" Or sTipoSrv = "Assistência" Then
                        sTipoSrv = "Assistência"
                    Else
                        sTipoSrv = "Assistência e Seguro"
                    End If
                Else
                    If sTipoSrv = "" Or sTipoSrv = "Seguro" Then
                        sTipoSrv = "Seguro"
                    Else
                        sTipoSrv = "Assistência e Seguro"
                    End If
                End If
                sDescSrv = sDescSrv & IIf(sDescSrv <> "", SEPARADOR, "") & Trim(Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(objSrv.sDescricao, "(", ""), ")", ""), "0", ""), "1", ""), "2", ""), "3", ""), "4", ""), "5", ""), "6", ""), "7", ""), "8", ""), "9", ""))
            Next
            
            objOcrCaso.objEndereco.lCodigo = lCodEndereco
            objOcrCaso.lEndereco = lCodEndereco
            
            lErro = CF("Endereco_Grava", objOcrCaso.objEndereco)
            If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
    
            lErro = Comando_ExecutarPos(alComando(1), "UPDATE TRVOcrCasos SET TipVou= ? , Serie= ? , NumVou= ? , PaxNome= ? , " & _
                    "TitularNome= ? , ClienteVou= ? , DataEmissao= ? , DataIda= ? , DataVolta= ? , " & _
                    "Produto= ? , QtdPax= ? , DataAbertura= ? , DataDocsRec= ? , " & _
                    "DataEnvioAnalise= ? , CGAnalise= ? , CGStatus= ? , CGAutorizadoPor= ? , ValorAutorizadoTotalRS= ? , " & _
                    "ValorAutorizadoTotalUS= ? , DataLimite= ? , DataProgFinanc= ? , DataPagtoPax= ? , " & _
                    "Judicial= ? , NumProcesso= ? , Condenado= ? , ValorCondenacao= ? , Comarca= ? , " & _
                    "DataFimProcesso= ? , DataPagtoCond= ? , ValorAutorizadoSeguroRS= ? , ValorAutorizadoSeguroUS= ? , ValorAutorizadoAssistRS= ? , " & _
                    "ValorAutorizadoAssistUS= ? , Cambio= ? , AnteciparPagtoSeguro= ? , Banco= ? , Agencia= ? , " & _
                    "ContaCorrente= ? , NomeFavorecido= ? , FavorecidoCGC= ? , ValorInvoicesTotal= ?, ValorInvoicesTotalUS= ? , " & _
                    "ValorDespesasTotalRS= ? , ValorDespesasTotalUS= ?, ValorSolicitadoTotalRS  = ? , ValorSolicitadoTotalUS = ?, ValorGastosAdvRS = ?, ProcessoDanoMaterial = ?, ProcessoDanoMoral = ?, PerdaTipo = ?, Procon = ?, DataIniProcesso = ?, NumVouTexto = ?, ValorAutoSegRespTrvRS = ?, DescSrv = ?, TipoSrv = ?  ", alComando(0), _
                    objOcrCaso.sTipVou, objOcrCaso.sSerie, objOcrCaso.lNumVou, objOcrCaso.spaxnome, _
                    objOcrCaso.sTitularNome, objOcrCaso.lClienteVou, objOcrCaso.dtDataEmissao, objOcrCaso.dtDataIda, objOcrCaso.dtDataVolta, _
                    objOcrCaso.sProduto, objOcrCaso.iQtdPax, objOcrCaso.dtDataAbertura, objOcrCaso.dtDataDocsRec, _
                    objOcrCaso.dtDataEnvioAnalise, objOcrCaso.lCGAnalise, objOcrCaso.lCGStatus, objOcrCaso.lCGAutorizadoPor, objOcrCaso.dValorAutorizadoTotalRS, _
                    objOcrCaso.dValorAutorizadoTotalUS, objOcrCaso.dtDataLimite, objOcrCaso.dtDataProgFinanc, objOcrCaso.dtDataPagtoPax, _
                    objOcrCaso.iJudicial, objOcrCaso.sNumProcesso, objOcrCaso.iCondenado, objOcrCaso.dValorCondenacao, objOcrCaso.sComarca, _
                    objOcrCaso.dtDataFimProcesso, objOcrCaso.dtDataPagtoCond, objOcrCaso.dValorAutorizadoSeguroRS, objOcrCaso.dValorAutorizadoSeguroUS, objOcrCaso.dValorAutorizadoAssistRS, _
                    objOcrCaso.dValorAutorizadoAssistUS, objOcrCaso.dCambio, objOcrCaso.iAnteciparPagtoSeguro, objOcrCaso.iBanco, objOcrCaso.sAgencia, _
                    objOcrCaso.sContaCorrente, objOcrCaso.sNomeFavorecido, objOcrCaso.sFavorecidoCGC, objOcrCaso.dValorInvoicesTotal, objOcrCaso.dValorInvoicesTotalUS, _
                    objOcrCaso.dValorDespesasTotalRS, objOcrCaso.dValorDespesasTotalUS, dValorSolicitadoTotalRS, dValorSolicitadoTotalUS, objOcrCaso.dValorGastosAdvRS, objOcrCaso.dProcessoDanoMaterial, objOcrCaso.dProcessoDanoMoral, objOcrCaso.iPerdaTipo, objOcrCaso.iProcon, objOcrCaso.dtDataIniProcesso, objOcrCaso.sNumVouTexto, objOcrCaso.dValorAutoSegRespTrvRS, left(sDescSrv, 255), sTipoSrv)
            If lErro <> AD_SQL_SUCESSO Then gError 208437
            
            objOcrCaso.lNumIntDoc = lNumIntDoc
            
            lErro = TRVOcrCasosSrv_Exclui(objOcrCaso)
            If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
            
            lErro = TRVOcrCasosInvoices_Exclui(objOcrCaso)
            If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
            
            lErro = TRVOcrCasosOutrasFat_Exclui(objOcrCaso)
            If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
                        
            lErro = TRVOcrCasosParcValorCond_Exclui(objOcrCaso)
            If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
            
            lErro = TRVOcrCasosTexto_Exclui(lNumIntDoc, TRV_OCRCASOTEXTO_TIPO_OBS, 0)
            If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
                                   
            lErro = TRVOcrCasosGastosAdv_Exclui(objOcrCaso)
            If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
                                   
            lErro = TRVOcrCasosDocs_Exclui(objOcrCaso)
            If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
                                   
        End If

    Else
    
        lErro = CF("Endereco_Automatico", lCodEndereco)
        If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM

        objOcrCaso.objEndereco.lCodigo = lCodEndereco
        objOcrCaso.lEndereco = lCodEndereco

        lErro = CF("Endereco_Grava", objOcrCaso.objEndereco)
        If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM

        'Obter NumIntDoc
        lErro = CF("Config_ObterNumInt", "TRVConfig", "NUM_INT_PROX_TRVOCRCASOS", lNumIntDoc)
        If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM

        objOcrCaso.lNumIntDoc = lNumIntDoc

        lErro = Comando_Executar(alComando(1), "INSERT INTO TRVOcrCasos( NumIntDoc, Codigo, TipVou, Serie, " & _
                "NumVou, PaxNome, TitularNome, ClienteVou, DataEmissao, " & _
                "DataIda, DataVolta, Produto, QtdPax, Endereco, " & _
                "DataAbertura, DataDocsRec, DataEnvioAnalise, CGAnalise, CGStatus, " & _
                "CGAutorizadoPor, ValorAutorizadoTotalRS, ValorAutorizadoTotalUS, DataLimite, DataEnvioFinac, " & _
                "DataProgFinanc, DataPagtoPax, Judicial, NumProcesso, Condenado, " & _
                "ValorCondenacao, Comarca, DataFimProcesso, DataPagtoCond, ValorAutorizadoSeguroRS, " & _
                "ValorAutorizadoSeguroUS, ValorAutorizadoAssistRS, ValorAutorizadoAssistUS, Cambio, AnteciparPagtoSeguro, " & _
                "Banco, Agencia, ContaCorrente, NomeFavorecido, CodFornFavorecido, " & _
                "FavorecidoCGC, ValorInvoicesTotal, ValorDespesasTotalRS, ValorDespesasTotalUS, NumIntDocTitPagCobertura, " & _
                "NumIntDocTitPagProcesso, NumFatCobertura, NumFatProcesso, DataPriEvento, NumVouTexto) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)", _
                objOcrCaso.lNumIntDoc, objOcrCaso.sCodigo, objOcrCaso.sTipVou, objOcrCaso.sSerie, _
                objOcrCaso.lNumVou, objOcrCaso.spaxnome, objOcrCaso.sTitularNome, objOcrCaso.lClienteVou, objOcrCaso.dtDataEmissao, _
                objOcrCaso.dtDataIda, objOcrCaso.dtDataVolta, objOcrCaso.sProduto, objOcrCaso.iQtdPax, objOcrCaso.lEndereco, _
                objOcrCaso.dtDataAbertura, objOcrCaso.dtDataDocsRec, objOcrCaso.dtDataEnvioAnalise, objOcrCaso.lCGAnalise, objOcrCaso.lCGStatus, _
                objOcrCaso.lCGAutorizadoPor, objOcrCaso.dValorAutorizadoTotalRS, objOcrCaso.dValorAutorizadoTotalUS, objOcrCaso.dtDataLimite, objOcrCaso.dtDataEnvioFinac, _
                objOcrCaso.dtDataProgFinanc, objOcrCaso.dtDataPagtoPax, objOcrCaso.iJudicial, objOcrCaso.sNumProcesso, objOcrCaso.iCondenado, _
                objOcrCaso.dValorCondenacao, objOcrCaso.sComarca, objOcrCaso.dtDataFimProcesso, objOcrCaso.dtDataPagtoCond, objOcrCaso.dValorAutorizadoSeguroRS, _
                objOcrCaso.dValorAutorizadoSeguroUS, objOcrCaso.dValorAutorizadoAssistRS, objOcrCaso.dValorAutorizadoAssistUS, objOcrCaso.dCambio, objOcrCaso.iAnteciparPagtoSeguro, _
                objOcrCaso.iBanco, objOcrCaso.sAgencia, objOcrCaso.sContaCorrente, objOcrCaso.sNomeFavorecido, objOcrCaso.lCodFornFavorecido, _
                objOcrCaso.sFavorecidoCGC, objOcrCaso.dValorInvoicesTotal, objOcrCaso.dValorDespesasTotalRS, objOcrCaso.dValorDespesasTotalUS, objOcrCaso.lNumIntDocTitPagCobertura, _
                objOcrCaso.lNumIntDocTitPagProcesso, objOcrCaso.lNumFatCobertura, objOcrCaso.lNumFatProcesso, objOcrCaso.dtDataPriEvento, objOcrCaso.sNumVouTexto)
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 208438

    End If
    
    If Not bImportacao Then

        lErro = TRVOcrCasosSrv_Inclui(objOcrCaso)
        If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM

        lErro = TRVOcrCasosInvoices_Inclui(objOcrCaso)
        If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM

        lErro = TRVOcrCasosOutrasFat_Inclui(objOcrCaso)
        If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM

        lErro = TRVOcrCasosParcValorCond_Inclui(objOcrCaso)
        If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM

        lErro = TRVOcrCasosTexto_Inclui(lNumIntDoc, TRV_OCRCASOTEXTO_TIPO_OBS, 0, objOcrCaso.sObs)
        If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
            
        lErro = TRVOcrCasos_Grava_DadosCorrelacionados(objOcrCaso)
        If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
            
        lErro = TRVOcrCasosGastosAdv_Inclui(objOcrCaso)
        If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
            
        lErro = TRVOcrCasosDocs_Inclui(objOcrCaso)
        If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
            
        dValorPagar = objOcrCaso.dValorAutorizadoAssistRS + IIf(objOcrCaso.iAnteciparPagtoSeguro = MARCADO, objOcrCaso.dValorAutorizadoSeguroRS, objOcrCaso.dValorAutoSegRespTrvRS)
    
        lErro = TRVAssistVlrAuto_Atualiza(objOcrCaso.dtDataProgFinanc, dValorPagar)
        If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
            
    End If

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVOcrCasos_Grava_EmTrans = SUCESSO

    Exit Function

Erro_TRVOcrCasos_Grava_EmTrans:

    TRVOcrCasos_Grava_EmTrans = gErr

    Select Case gErr

        Case 208433
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 208434, 208435
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVOCRCASOS", gErr)

        Case 208436
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVOCRCASOS", gErr)

        Case 208437
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVOCRCASOS", gErr)

        Case 208438
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_TRVOCRCASOS", gErr)
            
        Case 209267, 209268
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVOCRCASOS_GERANDO_FAT", gErr)

        Case ERRO_SEM_MENSAGEM

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 208439)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Private Function TRVOcrCasosSrv_Exclui(ByVal objOcrCaso As ClassTRVOcrCasos) As Long

Dim lErro As Long
Dim alComando(0 To 1) As Long
Dim iIndice As Integer
Dim iSeq As Integer

On Error GoTo Erro_TRVOcrCasosSrv_Exclui

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 208440
    Next

    'Le a tabelaTRVOcrCasosSrv
    lErro = Comando_ExecutarPos(alComando(0), "SELECT Seq FROM TRVOcrCasosSrv WHERE NumIntDocOcrCaso= ? ", _
                0, iSeq, objOcrCaso.lNumIntDoc)
    If lErro <> AD_SQL_SUCESSO Then gError 208441

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(0))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 208442

    Do While lErro <> AD_SQL_SEM_DADOS

        'Trava registro contra alterações/Leituras
        lErro = Comando_LockExclusive(alComando(0))
        If lErro <> SUCESSO Then gError 208443
    
        lErro = Comando_ExecutarPos(alComando(1), "DELETE FROM TRVOcrCasosSrv", alComando(0))
        If lErro <> AD_SQL_SUCESSO Then gError 208444
        
        lErro = Comando_BuscarProximo(alComando(0))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 208445
        
    Loop

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVOcrCasosSrv_Exclui = SUCESSO

    Exit Function

Erro_TRVOcrCasosSrv_Exclui:

    TRVOcrCasosSrv_Exclui = gErr

    Select Case gErr

        Case 208440
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 208441, 208442, 208445
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVOCRCASOSSRV", gErr)

        Case 208443
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVOCRCASOSSRV", gErr)

        Case 208444
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_TRVOCRCASOSSRV", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 208446)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Private Function TRVOcrCasosInvoices_Exclui(ByVal objOcrCaso As ClassTRVOcrCasos) As Long

Dim lErro As Long
Dim alComando(0 To 1) As Long
Dim iIndice As Integer
Dim iSeq As Integer

On Error GoTo Erro_TRVOcrCasosInvoices_Exclui

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 208447
    Next

    'Le a tabelaTRVOcrCasosInvoices
    lErro = Comando_ExecutarPos(alComando(0), "SELECT Seq FROM TRVOcrCasosInvoices WHERE NumIntDocOcrCaso= ? ", _
                0, iSeq, objOcrCaso.lNumIntDoc)
    If lErro <> AD_SQL_SUCESSO Then gError 208448

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(0))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 208449

    Do While lErro <> AD_SQL_SEM_DADOS

        'Trava registro contra alterações/Leituras
        lErro = Comando_LockExclusive(alComando(0))
        If lErro <> SUCESSO Then gError 208450
    
        lErro = Comando_ExecutarPos(alComando(1), "DELETE FROM TRVOcrCasosInvoices", alComando(0))
        If lErro <> AD_SQL_SUCESSO Then gError 208451
        
        lErro = Comando_BuscarProximo(alComando(0))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 208452
        
    Loop

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVOcrCasosInvoices_Exclui = SUCESSO

    Exit Function

Erro_TRVOcrCasosInvoices_Exclui:

    TRVOcrCasosInvoices_Exclui = gErr

    Select Case gErr

        Case 208447
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 208448, 208449, 208452
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVOCRCASOSINVOICES", gErr)

        Case 208450
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVOCRCASOSINVOICES", gErr)

        Case 208451
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_TRVOCRCASOSINVOICES", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 208453)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Private Function TRVOcrCasosOutrasFat_Exclui(ByVal objOcrCaso As ClassTRVOcrCasos) As Long

Dim lErro As Long
Dim alComando(0 To 1) As Long
Dim iIndice As Integer
Dim iSeq As Integer

On Error GoTo Erro_TRVOcrCasosOutrasFat_Exclui

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 208454
    Next

    'Le a tabelaTRVOcrCasosOutrasFat
    lErro = Comando_ExecutarPos(alComando(0), "SELECT Seq FROM TRVOcrCasosOutrasFat WHERE NumIntDocOcrCaso= ? ", _
                0, iSeq, objOcrCaso.lNumIntDoc)
    If lErro <> AD_SQL_SUCESSO Then gError 208455

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(0))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 208456

    Do While lErro <> AD_SQL_SEM_DADOS

        'Trava registro contra alterações/Leituras
        lErro = Comando_LockExclusive(alComando(0))
        If lErro <> SUCESSO Then gError 208457
    
        lErro = Comando_ExecutarPos(alComando(1), "DELETE FROM TRVOcrCasosOutrasFat", alComando(0))
        If lErro <> AD_SQL_SUCESSO Then gError 208458
        
        lErro = Comando_BuscarProximo(alComando(0))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 208459
        
    Loop

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVOcrCasosOutrasFat_Exclui = SUCESSO

    Exit Function

Erro_TRVOcrCasosOutrasFat_Exclui:

    TRVOcrCasosOutrasFat_Exclui = gErr

    Select Case gErr

        Case 208454
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 208455, 208456, 208459
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVOCRCASOSOUTRASFAT", gErr)

        Case 208457
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVOCRCASOSOUTRASFAT", gErr)

        Case 208458
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_TRVOCRCASOSOUTRASFAT", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 208460)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Private Function TRVOcrCasosTexto_Exclui(ByVal lNumIntDoc As Long, ByVal iTipoPai As Integer, ByVal iSeqPai As Integer) As Long

Dim lErro As Long
Dim alComando(0 To 1) As Long
Dim iIndice As Integer
Dim iSeq As Integer

On Error GoTo Erro_TRVOcrCasosTexto_Exclui

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 208475
    Next

    'Le a tabelaTRVOcrCasosTexto
    lErro = Comando_ExecutarPos(alComando(0), "SELECT Seq FROM TRVOcrCasosTexto WHERE NumIntDocOcrCaso= ? AND TipoPai = ? AND SeqPai = ?", _
                0, iSeq, lNumIntDoc, iTipoPai, iSeqPai)
    If lErro <> AD_SQL_SUCESSO Then gError 208476

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(0))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 208477

    Do While lErro <> AD_SQL_SEM_DADOS

        'Trava registro contra alterações/Leituras
        lErro = Comando_LockExclusive(alComando(0))
        If lErro <> SUCESSO Then gError 208478
    
        lErro = Comando_ExecutarPos(alComando(1), "DELETE FROM TRVOcrCasosTexto", alComando(0))
        If lErro <> AD_SQL_SUCESSO Then gError 208479
        
        lErro = Comando_BuscarProximo(alComando(0))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 208480
        
    Loop

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVOcrCasosTexto_Exclui = SUCESSO

    Exit Function

Erro_TRVOcrCasosTexto_Exclui:

    TRVOcrCasosTexto_Exclui = gErr

    Select Case gErr

        Case 208475
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 208476, 208477, 208480
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVOCRCASOSTEXTO", gErr)

        Case 208478
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVOCRCASOSTEXTO", gErr)

        Case 208479
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_TRVOCRCASOSTEXTO", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 208481)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Private Function TRVOcrCasosParcValorCond_Exclui(ByVal objOcrCaso As ClassTRVOcrCasos) As Long

Dim lErro As Long
Dim alComando(0 To 1) As Long
Dim iIndice As Integer
Dim iSeq As Integer

On Error GoTo Erro_TRVOcrCasosParcValorCond_Exclui

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 208482
    Next

    'Le a tabelaTRVOcrCasosParcValorCond
    lErro = Comando_ExecutarPos(alComando(0), "SELECT Seq FROM TRVOcrCasosParcValorCond WHERE NumIntDocOcrCaso= ? ", _
                0, iSeq, objOcrCaso.lNumIntDoc)
    If lErro <> AD_SQL_SUCESSO Then gError 208483

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(0))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 208484

    Do While lErro <> AD_SQL_SEM_DADOS

        'Trava registro contra alterações/Leituras
        lErro = Comando_LockExclusive(alComando(0))
        If lErro <> SUCESSO Then gError 208485
    
        lErro = Comando_ExecutarPos(alComando(1), "DELETE FROM TRVOcrCasosParcValorCond", alComando(0))
        If lErro <> AD_SQL_SUCESSO Then gError 208486
        
        lErro = Comando_BuscarProximo(alComando(0))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 208487
        
    Loop

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVOcrCasosParcValorCond_Exclui = SUCESSO

    Exit Function

Erro_TRVOcrCasosParcValorCond_Exclui:

    TRVOcrCasosParcValorCond_Exclui = gErr

    Select Case gErr

        Case 208482
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 208483, 208484, 208487
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVOCRCASOSPARCVALORCOND", gErr)

        Case 208485
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVOCRCASOSPARCVALORCOND", gErr)

        Case 208486
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_TRVOCRCASOSPARCVALORCOND", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 208488)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Private Function TRVOcrCasosTexto_Inclui(ByVal lNumIntDoc As Long, ByVal iTipoPai As Integer, ByVal iSeqPai As Integer, ByVal sTexto As String) As Long

Dim lErro As Long
Dim alComando(1 To 1) As Long
Dim iIndice As Integer
Dim iSeq As Integer
Dim sTextoAux As String
Dim sTextoGravar As String

On Error GoTo Erro_TRVOcrCasosTexto_Inclui

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 208489
    Next
    
    sTextoAux = sTexto
    sTextoGravar = left(sTextoAux, 250)

    Do While Len(sTextoGravar) > 0

        iSeq = iSeq + 1
    
        lErro = Comando_Executar(alComando(1), "INSERT INTO TRVOcrCasosTexto( NumIntDocOcrCaso, TipoPai, SeqPai, Seq, Texto) VALUES (?,?,?,?,?)", _
                lNumIntDoc, iTipoPai, iSeqPai, iSeq, sTextoGravar)
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 208490
        
        
        If Len(sTextoAux) > 250 Then
            sTextoAux = Mid(sTextoAux, 251)
        Else
            sTextoAux = ""
        End If
        
        sTextoGravar = left(sTextoAux, 250)
        
    Loop

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVOcrCasosTexto_Inclui = SUCESSO

    Exit Function

Erro_TRVOcrCasosTexto_Inclui:

    TRVOcrCasosTexto_Inclui = gErr

    Select Case gErr

        Case 208489
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 208490
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_TRVOCRCASOSTEXTO", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 208491)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Private Function TRVOcrCasosSrv_Inclui(ByVal objOcrCaso As ClassTRVOcrCasos) As Long

Dim lErro As Long
Dim alComando(1 To 1) As Long
Dim iIndice As Integer
Dim iSeq As Integer
Dim objOcrCasoSrv As ClassTRVOcrCasosSrv

On Error GoTo Erro_TRVOcrCasosSrv_Inclui

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 208492
    Next

    iSeq = 0
    For Each objOcrCasoSrv In objOcrCaso.colCoberturas
    
        iSeq = iSeq + 1

        objOcrCasoSrv.lNumIntDocOcrCaso = objOcrCaso.lNumIntDoc
        objOcrCasoSrv.iSeq = iSeq
    
        lErro = Comando_Executar(alComando(1), "INSERT INTO TRVOcrCasosSrv( NumIntDocOcrCaso, Seq, Solicitado, Autorizado, Descricao, " & _
                "ValorLimite, Moeda, Tipo, ValorSolicitadoRS, ValorSolicitadoUS, " & _
                "ValorAutorizadoRS, ValorAutorizadoUS, CodigoServ) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)", _
                objOcrCasoSrv.lNumIntDocOcrCaso, objOcrCasoSrv.iSeq, objOcrCasoSrv.iSolicitado, objOcrCasoSrv.iAutorizado, objOcrCasoSrv.sDescricao, _
                objOcrCasoSrv.dValorLimite, objOcrCasoSrv.iMoeda, objOcrCasoSrv.iTipo, objOcrCasoSrv.dValorSolicitadoRS, objOcrCasoSrv.dValorSolicitadoUS, _
                objOcrCasoSrv.dValorAutorizadoRS, objOcrCasoSrv.dValorAutorizadoUS, objOcrCasoSrv.lCodigoServ)
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 208493
        
    Next

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVOcrCasosSrv_Inclui = SUCESSO

    Exit Function

Erro_TRVOcrCasosSrv_Inclui:

    TRVOcrCasosSrv_Inclui = gErr

    Select Case gErr

        Case 208492
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 208493
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_TRVOCRCASOSSRV", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 208494)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Private Function TRVOcrCasosInvoices_Inclui(ByVal objOcrCaso As ClassTRVOcrCasos) As Long

Dim lErro As Long
Dim alComando(1 To 1) As Long
Dim iIndice As Integer
Dim iSeq As Integer
Dim objOcrCasoInvoices As ClassTRvOcrCasosInvoices

On Error GoTo Erro_TRVOcrCasosInvoices_Inclui

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 208495
    Next

    iSeq = 0
    For Each objOcrCasoInvoices In objOcrCaso.colInvoices
    
        iSeq = iSeq + 1

        objOcrCasoInvoices.lNumIntDocOcrCaso = objOcrCaso.lNumIntDoc
        objOcrCasoInvoices.iSeq = iSeq
    
        lErro = Comando_Executar(alComando(1), "INSERT INTO TRvOcrCasosInvoices( NumIntDocOcrCaso, Seq, DataRecepcao, DataFatura, " & _
                        "Numero, Moeda, ValorMoeda, ValorRS, Obs) VALUES (?,?,?,?,?,?,?,?,?)", _
                        objOcrCasoInvoices.lNumIntDocOcrCaso, objOcrCasoInvoices.iSeq, objOcrCasoInvoices.dtDataRecepcao, objOcrCasoInvoices.dtDataFatura, _
                        objOcrCasoInvoices.sNumero, objOcrCasoInvoices.iMoeda, objOcrCasoInvoices.dValorMoeda, objOcrCasoInvoices.dValorRS, objOcrCasoInvoices.sObs)
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 208496
        
    Next

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVOcrCasosInvoices_Inclui = SUCESSO

    Exit Function

Erro_TRVOcrCasosInvoices_Inclui:

    TRVOcrCasosInvoices_Inclui = gErr

    Select Case gErr

        Case 208495
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 208496
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_TRVOCRCASOSINVOICES", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 208497)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Private Function TRVOcrCasosOutrasFat_Inclui(ByVal objOcrCaso As ClassTRVOcrCasos) As Long

Dim lErro As Long
Dim alComando(1 To 1) As Long
Dim iIndice As Integer
Dim iSeq As Integer
Dim objOcrCasoOutrasFat As ClassTRVOcrCasosOutrasFat

On Error GoTo Erro_TRVOcrCasosOutrasFat_Inclui

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 208498
    Next

    iSeq = 0
    For Each objOcrCasoOutrasFat In objOcrCaso.colOutrasFaturas
    
        iSeq = iSeq + 1

        objOcrCasoOutrasFat.lNumIntDocOcrCaso = objOcrCaso.lNumIntDoc
        objOcrCasoOutrasFat.iSeq = iSeq
    
        lErro = Comando_Executar(alComando(1), "INSERT INTO TRVOcrCasosOutrasFat( NumIntDocOcrCaso, Seq, Considerar, DataRecepcao, " & _
                "DataFatura, Numero, ValorUS, ValorRS, Descricao) VALUES (?,?,?,?,?,?,?,?,?)", _
                objOcrCasoOutrasFat.lNumIntDocOcrCaso, objOcrCasoOutrasFat.iSeq, objOcrCasoOutrasFat.iConsiderar, objOcrCasoOutrasFat.dtDataRecepcao, _
                objOcrCasoOutrasFat.dtDataFatura, objOcrCasoOutrasFat.sNumero, objOcrCasoOutrasFat.dValorUS, objOcrCasoOutrasFat.dValorRS, objOcrCasoOutrasFat.sDescricao)
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 208499
        
    Next

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVOcrCasosOutrasFat_Inclui = SUCESSO

    Exit Function

Erro_TRVOcrCasosOutrasFat_Inclui:

    TRVOcrCasosOutrasFat_Inclui = gErr

    Select Case gErr

        Case 208498
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 208499
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_TRVOCRCASOSOUTRASFAT", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 208500)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Private Function TRVOcrCasosParcValorCond_Inclui(ByVal objOcrCaso As ClassTRVOcrCasos) As Long

Dim lErro As Long
Dim alComando(1 To 1) As Long
Dim iIndice As Integer
Dim iSeq As Integer
Dim objOcrCasoParcCond As ClassTRVOcrCasosParcCond

On Error GoTo Erro_TRVOcrCasosParcValorCond_Inclui

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 208461
    Next

    iSeq = 0
    For Each objOcrCasoParcCond In objOcrCaso.colParcProcesso
    
        iSeq = iSeq + 1

        objOcrCasoParcCond.lNumIntDocOcrCaso = objOcrCaso.lNumIntDoc
        objOcrCasoParcCond.iSeq = iSeq
    
        lErro = Comando_Executar(alComando(1), "INSERT INTO TRVOcrCasosParcValorCond( NumIntDocOcrCaso, Seq, DataVencimento, Valor, " & _
                "DataPagto) VALUES (?,?,?,?,?)", _
                objOcrCasoParcCond.lNumIntDocOcrCaso, objOcrCasoParcCond.iSeq, objOcrCasoParcCond.dtDataVencimento, objOcrCasoParcCond.dValor, _
                objOcrCasoParcCond.dtDataPagto)
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 208462
        
    Next

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVOcrCasosParcValorCond_Inclui = SUCESSO

    Exit Function

Erro_TRVOcrCasosParcValorCond_Inclui:

    TRVOcrCasosParcValorCond_Inclui = gErr

    Select Case gErr

        Case 208461
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 208462
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_TRVOCRCASOSParcValorCond", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 208463)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

'ROTINAS CRIADAS AUTOMATICAMENTE PELA TELA BROWSECRIA
'GRAVAÇÃO
Public Function TRVOcrCasosHist_Grava(ByVal objOcrCasosHist As ClassTRVOcrCasosHist) As Long

Dim lErro As Long
Dim lTransacao As Long

On Error GoTo Erro_TRVOcrCasosHist_Grava

    'Abertura de transação
    lTransacao = Transacao_Abrir()
    If lTransacao = 0 Then gError 208464

    lErro = CF("TRVOcrCasosHist_Grava_EmTrans", objOcrCasosHist)
    If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
    
    'Confirma a transação
    lErro = Transacao_Commit()
    If lErro <> AD_SQL_SUCESSO Then gError 208465

    TRVOcrCasosHist_Grava = SUCESSO

    Exit Function

Erro_TRVOcrCasosHist_Grava:

    TRVOcrCasosHist_Grava = gErr

    Select Case gErr

        Case 208464
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_TRANSACAO", gErr)

        Case 208465
            Call Rotina_Erro(vbOKOnly, "ERRO_COMMIT", gErr)
            
        Case ERRO_SEM_MENSAGEM

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 208466)

    End Select

    'Desfaz Transação
    Call Transacao_Rollback

    Exit Function

End Function

Public Function TRVOcrCasosHist_Grava_EmTrans(ByVal objOcrCasosHist As ClassTRVOcrCasosHist) As Long

Dim lErro As Long
Dim alComando(0 To 1) As Long
Dim iIndice As Integer
Dim iSeq As Integer

On Error GoTo Erro_TRVOcrCasosHist_Grava_EmTrans

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 208467
    Next
    
    lErro = Comando_Executar(alComando(0), "SELECT MAX(Seq) FROM TRVOcrCasosHist WHERE NumIntDocOcrCaso= ? ", _
                 iSeq, objOcrCasosHist.lNumIntDocOcrCaso)
    If lErro <> AD_SQL_SUCESSO Then gError 208504

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(0))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 208505
    
    iSeq = iSeq + 1

    lErro = Comando_Executar(alComando(1), "INSERT INTO TRVOcrCasosHist( NumIntDocOcrCaso, Seq, Data, Hora, " & _
            "DataReg, HoraReg, Usuario, Origem) VALUES (?,?,?,?,?,?,?,?)", _
            objOcrCasosHist.lNumIntDocOcrCaso, iSeq, objOcrCasosHist.dtData, objOcrCasosHist.dHora, _
            Date, CDbl(Time), gsUsuario, objOcrCasosHist.iOrigem)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 208468
    
    lErro = TRVOcrCasosTexto_Inclui(objOcrCasosHist.lNumIntDocOcrCaso, TRV_OCRCASOTEXTO_TIPO_ASSUNTOHIST, iSeq, objOcrCasosHist.sAssunto)
    If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVOcrCasosHist_Grava_EmTrans = SUCESSO

    Exit Function

Erro_TRVOcrCasosHist_Grava_EmTrans:

    TRVOcrCasosHist_Grava_EmTrans = gErr

    Select Case gErr

        Case 208467
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 208468
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_TRVOCRCASOSHIST", gErr)
            
        Case 208504, 208505
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVOCRCASOSHIST", gErr)
            
        Case ERRO_SEM_MENSAGEM

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 208469)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

'ROTINAS CRIADAS AUTOMATICAMENTE PELA TELA BROWSECRIA
'GRAVAÇÃO
Public Function TRVOcrCasosAnotacoes_Grava(ByVal objOcrCasosAnotacoes As ClassTRVOcrCasosAnotacoes) As Long

Dim lErro As Long
Dim lTransacao As Long

On Error GoTo Erro_TRVOcrCasosAnotacoes_Grava

    'Abertura de transação
    lTransacao = Transacao_Abrir()
    If lTransacao = 0 Then gError 208470

    lErro = CF("TRVOcrCasosAnotacoes_Grava_EmTrans", objOcrCasosAnotacoes)
    If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM

    'Confirma a transação
    lErro = Transacao_Commit()
    If lErro <> AD_SQL_SUCESSO Then gError 208471

    TRVOcrCasosAnotacoes_Grava = SUCESSO

    Exit Function

Erro_TRVOcrCasosAnotacoes_Grava:

    TRVOcrCasosAnotacoes_Grava = gErr

    Select Case gErr

        Case 208470
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_TRANSACAO", gErr)

        Case 208471
            Call Rotina_Erro(vbOKOnly, "ERRO_COMMIT", gErr)
            
        Case ERRO_SEM_MENSAGEM

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 208472)

    End Select

    'Desfaz Transação
    Call Transacao_Rollback

    Exit Function

End Function

Public Function TRVOcrCasosAnotacoes_Grava_EmTrans(ByVal objOcrCasosAnotacoes As ClassTRVOcrCasosAnotacoes) As Long

Dim lErro As Long
Dim alComando(0 To 1) As Long
Dim iIndice As Integer
Dim iSeq As Integer

On Error GoTo Erro_TRVOcrCasosAnotacoes_Grava_EmTrans

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 208473
    Next
    
    lErro = Comando_Executar(alComando(0), "SELECT MAX(Seq) FROM TRVOcrCasosAnotacoes WHERE NumIntDocOcrCaso= ? ", _
                 iSeq, objOcrCasosAnotacoes.lNumIntDocOcrCaso)
    If lErro <> AD_SQL_SUCESSO Then gError 208502

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(0))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 208503
    
    iSeq = iSeq + 1

    lErro = Comando_Executar(alComando(1), "INSERT INTO TRVOcrCasosAnotacoes( NumIntDocOcrCaso, Seq, Data, Hora, " & _
            "DataReg, HoraReg, Usuario) VALUES (?,?,?,?,?,?,?)", _
            objOcrCasosAnotacoes.lNumIntDocOcrCaso, iSeq, objOcrCasosAnotacoes.dtData, objOcrCasosAnotacoes.dHora, _
            Date, CDbl(Time), gsUsuario)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 208474

    lErro = TRVOcrCasosTexto_Inclui(objOcrCasosAnotacoes.lNumIntDocOcrCaso, TRV_OCRCASOTEXTO_TIPO_ANOTTEXTO, iSeq, objOcrCasosAnotacoes.sTexto)
    If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVOcrCasosAnotacoes_Grava_EmTrans = SUCESSO

    Exit Function

Erro_TRVOcrCasosAnotacoes_Grava_EmTrans:

    TRVOcrCasosAnotacoes_Grava_EmTrans = gErr

    Select Case gErr

        Case 208473
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 208474
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_TRVOCRCASOSANOTACOES", gErr)

        Case 208502, 208503
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVOCRCASOSANOTACOES", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 208501)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Public Function CamposGenericos_ValidaExclusao_TrvOcrCaso_Analise() As Long
'Verifica se é válida a exclusão de valores para o campo Tipo

Dim lComando As Long
Dim lErro As Long
Dim sCodigo As String
Dim lValor As Long

On Error GoTo Erro_CamposGenericos_ValidaExclusao_TrvOcrCaso_Analise
    
    'Abre comando
    lComando = Comando_Abrir()
    If lComando = 0 Then gError 208684
    
    sCodigo = String(STRING_TRV_MAXIMO, 0)
    
    'Busca nas ocorrências origens que não existam na tabela CamposGenericos Valores
    lErro = Comando_Executar(lComando, "SELECT Codigo, CGAnalise FROM TRVOcrCasos WHERE CGAnalise <> 0 AND CGAnalise NOT IN (SELECT CodValor FROM CamposGenericosValores WHERE CodCampo = ?) ", sCodigo, lValor, CAMPOSGENERICOS_TRVOCRCASO_ANALISE)
    If lErro <> AD_SQL_SUCESSO Then gError 208685
    
    'Posiciona no primeiro registro
    lErro = Comando_BuscarPrimeiro(lComando)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 208686
    
    'Se encontrou algum registro => erro de inconsistência
    If lErro = AD_SQL_SUCESSO Then gError 208687
    
    'Fecha comando
    Call Comando_Fechar(lComando)
    
    CamposGenericos_ValidaExclusao_TrvOcrCaso_Analise = SUCESSO
    
    Exit Function
    
Erro_CamposGenericos_ValidaExclusao_TrvOcrCaso_Analise:

    CamposGenericos_ValidaExclusao_TrvOcrCaso_Analise = gErr
    
    Select Case gErr
    
        Case 208684
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)
        
        Case 208685, 208686
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_CAMPOSGENERICOS", gErr, CAMPOSGENERICOS_TRVOCRCASO_ANALISE)
        
        Case 208687
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_TRVOCRCASO_ANALISE", gErr, lValor, sCodigo)
            
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error$, 208688)
    
    End Select

    'Fecha comando
    Call Comando_Fechar(lComando)

End Function

Public Function CamposGenericos_ValidaExclusao_TrvOcrCaso_Status() As Long
'Verifica se é válida a exclusão de valores para o campo Tipo

Dim lComando As Long
Dim lErro As Long
Dim sCodigo As String
Dim lValor As Long

On Error GoTo Erro_CamposGenericos_ValidaExclusao_TrvOcrCaso_Status
    
    'Abre comando
    lComando = Comando_Abrir()
    If lComando = 0 Then gError 208689
    
    sCodigo = String(STRING_TRV_MAXIMO, 0)
    
    'Busca nas ocorrências origens que não existam na tabela CamposGenericos Valores
    lErro = Comando_Executar(lComando, "SELECT Codigo, CGStatus FROM TRVOcrCasos WHERE CGStatus <> 0 AND CGStatus NOT IN (SELECT CodValor FROM CamposGenericosValores WHERE CodCampo = ?) ", sCodigo, lValor, CAMPOSGENERICOS_TRVOCRCASO_STATUS)
    If lErro <> AD_SQL_SUCESSO Then gError 208690
    
    'Posiciona no primeiro registro
    lErro = Comando_BuscarPrimeiro(lComando)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 208691
    
    'Se encontrou algum registro => erro de inconsistência
    If lErro = AD_SQL_SUCESSO Then gError 208692
    
    'Fecha comando
    Call Comando_Fechar(lComando)
    
    CamposGenericos_ValidaExclusao_TrvOcrCaso_Status = SUCESSO
    
    Exit Function
    
Erro_CamposGenericos_ValidaExclusao_TrvOcrCaso_Status:

    CamposGenericos_ValidaExclusao_TrvOcrCaso_Status = gErr
    
    Select Case gErr
    
        Case 208689
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)
        
        Case 208690, 208691
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_CAMPOSGENERICOS", gErr, CAMPOSGENERICOS_TRVOCRCASO_STATUS)
        
        Case 208692
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_TRVOCRCASO_STATUS", gErr, lValor, sCodigo)
            
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error$, 208693)
    
    End Select

    'Fecha comando
    Call Comando_Fechar(lComando)

End Function

Public Function CamposGenericos_ValidaExclusao_TrvOcrCaso_AutoPor() As Long
'Verifica se é válida a exclusão de valores para o campo Tipo

Dim lComando As Long
Dim lErro As Long
Dim sCodigo As String
Dim lValor As Long

On Error GoTo Erro_CamposGenericos_ValidaExclusao_TrvOcrCaso_AutoPor
    
    'Abre comando
    lComando = Comando_Abrir()
    If lComando = 0 Then gError 208694
    
    sCodigo = String(STRING_TRV_MAXIMO, 0)
    
    'Busca nas ocorrências origens que não existam na tabela CamposGenericos Valores
    lErro = Comando_Executar(lComando, "SELECT Codigo, CGAutorizadoPor FROM TRVOcrCasos WHERE CGAutorizadoPor <> 0 AND CGAutorizadoPor NOT IN (SELECT CodValor FROM CamposGenericosValores WHERE CodCampo = ?) ", sCodigo, lValor, CAMPOSGENERICOS_TRVOCRCASO_AUTOPOR)
    If lErro <> AD_SQL_SUCESSO Then gError 208695
    
    'Posiciona no primeiro registro
    lErro = Comando_BuscarPrimeiro(lComando)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 208696
    
    'Se encontrou algum registro => erro de inconsistência
    If lErro = AD_SQL_SUCESSO Then gError 208697
    
    'Fecha comando
    Call Comando_Fechar(lComando)
    
    CamposGenericos_ValidaExclusao_TrvOcrCaso_AutoPor = SUCESSO
    
    Exit Function
    
Erro_CamposGenericos_ValidaExclusao_TrvOcrCaso_AutoPor:

    CamposGenericos_ValidaExclusao_TrvOcrCaso_AutoPor = gErr
    
    Select Case gErr
    
        Case 208694
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)
        
        Case 208695, 208696
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_CAMPOSGENERICOS", gErr, CAMPOSGENERICOS_TRVOCRCASO_AUTOPOR)
        
        Case 208697
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_TRVOCRCASO_AUTOPOR", gErr, lValor, sCodigo)
            
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error$, 208698)
    
    End Select

    'Fecha comando
    Call Comando_Fechar(lComando)

End Function

Private Function TRVOcrCasos_Grava_DadosCorrelacionados(ByVal objOcrCaso As ClassTRVOcrCasos) As Long

Dim lErro As Long
Dim objForn  As New ClassFornecedor
Dim objFilialForn As New ClassFilialFornecedor
Dim colCategoriaItemForn As New Collection
Dim lEndAnterior As Long

On Error GoTo Erro_TRVOcrCasos_Grava_DadosCorrelacionados
    
    'Se já gerou o registro no cadastro de fornecedor ajusta com os dados da tela
    If objOcrCaso.lCodFornFavorecido <> 0 Then

        objForn.lCodigo = objOcrCaso.lCodFornFavorecido
        
        lErro = CF("Fornecedor_Le", objForn)
        If lErro <> SUCESSO And lErro <> 12729 Then gError ERRO_SEM_MENSAGEM
        
        If lErro = SUCESSO Then
        
            objForn.sNomeReduzido = left(objOcrCaso.sNomeFavorecido, STRING_FORNECEDOR_NOME_REDUZIDO - 12) & "(" & CStr(objOcrCaso.lCodFornFavorecido) & ")"
            objForn.sRazaoSocial = left(objOcrCaso.sNomeFavorecido, STRING_FORNECEDOR_RAZAO_SOC)
            
            objForn.iBanco = objOcrCaso.iBanco
            objForn.sContaCorrente = objOcrCaso.sContaCorrente
            objForn.sAgencia = objOcrCaso.sAgencia
            objForn.sCgc = objOcrCaso.sFavorecidoCGC
            
            'Lê as categoria deste fornecedor
            objFilialForn.lCodFornecedor = objForn.lCodigo
            objFilialForn.iCodFilial = FILIAL_MATRIZ
             
            lErro = CF("FilialFornecedorCategorias_Le_FornFilial", objFilialForn, colCategoriaItemForn)
            If lErro <> SUCESSO And lErro <> 127085 Then gError ERRO_SEM_MENSAGEM
             
            Set objForn.colCategoriaItem = colCategoriaItemForn
        
            lEndAnterior = objOcrCaso.objEndereco.lCodigo
            objOcrCaso.objEndereco.lCodigo = objForn.lEndereco
            
            lErro = CF("Fornecedor_Grava_EmTrans", objForn, objOcrCaso.objEndereco)
            objOcrCaso.objEndereco.lCodigo = lEndAnterior
            If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM

        End If


    End If

    TRVOcrCasos_Grava_DadosCorrelacionados = SUCESSO

    Exit Function

Erro_TRVOcrCasos_Grava_DadosCorrelacionados:

    TRVOcrCasos_Grava_DadosCorrelacionados = gErr

    Select Case gErr

        Case ERRO_SEM_MENSAGEM
        
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 208699)

    End Select

    Exit Function

End Function

Public Function TRVLibOcrCasos_Libera(ByVal iTipo As Integer, ByVal colOcorrenciais As Collection) As Long

Dim lErro As Long
Dim lTransacao As Long

On Error GoTo Erro_TRVLibOcrCasos_Libera

    'Abertura de transação
    lTransacao = Transacao_Abrir()
    If lTransacao = 0 Then gError 208756

    lErro = TRVLibOcrCasos_Libera_EmTrans(iTipo, colOcorrenciais)
    If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM

    'Confirma a transação
    lErro = Transacao_Commit()
    If lErro <> AD_SQL_SUCESSO Then gError 208757

    TRVLibOcrCasos_Libera = SUCESSO

    Exit Function

Erro_TRVLibOcrCasos_Libera:

    TRVLibOcrCasos_Libera = gErr

    Select Case gErr

        Case 208756
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_TRANSACAO", gErr)

        Case 208757
            Call Rotina_Erro(vbOKOnly, "ERRO_COMMIT", gErr)
            
        Case ERRO_SEM_MENSAGEM

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 208758)

    End Select

    'Desfaz Transação
    Call Transacao_Rollback

    Exit Function

End Function

Public Function TRVLibOcrCasos_Libera_EmTrans(ByVal iTipo As Integer, ByVal colOcorrenciais As Collection) As Long

Dim lErro As Long
Dim alComando(0 To 5) As Long
Dim iIndice As Integer
Dim objOcrCasos As ClassTRVOcrCasos
Dim objOCRCasosBD As ClassTRVOcrCasos
Dim lNumIntDoc As Long, sConteudo As String, lProxCP As Long
Dim objTRVConfig As New ClassTRVConfig

On Error GoTo Erro_TRVLibOcrCasos_Libera_EmTrans

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 208765
    Next
    
    lErro = CF("TRVConfig_Le_Lockado", alComando(2), TRVCONFIG_PROX_NUM_TITREC, EMPRESA_TODA, sConteudo)
    If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
    
    lProxCP = StrParaLong(sConteudo)
    
    For Each objOcrCasos In colOcorrenciais
    
        'Le a tabelaTRVOcrCasos
        lErro = Comando_ExecutarPos(alComando(0), "SELECT NumIntDoc FROM TRVOcrCasos WHERE Codigo= ? ", _
                    0, lNumIntDoc, objOcrCasos.sCodigo)
        If lErro <> AD_SQL_SUCESSO Then gError 208766
    
        'Busca Primeiro
        lErro = Comando_BuscarPrimeiro(alComando(0))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 208767

        If lErro <> AD_SQL_SUCESSO Then gError 208768
        
        'Trava registro contra alterações/Leituras
        lErro = Comando_LockExclusive(alComando(0))
        If lErro <> SUCESSO Then gError 208769
    
        'Le por completo o que está no BD
        Set objOCRCasosBD = New ClassTRVOcrCasos
        
        objOCRCasosBD.sCodigo = objOcrCasos.sCodigo
    
        lErro = CF("TRVOcrCasos_Le", objOCRCasosBD)
        If lErro <> SUCESSO And lErro <> ERRO_LEITURA_SEM_DADOS Then gError ERRO_SEM_MENSAGEM
        
        If iTipo = TRV_OCRCASOS_LIB_COBERTURA Then
        
            'Verifica se alterou algum dado importante desde que trouxe para tela
            'Não pode marcar ou desmarcar uma antecipação de pagamento
            If objOCRCasosBD.iAnteciparPagtoSeguro <> objOcrCasos.iAnteciparPagtoSeguro Then gError 208770
        
            'Não pode mexer no valor do que é assistência e nem do que é seguro com antecipação de pagamento
            If Abs(objOCRCasosBD.dValorAutorizadoAssistRS - objOcrCasos.dValorAutorizadoAssistRS) > DELTA_VALORMONETARIO Then gError 208771
            If objOCRCasosBD.iAnteciparPagtoSeguro = MARCADO And Abs(objOCRCasosBD.dValorAutorizadoSeguroRS - objOcrCasos.dValorAutorizadoSeguroRS) > DELTA_VALORMONETARIO Then gError 208772
            If Abs(objOCRCasosBD.dValorAutoSegRespTrvRS - objOcrCasos.dValorAutoSegRespTrvRS) > DELTA_VALORMONETARIO Then gError 208772
    
            'Não pode alterar uma autorização
            If objOCRCasosBD.lCGAutorizadoPor <> objOcrCasos.lCGAutorizadoPor Then gError 208773
            
            'Não pode já ter faturado
            If objOCRCasosBD.lNumIntDocTitPagCobertura <> 0 Then gError 208774
            
        Else
        
            'Não pode alterar o valor
            If Abs(objOCRCasosBD.dValorCondenacao - objOcrCasos.dValorCondenacao) > DELTA_VALORMONETARIO Then gError 208794
        
            'Não pode alterar o número do processo
            If UCase(objOCRCasosBD.sNumProcesso) <> UCase(objOcrCasos.sNumProcesso) Then gError 208795
        
            'Não pode mudar a condenação
            If objOCRCasosBD.iCondenado <> objOcrCasos.iCondenado Then gError 208796
        
            'Não pode mudar a data da finalização do processo
            If objOCRCasosBD.dtDataFimProcesso <> objOcrCasos.dtDataFimProcesso Then gError 208797
        
            'Não pode já ter faturado
            If objOCRCasosBD.lNumIntDocTitPagProcesso <> 0 Then gError 208798
        
        End If
        
        objOCRCasosBD.sCcl = objOcrCasos.sCcl

        'Se ainda não cadastrou o favorecido como um fornecedor
        If objOCRCasosBD.lCodFornFavorecido = 0 Then
        
            'GERAR O FORNECEDOR
            lErro = TRVOcrCasos_Gera_Fornecedor(objOCRCasosBD)
            If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
        
        End If
        
        'Se vai antecipar o Seguro na liberação de cobertura
        If iTipo = TRV_OCRCASOS_LIB_COBERTURA And objOCRCasosBD.iAnteciparPagtoSeguro = MARCADO And objOCRCasosBD.dValorAutorizadoSeguroRS > 0 Then
        
            'GERAR O PRÉ A RECEBER
            lErro = TRVOcrCasos_Gera_TitRec_AntecSeguro(objOCRCasosBD, alComando(3))
            If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
        
        End If
        
        'GERAR O A PAGAR
        lErro = TRVOcrCasos_Gera_TitPag(iTipo, objOCRCasosBD, lProxCP)
        If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
        
        lProxCP = lProxCP + 1
        
        'Se é liberação de cobertura
        If iTipo = TRV_OCRCASOS_LIB_COBERTURA Then
            lErro = Comando_ExecutarPos(alComando(1), "UPDATE TRVOcrCasos SET CodFornFavorecido = ?, NumIntDocTitPagCobertura = ?, NumFatCobertura = ?, DataEnvioFinac = ?", _
                        alComando(0), objOCRCasosBD.lCodFornFavorecido, objOCRCasosBD.lNumIntDocTitPagCobertura, objOCRCasosBD.lNumFatCobertura, objOCRCasosBD.dtDataEnvioFinac)
        Else
            lErro = Comando_ExecutarPos(alComando(1), "UPDATE TRVOcrCasos SET CodFornFavorecido = ?, NumIntDocTitPagProcesso = ?, NumFatProcesso = ?", _
                        alComando(0), objOCRCasosBD.lCodFornFavorecido, objOCRCasosBD.lNumIntDocTitPagProcesso, objOCRCasosBD.lNumFatProcesso)
        End If
        If lErro <> AD_SQL_SUCESSO Then gError 208775
    
    Next
    
    Set objTRVConfig = New ClassTRVConfig
    
    objTRVConfig.sCodigo = TRVCONFIG_PROX_NUM_TITREC
    objTRVConfig.sConteudo = CStr(lProxCP)
    
    lErro = CF("TRVConfig_Grava_Lockado", alComando(2), alComando(4), objTRVConfig)
    If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
    
    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVLibOcrCasos_Libera_EmTrans = SUCESSO

    Exit Function

Erro_TRVLibOcrCasos_Libera_EmTrans:

    TRVLibOcrCasos_Libera_EmTrans = gErr

    Select Case gErr

        Case 208759
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 208766, 208767
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVOCRCASOS", gErr)

        Case 208768
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVOCRCASOS_NAO_CADASTRADO", gErr, objOcrCasos.sCodigo)

        Case 208769
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVOCRCASOS", gErr)
            
        Case 208770
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVOCRCASOS_TROCA_ANTEC", gErr, objOcrCasos.sCodigo)

        Case 208771
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVOCRCASOS_TROCA_VALORASSIST", gErr, objOcrCasos.sCodigo)

        Case 208772
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVOCRCASOS_TROCA_VALORSEG", gErr, objOcrCasos.sCodigo)

        Case 208773
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVOCRCASOS_TROCA_AUTOPOR", gErr, objOcrCasos.sCodigo)

        Case 208774, 208798
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVOCRCASOS_JA_FAT", gErr, objOcrCasos.sCodigo)

        Case 208775
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVOCRCASOS", gErr)
            
        Case 208794
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVOCRCASOS_TROCA_VALORCOND", gErr, objOcrCasos.sCodigo)

        Case 208795
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVOCRCASOS_TROCA_NUMPROCESSO", gErr, objOcrCasos.sCodigo)

        Case 208796
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVOCRCASOS_TROCA_COND", gErr, objOcrCasos.sCodigo)

        Case 208797
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVOCRCASOS_TROCA_DATAFIMPROC", gErr, objOcrCasos.sCodigo)

        Case ERRO_SEM_MENSAGEM

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 208761)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Public Function TRVOcrCasos_Gera_Fornecedor(ByVal objOcrCasos As ClassTRVOcrCasos) As Long

Dim lErro As Long
Dim lCodigo As Long
Dim objForn As New ClassFornecedor

On Error GoTo Erro_TRVOcrCasos_Gera_Fornecedor
    
    lErro = CF("Config_ObterAutomatico_EmTrans", "TRVConfig", TRVCONFIG_PROX_NUM_FAV_OCRCASO, "Fornecedores", "Codigo", lCodigo)
    If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM

    objOcrCasos.lCodFornFavorecido = lCodigo

    objForn.lCodigo = lCodigo
    objForn.sNomeReduzido = left(objOcrCasos.sNomeFavorecido, STRING_FORNECEDOR_NOME_REDUZIDO - 12) & "(" & CStr(objOcrCasos.lCodFornFavorecido) & ")"
    objForn.sRazaoSocial = left(objOcrCasos.sNomeFavorecido, STRING_FORNECEDOR_RAZAO_SOC)
    
    objForn.iBanco = objOcrCasos.iBanco
    objForn.sContaCorrente = objOcrCasos.sContaCorrente
    objForn.sAgencia = objOcrCasos.sAgencia
    objForn.sCgc = objOcrCasos.sFavorecidoCGC
            
    objForn.iTipo = TRV_TIPO_CLIENTE_PASSAGEIRO
    objForn.iAtivo = FORN_ATIVO
    
    objForn.sObservacao = "Favorecido da OCR - Assist.: " & objOcrCasos.sCodigo & " Voucher: " & objOcrCasos.sTipVou & objOcrCasos.sSerie & CStr(objOcrCasos.lNumVou)
    
    objOcrCasos.objEndereco.lCodigo = 0
    
    lErro = CF("Fornecedor_Grava_EmTrans", objForn, objOcrCasos.objEndereco)
    If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM

    TRVOcrCasos_Gera_Fornecedor = SUCESSO

    Exit Function

Erro_TRVOcrCasos_Gera_Fornecedor:

    TRVOcrCasos_Gera_Fornecedor = gErr

    Select Case gErr
    
        Case ERRO_SEM_MENSAGEM

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 208760)

    End Select

    Exit Function

End Function

Public Function TRVOcrCasos_Gera_TitRec_AntecSeguro(ByVal objOcrCasos As ClassTRVOcrCasos, ByVal lComando As Long) As Long

Dim lErro As Long
Dim sDescricao As String

On Error GoTo Erro_TRVOcrCasos_Gera_TitRec_AntecSeguro
    
    sDescricao = left("OCR: " & objOcrCasos.sCodigo & " Vou: " & objOcrCasos.sTipVou & objOcrCasos.sSerie & CStr(objOcrCasos.lNumVou) & " Fav: " & objOcrCasos.sNomeFavorecido, STRING_TRV_MAXIMO)
    
    lErro = Comando_Executar(lComando, "INSERT INTO TRVOcrCasosPreRec(NumIntDocOcrCaso, Valor, Data, Descricao) VALUES (?,?,?,?)", _
            objOcrCasos.lNumIntDoc, objOcrCasos.dValorAutorizadoSeguroRS - objOcrCasos.dValorAutoSegRespTrvRS, Date, sDescricao)
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 208764

    TRVOcrCasos_Gera_TitRec_AntecSeguro = SUCESSO

    Exit Function

Erro_TRVOcrCasos_Gera_TitRec_AntecSeguro:

    TRVOcrCasos_Gera_TitRec_AntecSeguro = gErr

    Select Case gErr
    
        Case 208764
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_TRVOCRCASOSPREREC", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 208762)

    End Select

    Exit Function

End Function

Public Function TRVOcrCasos_Gera_TitPag(ByVal iTipo As Integer, ByVal objOcrCasos As ClassTRVOcrCasos, ByVal lProxNum As Long) As Long

Dim lErro As Long
Dim dValorPagar As Double
Dim objTitPag As New ClassTituloPagar
Dim objParcelaPagar As New ClassParcelaPagar
Dim colParcelaPagar As New colParcelaPagar
Dim objContabil As ClassContabil
Dim objCtb As New ClassImpCoinfoFatCPCtb
Dim objContabAutomatica As New ClassContabAutomatica
Dim dtDataVenctoReal As Date, sDescricao As String, objProjeto As New ClassProjetos
Dim sTipo As String, objParc As ClassTRVOcrCasosParcCond, colParcelas As New Collection
Dim iNumParc As Integer, dValorSeguro As Double, objPRJInfo As New ClassProjetoInfo, objPRJCR As New ClassPRJCR

On Error GoTo Erro_TRVOcrCasos_Gera_TitPag
   
    dValorSeguro = 0
    If iTipo = TRV_OCRCASOS_LIB_COBERTURA Then
        dValorPagar = objOcrCasos.dValorAutorizadoAssistRS
        If objOcrCasos.iAnteciparPagtoSeguro = MARCADO Then
            dValorSeguro = objOcrCasos.dValorAutorizadoSeguroRS
            dValorPagar = dValorPagar + objOcrCasos.dValorAutorizadoSeguroRS
        Else
            dValorPagar = dValorPagar + objOcrCasos.dValorAutoSegRespTrvRS
        End If
        sTipo = "Pagto Cobertura"
        objTitPag.sSiglaDocumento = TIPODOC_FATURA_OCR_COBR
        objCtb.sModelo = "OCRC"
        Set objParc = New ClassTRVOcrCasosParcCond
        objParc.dValor = dValorPagar
        If objOcrCasos.dtDataProgFinanc = DATA_NULA Then gError 209269
'            objParc.dtDataVencimento = objOcrCasos.dtDataLimite
'        Else
            objParc.dtDataVencimento = objOcrCasos.dtDataProgFinanc
'        End If
        colParcelas.Add objParc
        objPRJInfo.sProjeto = "200102"
    Else
        dValorPagar = objOcrCasos.dValorCondenacao
        sTipo = "Pagto Processo"
        objTitPag.sSiglaDocumento = TIPODOC_FATURA_OCR_JURI
        objCtb.sModelo = "OCRJ"
        Set colParcelas = objOcrCasos.colParcProcesso
        objPRJInfo.sProjeto = "069966"
    End If
    
    objPRJCR.dValor = dValorPagar
    objPRJCR.sItem = "PROD"
    objPRJCR.iTipoOrigem = PRJ_CR_TIPO_TITPAG
    objPRJCR.iCalcAuto = MARCADO
    objPRJCR.dPercent = 1
    objPRJInfo.iFilialEmpresa = 1
    
    objPRJInfo.colPRJCustoReceitaReal.Add objPRJCR
    
    Set objTitPag.objProjetoInfo = objPRJInfo
    
    objProjeto.sCodigo = objPRJInfo.sProjeto
    objProjeto.iFilialEmpresa = objPRJInfo.iFilialEmpresa
    
    'Le
    lErro = CF("Projetos_Le", objProjeto)
    If lErro <> SUCESSO And lErro <> ERRO_LEITURA_SEM_DADOS Then gError ERRO_SEM_MENSAGEM
    
    objPRJInfo.lNumIntDocPRJ = objProjeto.lNumIntDoc
    objPRJCR.lNumIntDocPRJ = objProjeto.lNumIntDoc
    
    'Se não encontrou => Erro
    If lErro = ERRO_LEITURA_SEM_DADOS Then gError 209161
    
    sDescricao = left("OCR: " & objOcrCasos.sCodigo & " Voucher: " & objOcrCasos.sTipVou & objOcrCasos.sSerie & CStr(objOcrCasos.lNumVou) & " Tipo: " & sTipo, STRING_TRV_MAXIMO)
    
    objTitPag.lFornecedor = objOcrCasos.lCodFornFavorecido
    objTitPag.iFilial = FILIAL_MATRIZ
    objTitPag.iFilialPedCompra = FILIAL_MATRIZ
    objTitPag.lNumTitulo = lProxNum
    objTitPag.dtDataEmissao = Date
    objTitPag.dValorTotal = dValorPagar
    objTitPag.dValorProdutos = dValorPagar
    objTitPag.dSaldo = dValorPagar
    objTitPag.iFilialEmpresa = FILIAL_MATRIZ
    objTitPag.sHistorico = sDescricao
    
    objTitPag.iNumParcelas = colParcelas.Count
    
    iNumParc = 0
    For Each objParc In colParcelas
    
        iNumParc = iNumParc + 1
        
        objParcelaPagar.iNumParcela = iNumParc
    
        objParcelaPagar.dtDataVencimento = objParc.dtDataVencimento
           
        'Calcula Data Vencimento Real
        lErro = CF("DataVencto_Real", objParcelaPagar.dtDataVencimento, dtDataVenctoReal)
        If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
        
        objParcelaPagar.dtDataVencimentoReal = dtDataVenctoReal
    
        objParcelaPagar.dValor = objParc.dValor
        objParcelaPagar.iTipoCobranca = TIPO_COBRANCA_DOC
        objParcelaPagar.iStatus = STATUS_ABERTO
    
        If objOcrCasos.iBanco = giBancoPadraoPagto Then
            objParcelaPagar.iTipoCobranca = TIPO_COBRANCA_DEP_CONTA
        End If
    
        With objParcelaPagar
            colParcelaPagar.Add .lNumIntDoc, .lNumIntTitulo, .iNumParcela, .iStatus, .dtDataVencimento, .dtDataVencimentoReal, .dSaldo, .dValor, .iPortador, .iProxSeqBaixa, .iTipoCobranca, .iBancoCobrador, .sNossoNumero, .sCodigoDeBarras
        End With
        
    Next

    'Grava o Título a Pagar
    lErro = CF("NFFatPag_Grava_EmTrans", objTitPag, colParcelaPagar, objContabil)
    If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
    
    If iTipo = TRV_OCRCASOS_LIB_COBERTURA Then
        objOcrCasos.dtDataEnvioFinac = objTitPag.dtDataEmissao
        objOcrCasos.lNumIntDocTitPagCobertura = objTitPag.lNumIntDoc
        objOcrCasos.lNumFatCobertura = objTitPag.lNumTitulo
    Else
        objOcrCasos.lNumIntDocTitPagProcesso = objTitPag.lNumIntDoc
        objOcrCasos.lNumFatProcesso = objTitPag.lNumTitulo
    End If
    
    objTitPag.sNatureza = objOcrCasos.sCcl
    objTitPag.dValorSeguro = dValorSeguro
    
    'gravar a contabilizacao
    lErro = objContabAutomatica.Inicializa_Contab(objCtb, MODULO_CONTASAPAGAR, "CP", objTitPag.dtDataEmissao, objTitPag.dtDataEmissao)
    If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM

    lErro = objContabAutomatica.GeraContabilizacao(objTitPag)
    If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM

    Set objContabAutomatica = Nothing
    Call objCtb.Encerrando
    Set objCtb = Nothing

    TRVOcrCasos_Gera_TitPag = SUCESSO

    Exit Function

Erro_TRVOcrCasos_Gera_TitPag:

    TRVOcrCasos_Gera_TitPag = gErr

    Select Case gErr
    
        Case 209161
            Call Rotina_Erro(vbOKOnly, "ERRO_PROJETOS_NAO_CADASTRADO2", gErr, objProjeto.sCodigo, objProjeto.iFilialEmpresa)
    
        Case 209269
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVOCRCASOS_LIB_SEM_DATAPROG", gErr, objOcrCasos.sCodigo)
    
        Case ERRO_SEM_MENSAGEM

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 208763)

    End Select

    Exit Function

End Function

Public Function TRVOcrCasosReemb_Grava(ByVal objTitRec As ClassTituloReceber, ByVal colPR As Collection) As Long

Dim lErro As Long
Dim lTransacao As Long

On Error GoTo Erro_TRVOcrCasosReemb_Grava

    'Abertura de transação
    lTransacao = Transacao_Abrir()
    If lTransacao = 0 Then gError 208859

    lErro = TRVOcrCasosReemb_Grava_EmTrans(objTitRec, colPR)
    If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM

    'Confirma a transação
    lErro = Transacao_Commit()
    If lErro <> AD_SQL_SUCESSO Then gError 208860

    TRVOcrCasosReemb_Grava = SUCESSO

    Exit Function

Erro_TRVOcrCasosReemb_Grava:

    TRVOcrCasosReemb_Grava = gErr

    Select Case gErr

        Case 208859
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_TRANSACAO", gErr)

        Case 208860
            Call Rotina_Erro(vbOKOnly, "ERRO_COMMIT", gErr)
            
        Case ERRO_SEM_MENSAGEM

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 208861)

    End Select

    'Desfaz Transação
    Call Transacao_Rollback

    Exit Function

End Function

Public Function TRVOcrCasosReemb_Grava_EmTrans(ByVal objTitRec As ClassTituloReceber, ByVal colPR As Collection) As Long

Dim lErro As Long
Dim alComando(0 To 12) As Long
Dim iIndice As Integer
Dim objContabil As ClassContabil
Dim objCtb As New ClassImpCoinfoFatCRCtb
Dim objContabAutomatica As New ClassContabAutomatica
Dim objPR As ClassTRVOcrCasosPreRec
Dim lNumFatTitRecReembolso As Long, dValor As Double
Dim objBaixaReceber As New ClassBaixaReceber
Dim objMovCCI As New ClassMovContaCorrente
Dim objParcRec As ClassParcelaReceber
Dim objTRVConfig As ClassTRVConfig, sCcl As String

On Error GoTo Erro_TRVOcrCasosReemb_Grava_EmTrans

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 208862
    Next
    
    sCcl = objTitRec.sNatureza
    objTitRec.sNatureza = ""
    
    Set objParcRec = objTitRec.colParcelaReceber.Item(1)
    
    'Cadastra o título
    lErro = FAT_TituloReceber_Insere_TRV(alComando(0), alComando(1), alComando(2), alComando(3), alComando(4), alComando(5), alComando(6), alComando(7), alComando(8), alComando(9), objTitRec, objTitRec.colParcelaReceber)
    If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
                      
    'Contabiliza o lançamento
    objCtb.sModelo = "OCRR"
    objTitRec.sCcl = sCcl
    
    lErro = objContabAutomatica.Inicializa_Contab(objCtb, MODULO_CONTASARECEBER, "CR", objTitRec.dtDataEmissao, objTitRec.dtDataEmissao)
    If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM

    lErro = objContabAutomatica.GeraContabilizacao(objTitRec, Nothing)
    If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM

    lErro = objContabAutomatica.Finaliza_Contab()
    If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM

    Set objContabAutomatica = Nothing
    Call objCtb.Encerrando
    Set objCtb = Nothing
    
    'Associa com os pré a receber
    For Each objPR In colPR
    
        lErro = Comando_ExecutarPos(alComando(10), "SELECT NumFatTitRecReembolso, Valor FROM TRVOcrCasosPreRec WHERE NumIntDocOcrCaso = ? ", _
                    0, lNumFatTitRecReembolso, dValor, objPR.lNumIntDocOcrCaso)
        If lErro <> AD_SQL_SUCESSO Then gError 208863
    
        'Busca Primeiro
        lErro = Comando_BuscarPrimeiro(alComando(10))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 208864
        
        If lErro <> AD_SQL_SUCESSO Then gError 208865 'Não está cadastrado
        
        If lNumFatTitRecReembolso <> 0 Then gError 208866 'Já está faturado
        
        If Abs(dValor - objPR.dValor) Then gError 208867 'Teve o valor alterado
            
        lErro = Comando_ExecutarPos(alComando(11), "UPDATE TRVOcrCasosPreRec SET NumIntDocTitRecReembolso = ?, NumFatTitRecReembolso = ?, DataPagto = ?", _
                    alComando(10), objTitRec.lNumIntDoc, objTitRec.lNumTitulo, objParcRec.dtDataVencimento)
        If lErro <> AD_SQL_SUCESSO Then gError 208868
    
    Next
    
    'Faz a baixa
    'preencher os dados do movimento da conta corrente
    With objMovCCI
        .dtDataMovimento = objParcRec.dtDataVencimento
        .dtDataContabil = objParcRec.dtDataVencimento
        .dtDataBaixa = objParcRec.dtDataVencimento
        .dValor = objParcRec.dValor
        .iFilialEmpresa = objTitRec.iFilialEmpresa
        .iCodConta = objParcRec.iCodConta
        .iPortador = 0
        .iTipo = MOVCCI_RECEBIMENTO_TITULO
        .iTipoMeioPagto = DINHEIRO
        .lNumero = 0
        .sHistorico = objParcRec.sObservacao
        .iConciliado = NAO_CONCILIADO
        .iExcluido = MOVCONTACORRENTE_NAO_EXCLUIDO
        .iTipoMeioPagto = RECEBIMENTO_EM_DINHEIRO
    End With

    Set objBaixaReceber.ColBaixaParcRec = New ColBaixaParcRec
    objBaixaReceber.ColBaixaParcRec.Add 0, 0, objParcRec.lNumIntDoc, 0, STATUS_LANCADO, 0, 0, 0, objParcRec.dValor, objParcRec.dValor, COBRADOR_PROPRIA_EMPRESA

    'Grava a Baixa a receber
    'gcolModulo.Item(MODULO_CONTABILIDADE).iAtivo = MODULO_NAO_LIBERADO
    lErro = CF("BaixaRec_Grava_Recebimento_Trans", objBaixaReceber.ColBaixaParcRec, objMovCCI, Nothing, objTitRec.lCliente, objTitRec.iFilial)
    'gcolModulo.Item(MODULO_CONTABILIDADE).iAtivo = MODULO_ATIVO
    If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
    
    'Grava o cliente padrão
    lErro = Comando_Executar(alComando(12), "UPDATE TRVConfig SET Conteudo = ? WHERE Codigo = ?", _
                objTitRec.lCliente, TRVCONFIG_CLIENTE_OCR_REEMBOLSO_PADRAO)
    If lErro <> AD_SQL_SUCESSO Then gError 208870

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVOcrCasosReemb_Grava_EmTrans = SUCESSO

    Exit Function

Erro_TRVOcrCasosReemb_Grava_EmTrans:

    TRVOcrCasosReemb_Grava_EmTrans = gErr

    Select Case gErr

        Case 208862
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)
            
        Case 208863, 208864
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVOCRCASOSPREREC", gErr)

        Case 208865
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVOCRREEMB_NAO_CADASTRADA", gErr, objPR.sDescricao)

        Case 208866
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVOCRREEMB_JA_FAT", gErr, objPR.sDescricao)

        Case 208867
            Call Rotina_Erro(vbOKOnly, "ERRO_TRVOCRREEMB_VALOR_DIF", gErr, objPR.sDescricao)

        Case 208868
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVOCRCASOSPREREC", gErr)
            
        Case 208870
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVCONFIG", gErr)

        Case ERRO_SEM_MENSAGEM

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 208869)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Public Function TRVOcrCasosReemb_Exclui(ByVal objTitRec As ClassTituloReceber) As Long

Dim lErro As Long
Dim lTransacao As Long

On Error GoTo Erro_TRVOcrCasosReemb_Exclui

    'Abertura de transação
    lTransacao = Transacao_Abrir()
    If lTransacao = 0 Then gError 208873

    lErro = TRVOcrCasosReemb_Exclui_EmTrans(objTitRec)
    If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM

    'Confirma a transação
    lErro = Transacao_Commit()
    If lErro <> AD_SQL_SUCESSO Then gError 208874

    TRVOcrCasosReemb_Exclui = SUCESSO

    Exit Function

Erro_TRVOcrCasosReemb_Exclui:

    TRVOcrCasosReemb_Exclui = gErr

    Select Case gErr

        Case 208873
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_TRANSACAO", gErr)

        Case 208874
            Call Rotina_Erro(vbOKOnly, "ERRO_COMMIT", gErr)
            
        Case ERRO_SEM_MENSAGEM

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 208875)

    End Select

    'Desfaz Transação
    Call Transacao_Rollback

    Exit Function

End Function

Public Function TRVOcrCasosReemb_Exclui_EmTrans(ByVal objTitRec As ClassTituloReceber) As Long

Dim lErro As Long
Dim alComando(0 To 0) As Long
Dim iIndice As Integer
Dim objBaixaRecCancelar As New ClassBaixaRecCancelar
Dim objInfoBaixaRecCancelar As New ClassInfoBaixaRecCancelar
Dim lNumMovto As Long, iConta As Integer, iBaixado As Integer
Dim objContabil As New ClassContabil

On Error GoTo Erro_TRVOcrCasosReemb_Exclui_EmTrans

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 208876
    Next
    
    'Le o título
    lErro = CF("TituloReceber_Le", objTitRec)
    If lErro <> SUCESSO And lErro <> 26061 Then gError ERRO_SEM_MENSAGEM
    If lErro <> SUCESSO Then
       'Lê o título baixado
       lErro = CF("TituloReceberBaixado_Le", objTitRec)
       If lErro <> SUCESSO And lErro <> 56570 Then gError ERRO_SEM_MENSAGEM
       iBaixado = MARCADO
    Else
        iBaixado = DESMARCADO
    End If
    
    If iBaixado = MARCADO Then
        
        'Procura a baixa
        lErro = Comando_Executar(alComando(0), "SELECT B.NumMovCta, P.CodConta FROM ParcelasRecBaixadas AS P, BaixasParcRec AS BP, BaixasRec AS B WHERE P.NumIntTitulo = ? AND P.NumIntDoc = BP.NumIntParcela AND BP.NumIntBaixa = B.NumIntBaixa AND B.Status <> 5 AND BP.Status <> 5", _
        lNumMovto, iConta, objTitRec.lNumIntDoc)
        If lErro <> AD_SQL_SUCESSO Then gError 208877
        
        lErro = Comando_BuscarPrimeiro(alComando(0))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 208878
        
        'Se encontrou cancela
        If lErro = AD_SQL_SUCESSO Then
        
            objBaixaRecCancelar.colInfoBaixaRecCancelar.Add objInfoBaixaRecCancelar
            objBaixaRecCancelar.dtDataCancelamento = Date
            objInfoBaixaRecCancelar.iItemSelecionado = MARCADO
            objInfoBaixaRecCancelar.lNumMovCta = lNumMovto
            objInfoBaixaRecCancelar.iCodConta = iConta
            
            lErro = CF("BaixaRecCancelar_Movimento_Cancelar", objBaixaRecCancelar)
            If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
        
        End If
        
    End If
    
    'Dispara a exclusão normal que vai passar pela desassociação com os pré a receber e vai excluir a contabilização
    Set objContabil = New ClassContabil
    Call objContabil.Contabil_Inicializa_Contabilidade4(23, MODULO_CONTASARECEBER)
    
    lErro = CF("TituloReceber_Exclui_EmTransacao", objTitRec, objContabil)
    If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVOcrCasosReemb_Exclui_EmTrans = SUCESSO

    Exit Function

Erro_TRVOcrCasosReemb_Exclui_EmTrans:

    TRVOcrCasosReemb_Exclui_EmTrans = gErr

    Select Case gErr

        Case 208875
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)
            
        Case 208877, 208878
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TITULOSRECEBER", gErr)

        Case ERRO_SEM_MENSAGEM

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 208879)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Public Function BaixasParcelaPagar_Grava_Customizado(ByVal objTituloPagar As ClassTituloPagar, ByVal objParcelaPagar As ClassParcelaPagar, ByVal objBaixaParcPagar As ClassBaixaParcPagar) As Long

Dim lErro As Long
Dim iIndice As Integer
Dim alComando(0 To 3) As Long
Dim dtDataBaixa As Date
Dim lNumIntDocOrc As Long
Dim sSelect As String, sUpdate As String

On Error GoTo Erro_BaixasParcelaPagar_Grava_Customizado

    'Preenche a data de pagamento em TRVOcrCasos para agilizar consultas
    If objTituloPagar.sSiglaDocumento = TIPODOC_FATURA_OCR_COBR Or objTituloPagar.sSiglaDocumento = TIPODOC_FATURA_OCR_JURI Then
        
        'Abertura de Comando
        For iIndice = LBound(alComando) To UBound(alComando)
            alComando(iIndice) = Comando_Abrir()
            If alComando(iIndice) = 0 Then gError 208880
        Next
        
        'Procura a baixa
        lErro = Comando_Executar(alComando(0), "SELECT Data FROM BaixasPag WHERE NumIntBaixa = ?", dtDataBaixa, objBaixaParcPagar.lNumIntBaixa)
        If lErro <> AD_SQL_SUCESSO Then gError 208881
        
        lErro = Comando_BuscarPrimeiro(alComando(0))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 208882
       
        If lErro = AD_SQL_SUCESSO Then
        
            If objTituloPagar.sSiglaDocumento = TIPODOC_FATURA_OCR_COBR Then
                sSelect = "SELECT NumIntDoc FROM TRVOcrCasos WHERE NumIntDocTitPagCobertura = ?"
                sUpdate = "UPDATE TRVOcrCasos SET DataPagtoPax = ?"
            Else
                sSelect = "SELECT NumIntDoc FROM TRVOcrCasos WHERE NumIntDocTitPagProcesso = ?"
                sUpdate = "UPDATE TRVOcrCasos SET DataPagtoCond = ?"
            End If
        
            'Procura a OCR
            lErro = Comando_ExecutarPos(alComando(2), sSelect, 0, lNumIntDocOrc, objTituloPagar.lNumIntDoc)
            If lErro <> AD_SQL_SUCESSO Then gError 208893
         
            lErro = Comando_BuscarPrimeiro(alComando(2))
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 208894
        
            If lErro = AD_SQL_SUCESSO Then
         
                lErro = Comando_ExecutarPos(alComando(1), sUpdate, alComando(2), dtDataBaixa)
                If lErro <> AD_SQL_SUCESSO Then gError 208883
         
                If objTituloPagar.sSiglaDocumento = TIPODOC_FATURA_OCR_JURI Then
                 
                    lErro = Comando_Executar(alComando(3), "UPDATE TRVOcrCasosParcValorCond SET DataPagto = ? WHERE NumIntDocOcrCaso = ? AND Seq = ?", _
                             dtDataBaixa, lNumIntDocOrc, objParcelaPagar.iNumParcela)
                    If lErro <> AD_SQL_SUCESSO Then gError 208895
                 
                End If
             
            End If
            
        End If
        
        'Fecha Comando
        For iIndice = LBound(alComando) To UBound(alComando)
            Call Comando_Fechar(alComando(iIndice))
        Next
    
    End If
    
    BaixasParcelaPagar_Grava_Customizado = SUCESSO

    Exit Function

Erro_BaixasParcelaPagar_Grava_Customizado:

    BaixasParcelaPagar_Grava_Customizado = gErr

    Select Case gErr

        Case 208880
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 208881, 208882
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_BAIXASPAG", gErr)

        Case 208883, 208895
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVOCRCASOS", gErr)

        Case 208893, 208894
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVOCRCASOS", gErr)

        Case ERRO_SEM_MENSAGEM

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 208896)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function
    
End Function

Public Function BaixaParcPag_Exclui_Customizado(ByVal lNumIntParc As Long, ByVal iSequencial As Integer, dValorPago As Double, lNumIntBaixa As Long, lNumIntDocBaixaParcPag As Long) As Long

Dim lErro As Long
Dim iIndice As Integer
Dim alComando(0 To 3) As Long
Dim sSiglaDocumento As String, lNumIntDoc As Long, lNumIntDocOrc As Long, iNumParcela As Integer
Dim sSelect As String, sUpdate As String

On Error GoTo Erro_BaixaParcPag_Exclui_Customizado

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 208888
    Next
    
    sSiglaDocumento = String(STRING_SIGLA_DOCUMENTO, 0)
        
    'Procura a baixa
    lErro = Comando_Executar(alComando(0), "SELECT T.NumIntDoc, T.SiglaDocumento, P.NumParcela FROM TitulosPagTodos As T, ParcelasPagTodas As P WHERE P.NumIntTitulo = T.NumIntDoc AND P.NumIntDoc = ?", lNumIntDoc, sSiglaDocumento, iNumParcela, lNumIntParc)
    If lErro <> AD_SQL_SUCESSO Then gError 208889
    
    lErro = Comando_BuscarPrimeiro(alComando(0))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 208890
    
    If sSiglaDocumento = TIPODOC_FATURA_OCR_COBR Or sSiglaDocumento = TIPODOC_FATURA_OCR_JURI Then

        If sSiglaDocumento = TIPODOC_FATURA_OCR_COBR Then
            sSelect = "SELECT NumIntDoc FROM TRVOcrCasos WHERE NumIntDocTitPagCobertura = ?"
            sUpdate = "UPDATE TRVOcrCasos SET DataPagtoPax = ?"
        Else
            sSelect = "SELECT NumIntDoc FROM TRVOcrCasos WHERE NumIntDocTitPagProcesso = ?"
            sUpdate = "UPDATE TRVOcrCasos SET DataPagtoCond = ?"
        End If
            
        'Procura a OCR
        lErro = Comando_ExecutarPos(alComando(2), sSelect, 0, lNumIntDocOrc, lNumIntDoc)
        If lErro <> AD_SQL_SUCESSO Then gError 208897
     
        lErro = Comando_BuscarPrimeiro(alComando(2))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 208898
    
        If lErro = AD_SQL_SUCESSO Then
   
            lErro = Comando_ExecutarPos(alComando(1), sUpdate, alComando(2), DATA_NULA)
            If lErro <> AD_SQL_SUCESSO Then gError 208891
   
            If sSiglaDocumento = TIPODOC_FATURA_OCR_JURI Then
            
                lErro = Comando_Executar(alComando(3), "UPDATE TRVOcrCasosParcValorCond SET DataPagto = ? WHERE NumIntDocOcrCaso = ? AND Seq = ?", _
                         DATA_NULA, lNumIntDocOrc, iNumParcela)
                If lErro <> AD_SQL_SUCESSO Then gError 208899
            
            End If
            
        End If
        
    End If
        
    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next
    
    BaixaParcPag_Exclui_Customizado = SUCESSO

    Exit Function

Erro_BaixaParcPag_Exclui_Customizado:

    BaixaParcPag_Exclui_Customizado = gErr

    Select Case gErr

        Case 208888
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 208889, 208890
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TITULOSPAGAR", gErr)

        Case 208891, 208899
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVOCRCASOS", gErr)

        Case 208897, 208898
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVOCRCASOS", gErr)

        Case ERRO_SEM_MENSAGEM

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 208900)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function
    
End Function

Public Function TRVAssistVlrAuto_Atualiza(ByVal dtData As Date, dValor As Double) As Long

Dim lErro As Long
Dim alComando(0 To 1) As Long
Dim iIndice As Integer
Dim dValorAnt As Double

On Error GoTo Erro_TRVAssistVlrAuto_Atualiza

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 209094
    Next
    
    If dtData <> DATA_NULA Then

        lErro = Comando_ExecutarPos(alComando(0), "SELECT Valor FROM TRVAssistVlrAuto WHERE Data= ? ", _
                    0, dValorAnt, dtData)
        If lErro <> AD_SQL_SUCESSO Then gError 209095
    
        'Busca Primeiro
        lErro = Comando_BuscarPrimeiro(alComando(0))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 209096
    
        'Se existir => UPDATE, senão => INSERT
        If lErro = AD_SQL_SUCESSO Then
    
            'Trava registro contra alterações/Leituras
            lErro = Comando_LockExclusive(alComando(0))
            If lErro <> SUCESSO Then gError 209097
    
            lErro = Comando_ExecutarPos(alComando(1), "UPDATE TRVAssistVlrAuto SET Valor= Valor + ? ", alComando(0), dValor)
            If lErro <> AD_SQL_SUCESSO Then gError 209098
    
        Else
    
            lErro = Comando_Executar(alComando(1), "INSERT INTO TRVAssistVlrAuto (Data, Valor) VALUES (?,?)", dtData, dValor)
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 209099
    
        End If
        
    End If

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVAssistVlrAuto_Atualiza = SUCESSO

    Exit Function

Erro_TRVAssistVlrAuto_Atualiza:

    TRVAssistVlrAuto_Atualiza = gErr

    Select Case gErr

        Case 209094
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 209095, 209096
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVASSISTVLRAUTO", gErr)

        Case 209097
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVASSISTVLRAUTO", gErr)

        Case 209098
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVASSISTVLRAUTO", gErr)
        
        Case 209099
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_TRVASSISTVLRAUTO", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 209100)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Private Function TRVOcrCasosGastosAdv_Inclui(ByVal objOcrCaso As ClassTRVOcrCasos) As Long

Dim lErro As Long
Dim alComando(1 To 1) As Long
Dim iIndice As Integer
Dim iSeq As Integer
Dim objOcrCasoGAdv As ClassTRVOcrCasosGastosAdv

On Error GoTo Erro_TRVOcrCasosGastosAdv_Inclui

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 209101
    Next

    iSeq = 0
    For Each objOcrCasoGAdv In objOcrCaso.colGastosAdvs
    
        iSeq = iSeq + 1

        objOcrCasoGAdv.lNumIntDocOcrCaso = objOcrCaso.lNumIntDoc
        objOcrCasoGAdv.iSeq = iSeq
    
        lErro = Comando_Executar(alComando(1), "INSERT INTO TRVOcrCasosGastosAdv( NumIntDocOcrCaso, Seq, Data, Valor, Descricao) VALUES (?,?,?,?,?)", _
                objOcrCasoGAdv.lNumIntDocOcrCaso, objOcrCasoGAdv.iSeq, objOcrCasoGAdv.dtData, objOcrCasoGAdv.dValor, objOcrCasoGAdv.sDescricao)
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 209102
        
    Next

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVOcrCasosGastosAdv_Inclui = SUCESSO

    Exit Function

Erro_TRVOcrCasosGastosAdv_Inclui:

    TRVOcrCasosGastosAdv_Inclui = gErr

    Select Case gErr

        Case 209101
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 209102
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_TRVOCRCASOSGASTOSADV", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 209103)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Private Function TRVOcrCasosDocs_Inclui(ByVal objOcrCaso As ClassTRVOcrCasos) As Long

Dim lErro As Long
Dim alComando(1 To 1) As Long
Dim iIndice As Integer
Dim iSeq As Integer
Dim objOcrCasoDoc As ClassTRVOcrCasosDocs

On Error GoTo Erro_TRVOcrCasosDocs_Inclui

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 209104
    Next

    iSeq = 0
    For Each objOcrCasoDoc In objOcrCaso.colDocs
    
        iSeq = iSeq + 1

        objOcrCasoDoc.lNumIntDocOcrCaso = objOcrCaso.lNumIntDoc
        objOcrCasoDoc.iSeq = iSeq
    
        lErro = Comando_Executar(alComando(1), "INSERT INTO TRVOcrCasosDocs( NumIntDocOcrCaso, Seq, CodigoDoc, NecessSist, NecessUsu, Recebido, Observacao) VALUES (?,?,?,?,?,?,?)", _
                objOcrCasoDoc.lNumIntDocOcrCaso, objOcrCasoDoc.iSeq, objOcrCasoDoc.lCodigoDoc, objOcrCasoDoc.iNecessSist, objOcrCasoDoc.iNecessUsu, objOcrCasoDoc.iRecebido, objOcrCasoDoc.sObservacao)
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 209105
        
    Next

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVOcrCasosDocs_Inclui = SUCESSO

    Exit Function

Erro_TRVOcrCasosDocs_Inclui:

    TRVOcrCasosDocs_Inclui = gErr

    Select Case gErr

        Case 209104
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 209105
            Call Rotina_Erro(vbOKOnly, "ERRO_INSERCAO_TRVOCRCASOSDOCS", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 209106)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Private Function TRVOcrCasosGastosAdv_Exclui(ByVal objOcrCaso As ClassTRVOcrCasos) As Long

Dim lErro As Long
Dim alComando(0 To 1) As Long
Dim iIndice As Integer
Dim iSeq As Integer

On Error GoTo Erro_TRVOcrCasosGastosAdv_Exclui

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 209107
    Next

    'Le a tabelaTRVOcrCasosGastosAdv
    lErro = Comando_ExecutarPos(alComando(0), "SELECT Seq FROM TRVOcrCasosGastosAdv WHERE NumIntDocOcrCaso= ? ", _
                0, iSeq, objOcrCaso.lNumIntDoc)
    If lErro <> AD_SQL_SUCESSO Then gError 209108

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(0))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 209109

    Do While lErro <> AD_SQL_SEM_DADOS

        'Trava registro contra alterações/Leituras
        lErro = Comando_LockExclusive(alComando(0))
        If lErro <> SUCESSO Then gError 209110
    
        lErro = Comando_ExecutarPos(alComando(1), "DELETE FROM TRVOcrCasosGastosAdv", alComando(0))
        If lErro <> AD_SQL_SUCESSO Then gError 209111
        
        lErro = Comando_BuscarProximo(alComando(0))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 209112
        
    Loop

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVOcrCasosGastosAdv_Exclui = SUCESSO

    Exit Function

Erro_TRVOcrCasosGastosAdv_Exclui:

    TRVOcrCasosGastosAdv_Exclui = gErr

    Select Case gErr

        Case 209107
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 209108, 209109, 209112
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVOCRCASOSGASTOSADV", gErr)

        Case 209110
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVOCRCASOSGASTOSADV", gErr)

        Case 209111
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_TRVOCRCASOSGASTOSADV", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 209113)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Private Function TRVOcrCasosDocs_Exclui(ByVal objOcrCaso As ClassTRVOcrCasos) As Long

Dim lErro As Long
Dim alComando(0 To 1) As Long
Dim iIndice As Integer
Dim iSeq As Integer

On Error GoTo Erro_TRVOcrCasosDocs_Exclui

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 209114
    Next

    'Le a tabelaTRVOcrCasosDocs
    lErro = Comando_ExecutarPos(alComando(0), "SELECT Seq FROM TRVOcrCasosDocs WHERE NumIntDocOcrCaso= ? ", _
                0, iSeq, objOcrCaso.lNumIntDoc)
    If lErro <> AD_SQL_SUCESSO Then gError 209115

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(0))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 209116

    Do While lErro <> AD_SQL_SEM_DADOS

        'Trava registro contra alterações/Leituras
        lErro = Comando_LockExclusive(alComando(0))
        If lErro <> SUCESSO Then gError 209117
    
        lErro = Comando_ExecutarPos(alComando(1), "DELETE FROM TRVOcrCasosDocs", alComando(0))
        If lErro <> AD_SQL_SUCESSO Then gError 209118
        
        lErro = Comando_BuscarProximo(alComando(0))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 209119
        
    Loop

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    TRVOcrCasosDocs_Exclui = SUCESSO

    Exit Function

Erro_TRVOcrCasosDocs_Exclui:

    TRVOcrCasosDocs_Exclui = gErr

    Select Case gErr

        Case 209114
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 209115, 209116, 209119
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVOCRCASOSDOCS", gErr)

        Case 209117
            Call Rotina_Erro(vbOKOnly, "ERRO_LOCKEXCLUSIVE_TRVOCRCASOSDOCS", gErr)

        Case 209118
            Call Rotina_Erro(vbOKOnly, "ERRO_EXCLUSAO_TRVOCRCASOSDOCS", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 209120)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function

End Function

Public Function NFiscal_ExcluiInclui_AcertaRefs_Cust(ByVal objNFNova As ClassNFiscal, ByVal objNFAntiga As ClassNFiscal) As Long

Dim lErro As Long
Dim alComando(0 To 1) As Long
Dim iIndice As Integer

On Error GoTo Erro_NFiscal_ExcluiInclui_AcertaRefs_Cust

    'Abertura de Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 209114
    Next
    
    If objNFNova.colItens.Count <> objNFAntiga.colItens.Count Then gError 99997
    
    'Acerta a referência entre item da NF e título para não gerar
    
    For iIndice = 1 To objNFNova.colItens.Count
    
        If objNFNova.colItens.Item(iIndice).lNumIntDoc = 0 Then gError 99998
        If objNFAntiga.colItens.Item(iIndice).lNumIntDoc = 0 Then gError 99999

        lErro = Comando_Executar(alComando(0), "UPDATE TRVItemNotaTitulo SET NumIntDocItemNF = ? WHERE NumIntDocItemNF= ? ", _
                    objNFNova.colItens.Item(iIndice).lNumIntDoc, objNFAntiga.colItens.Item(iIndice).lNumIntDoc)
        If lErro <> AD_SQL_SUCESSO Then gError 209115
    
    Next

    lErro = Comando_Executar(alComando(1), "UPDATE TRVNFsExp SET NumIntDocNF = ? WHERE NumIntDocNF= ? ", _
                objNFNova.lNumIntDoc, objNFAntiga.lNumIntDoc)
    If lErro <> AD_SQL_SUCESSO Then gError 209115
        
    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    NFiscal_ExcluiInclui_AcertaRefs_Cust = SUCESSO

    Exit Function

Erro_NFiscal_ExcluiInclui_AcertaRefs_Cust:

    NFiscal_ExcluiInclui_AcertaRefs_Cust = gErr

    Select Case gErr

        Case 209114
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 99997 To 99999
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_NFISCAL", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 209120)

    End Select

    'Fecha Comando
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next

    Exit Function
    
End Function

Public Function TRVVou_Trata_Boletos_Pendentes() As Long

Dim lErro As Long
Dim lTransacao As Long
Dim alComando(0 To 30) As Long 'Do 11 ao 30 usado em alComandoGrava
Dim alComandoGrava(1 To 20) As Long
Dim iIndice As Integer, bAchou As Boolean
Dim sModeloFat As String, sNomeDiretorio As String
Dim objTRVConfig As ClassTRVConfig
Dim lNumBoleto As Long, lNumBoletoPri As Long, lNumBoletoUlt As Long
Dim colVou As Collection, objVou As ClassTRVVouchers, tVou As typeTRVVouchers

On Error GoTo Erro_TRVVou_Trata_Boletos_Pendentes
        
    lErro = CF("TRVConfig_Le", TRVCONFIG_DIRETORIO_MODELO_FAT_HTML, EMPRESA_TODA, sModeloFat)
    If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
    
    lErro = CF("TRVConfig_Le", TRVCONFIG_DIRETORIO_FAT_HTML, EMPRESA_TODA, sNomeDiretorio)
    If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
  
    lTransacao = Transacao_Abrir()
    If lTransacao = 0 Then gError 216111
     
    'Abre o comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 216112
    Next
    
    For iIndice = LBound(alComandoGrava) To UBound(alComandoGrava)
        alComandoGrava(iIndice) = alComando(iIndice + 10)
    Next

    lErro = Comando_Executar(alComando(0), "SELECT DISTINCT NumBoleto FROM TRVVouchers WHERE TrataBoleto = ? AND NumBoleto <> 0 AND Status <> 7 ORDER BY NumBoleto", lNumBoleto, MARCADO)
    If lErro <> AD_SQL_SUCESSO Then gError 216113

    'Busca Primeiro
    lErro = Comando_BuscarPrimeiro(alComando(0))
    If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 216114
    
    lNumBoletoPri = lNumBoleto
    
    Do While lErro <> AD_SQL_SEM_DADOS
    
        Set colVou = New Collection
        
        tVou.sTipVou = String(STRING_MAXIMO, 0)
        tVou.sSerie = String(STRING_MAXIMO, 0)
    
        lErro = Comando_Executar(alComando(1), "SELECT TipVou, Serie, NumVou, TipoDocDestino,NumIntDocDestino,NumFatCoinfo,NumBoleto,ValorBoleto,DataVencBoleto, Data FROM TRVVouchers WHERE NumBoleto = ? ORDER BY Data, NumVou ", _
        tVou.sTipVou, tVou.sSerie, tVou.lNumVou, tVou.iTipoDocDestino, tVou.lNumIntDocDestino, tVou.lNumFatCoinfo, tVou.lNumBoleto, tVou.dValorBoleto, tVou.dtDataVencBoleto, tVou.dtData, lNumBoleto)
        If lErro <> AD_SQL_SUCESSO Then gError 216115
    
        'Busca Primeiro
        lErro = Comando_BuscarPrimeiro(alComando(1))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 216116
    
        Do While lErro <> AD_SQL_SEM_DADOS
        
            Set objVou = New ClassTRVVouchers
    
            objVou.sTipVou = tVou.sTipVou
            objVou.sSerie = tVou.sSerie
            objVou.lNumVou = tVou.lNumVou
            objVou.lNumBoleto = tVou.lNumBoleto
            objVou.dValorBoleto = tVou.dValorBoleto
            objVou.dtDataVencBoleto = tVou.dtDataVencBoleto
            objVou.dtData = tVou.dtData
                
            If objVou.dtDataVencBoleto = DATA_NULA Then gError 216117
            If objVou.dValorBoleto = 0 Then gError 216118
                
            colVou.Add objVou
            
            'Foi faturada em outro boleto
            If objVou.lNumIntDocDestino <> 0 Then gError 216119 'Nesse ponto não deveria ter nenhum voucher faturado
    
            lErro = Comando_BuscarProximo(alComando(1))
            If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 216120
                
        Loop
        
        lErro = TRVVou_Grava_Boleto(colVou, alComandoGrava())
        If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
    
        If lNumBoletoUlt < lNumBoleto Then lNumBoletoUlt = lNumBoleto
    
        lErro = Comando_BuscarProximo(alComando(0))
        If lErro <> AD_SQL_SUCESSO And lErro <> AD_SQL_SEM_DADOS Then gError 216122
            
    Loop
        
    'Fecha os comandos
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next
    
    'Confirma a transação
    lErro = Transacao_Commit()
    If lErro <> AD_SQL_SUCESSO Then gError 216123
       
    'gera o documento html
    lErro = TRVFaturas_Regera_Html(lNumBoletoPri, lNumBoletoUlt, sModeloFat, sNomeDiretorio, TIPODOC_FATURA_SERVICO_CR, False)
    If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
    
    TRVVou_Trata_Boletos_Pendentes = SUCESSO
     
    Exit Function
    
Erro_TRVVou_Trata_Boletos_Pendentes:

    TRVVou_Trata_Boletos_Pendentes = gErr
    
    Select Case gErr
    
        Case ERRO_SEM_MENSAGEM
          
        Case 216111
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)
        
        Case 216112
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_TRANSACAO", gErr)
                
        Case 216113 To 216116, 216120, 216122
            Call Rotina_Erro(vbOKOnly, "ERRO_LEITURA_TRVVOUCHERS", gErr)

        Case 216117
            Call Rotina_Erro(vbOKOnly, "ERRO_VOU_BOLETO_SEM_VALOR", gErr, objVou.sTipVou & objVou.sSerie & CStr(objVou.lNumVou))

        Case 216118
            Call Rotina_Erro(vbOKOnly, "ERRO_VOU_BOLETO_SEM_DATA", gErr, objVou.sTipVou & objVou.sSerie & CStr(objVou.lNumVou))
            
        Case 216119
            Call Rotina_Erro(vbOKOnly, "ERRO_VOU_AINDA_FATURADO", gErr, objVou.sTipVou & objVou.sSerie & CStr(objVou.lNumVou))
                
        Case 216123
            Call Rotina_Erro(vbOKOnly, "ERRO_COMMIT", gErr)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 216124)
     
    End Select
    
    'Desfaz a transação
    Call Transacao_Rollback
    
    'Fecha os comandos
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next
        
    Exit Function

End Function

Private Function TRVVou_Grava_Boleto(ByVal colVou As Collection, alComando() As Long) As Long

Dim lErro As Long
Dim objTitRec As New ClassTituloReceber
Dim objVouBase As ClassTRVVouchers
Dim objVou As ClassTRVVouchers
Dim objVoucherInfo As New ClassTRVVoucherInfo
Dim objParcelaReceber As New ClassParcelaReceber
Dim colParcelaReceber As New colParcelaReceber
Dim objContabil As ClassContabil
Dim objCtb As New ClassImpCoinfoFatCRCtb
Dim objContabAutomatica As New ClassContabAutomatica
Dim dtDataVenctoReal As Date
Dim objPRJInfo As New ClassProjetoInfo, objPRJCR As New ClassPRJCR, objProjeto As New ClassProjetos
Dim objTRVTitulosExp As ClassTRVTitulosExp

On Error GoTo Erro_TRVVou_Grava_Boleto

    If colVou.Count > 0 Then
    
        Set objVouBase = colVou.Item(1)
        
        objVoucherInfo.lNumVou = objVouBase.lNumVou
        objVoucherInfo.sSerie = objVouBase.sSerie
        objVoucherInfo.sTipo = objVouBase.sTipVou
        
        lErro = CF("TRVVoucherInfoSigav_Le", objVoucherInfo, alComando(12))
        If lErro <> SUCESSO And lErro <> ERRO_LEITURA_SEM_DADOS Then gError ERRO_SEM_MENSAGEM
                            
        'CADASTRAR O PASSAGEIRO E ACERTA A INFORMAÇÃO EM VOUCHERINFO
        lErro = TRV_VoucherInfo_Cadastra_Cliente_EmTrans(objVoucherInfo)
        If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
            
        objTitRec.lCliente = objVoucherInfo.lCliPassageiro
        objTitRec.iFilial = FILIAL_MATRIZ
        objTitRec.lNumTitulo = objVouBase.lNumBoleto
        objTitRec.dtDataEmissao = objVouBase.dtData
        objTitRec.dValor = objVouBase.dValorBoleto
        objTitRec.dSaldo = objVouBase.dValorBoleto
        
        objTitRec.iFilialEmpresa = objVoucherInfo.iFilialFat 'TROCAR
    
        objTitRec.sSiglaDocumento = TIPODOC_FATURA_SERVICO_CR
        objTitRec.iNumParcelas = 1
    
        objParcelaReceber.iNumParcela = 1
        objParcelaReceber.dtDataVencimento = objVouBase.dtDataVencBoleto
    
        'Calcula Data Vencimento Real
        lErro = CF("DataVencto_Real", objParcelaReceber.dtDataVencimento, dtDataVenctoReal)
        If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
                   
        objParcelaReceber.dtDataVencimentoReal = dtDataVenctoReal
        
        'objParcelaReceber.dtDataVencimentoReal = dtDataVenctoReal
        objParcelaReceber.dValor = objTitRec.dValor
        objParcelaReceber.dValorOriginal = objTitRec.dValor
        objParcelaReceber.dtDataCredito = DATA_NULA
        objParcelaReceber.dtDataDepositoCheque = DATA_NULA
        objParcelaReceber.dtDataEmissaoCheque = DATA_NULA
        objParcelaReceber.dtDataPrevReceb = DATA_NULA
        objParcelaReceber.dtDataProxCobr = DATA_NULA
        objParcelaReceber.dtDataTransacaoCartao = DATA_NULA
        objParcelaReceber.dtDesconto1Ate = DATA_NULA
        objParcelaReceber.dtDesconto2Ate = DATA_NULA
        objParcelaReceber.dtDesconto3Ate = DATA_NULA
        objParcelaReceber.dtValidadeCartao = DATA_NULA
    
        colParcelaReceber.AddObj objParcelaReceber
                
        objPRJInfo.sProjeto = "100101"
    
        objPRJCR.dValor = objTitRec.dValor
        objPRJCR.sItem = "PROD"
        objPRJCR.iTipoOrigem = PRJ_CR_TIPO_TITREC
        objPRJCR.iCalcAuto = MARCADO
        objPRJCR.dPercent = 1
        objPRJInfo.iFilialEmpresa = 1
    
        objPRJInfo.colPRJCustoReceitaReal.Add objPRJCR
    
        Set objTitRec.objProjetoInfo = objPRJInfo
    
        objProjeto.sCodigo = objPRJInfo.sProjeto
        objProjeto.iFilialEmpresa = objPRJInfo.iFilialEmpresa
    
        'Le
        lErro = CF("Projetos_Le", objProjeto)
        If lErro <> SUCESSO And lErro <> ERRO_LEITURA_SEM_DADOS Then gError ERRO_SEM_MENSAGEM
    
        objPRJInfo.lNumIntDocPRJ = objProjeto.lNumIntDoc
        objPRJCR.lNumIntDocPRJ = objProjeto.lNumIntDoc
    
        'Se não encontrou => Erro
        If lErro = ERRO_LEITURA_SEM_DADOS Then gError 209161
        
        lErro = FAT_TituloReceber_Insere_TRV(alComando(1), alComando(2), alComando(3), alComando(4), alComando(5), alComando(6), alComando(7), alComando(8), alComando(9), alComando(10), objTitRec, colParcelaReceber)
        If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
        
        Set objTitRec.colParcelaReceber = colParcelaReceber
        
        'gravar a contabilizacao
        lErro = objContabAutomatica.Inicializa_Contab(objCtb, MODULO_CONTASARECEBER, "CR", objTitRec.dtDataEmissao, objTitRec.dtDataEmissao)
        If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
    
        lErro = objContabAutomatica.GeraContabilizacao(objTitRec, Nothing)
        If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
    
        lErro = objContabAutomatica.Finaliza_Contab()
        If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
    
        Set objContabAutomatica = Nothing
        Call objCtb.Encerrando
        Set objCtb = Nothing
        
        Set objTRVTitulosExp = New ClassTRVTitulosExp
        
        objTRVTitulosExp.iExcluido = DESMARCADO
        objTRVTitulosExp.iExportado = DESMARCADO
        objTRVTitulosExp.iTipoDocOrigem = TRV_TIPO_DOC_DESTINO_TITREC
        objTRVTitulosExp.lNumIntDocOrigem = objTitRec.lNumIntDoc
        objTRVTitulosExp.lNumTitulo = objTitRec.lNumTitulo
        objTRVTitulosExp.iTemQueContabilizar = DESMARCADO
        objTRVTitulosExp.dValorAporte = 0
        objTRVTitulosExp.dValorAporteCred = 0
        objTRVTitulosExp.dValorComissao = 0
        objTRVTitulosExp.dValorCreditos = objTitRec.dValor
        objTRVTitulosExp.dValorDebitos = 0
        objTRVTitulosExp.dValorDeducoes = 0
        objTRVTitulosExp.dValorTarifa = 0
        
        lErro = CF("TRVTitulosExp_Insere", objTRVTitulosExp, alComando(13), alComando(14))
        If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
        
        'Associa com os pré a receber
        For Each objVou In colVou
                        
            lErro = Comando_Executar(alComando(11), "UPDATE TRVVouchers SET TipoDocDestino = ?, NumIntDocDestino = ?, TrataBoleto = ?, CliPassageiro = ?, NumFatCoinfo = ? WHERE NumVou= ? AND TipoDoc = ? AND Serie = ? AND TipVou = ? ", _
                        TRV_TIPO_DOC_DESTINO_TITREC, objTitRec.lNumIntDoc, DESMARCADO, objTitRec.lCliente, objTitRec.lNumTitulo, objVou.lNumVou, TRV_TIPODOC_VOU_TEXTO, objVou.sSerie, objVou.sTipVou)
            If lErro <> AD_SQL_SUCESSO Then gError 216121
        
        Next
        
    End If
    
    TRVVou_Grava_Boleto = SUCESSO
     
    Exit Function
    
Erro_TRVVou_Grava_Boleto:

    TRVVou_Grava_Boleto = gErr
    
    Select Case gErr
    
        Case ERRO_SEM_MENSAGEM

        Case 216121
            Call Rotina_Erro(vbOKOnly, "ERRO_UPDATE_TRVVOUCHERS", gErr)
            
        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 216125)
     
    End Select
        
    Exit Function
    
End Function

Private Function TRVVou_Trata_Boletos_Exclusao(ByVal iTipoDocDestino As Integer, ByVal lNumIntDocDestino As Long, ByVal lNumFat As Long, ByVal sMotivo As String) As Long

Dim lErro As Long
Dim alComando(1 To 4) As Long
Dim iIndice As Integer
Dim objTitRec As New ClassTituloReceber
Dim objContabil As ClassContabil
Dim objFaturaTRV As New ClassFaturaTRV
Dim iFilialAux As Integer

On Error GoTo Erro_TRVVou_Trata_Boletos_Exclusao

    iFilialAux = giFilialEmpresa
    
    'Abre o comando
    For iIndice = LBound(alComando) To UBound(alComando)
        alComando(iIndice) = Comando_Abrir()
        If alComando(iIndice) = 0 Then gError 216126
    Next
    
    If iTipoDocDestino <> TRV_TIPO_DOC_DESTINO_TITREC Then gError 216127  'Não deveria ter boleto gerado que não fosse no a receber
    
    objTitRec.lNumIntDoc = lNumIntDocDestino
    
    'Lê o Título
    lErro = CF("TituloReceber_Le", objTitRec)
    If lErro <> SUCESSO And lErro <> 26061 Then gError ERRO_SEM_MENSAGEM
        
    'Se não achou o Título
    If lErro <> SUCESSO Then

        'Lê o Título a Receber baixado
        lErro = CF("TituloReceberBaixado_Le", objTitRec, MARCADO)
        If lErro <> SUCESSO And lErro <> 56570 Then gError ERRO_SEM_MENSAGEM

        If lErro = SUCESSO Then gError 216128  'O título está baixado

    End If
                
    'Se o título está cadastardo (já não foi excluído anteriormente) e não está baixado
    If lErro = SUCESSO Then
    
        If objTitRec.lNumTitulo < TRV_INI_SEQ_BOLETO_GER_FORA_CORP Then gError 216130
        
        giFilialEmpresa = objTitRec.iFilialEmpresa
        
        objFaturaTRV.sMotivo = sMotivo
        
        Set objTitRec.objInfoUsu = objFaturaTRV
        objTitRec.dtDataEstorno = Date
        
        Set objContabil = New ClassContabil
        Call objContabil.Contabil_Inicializa_Contabilidade4(23, MODULO_CONTASARECEBER)
    
        'Exclui o Titulo (inclusive a sua parte contábil)
        lErro = CF("TituloReceber_Exclui_EmTransacao", objTitRec, objContabil)
        If lErro <> SUCESSO Then gError ERRO_SEM_MENSAGEM
        
    End If
    
    'Fecha os comandos
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next
    
    giFilialEmpresa = iFilialAux
    
    TRVVou_Trata_Boletos_Exclusao = SUCESSO
     
    Exit Function
    
Erro_TRVVou_Trata_Boletos_Exclusao:

    giFilialEmpresa = iFilialAux

    TRVVou_Trata_Boletos_Exclusao = gErr
    
    Select Case gErr
    
        Case ERRO_SEM_MENSAGEM
          
        Case 216126
            Call Rotina_Erro(vbOKOnly, "ERRO_ABERTURA_COMANDO", gErr)

        Case 216127
            Call Rotina_Erro(vbOKOnly, "ERRO_TITULORECEBER_BAIXADO_EXCLUSAO", gErr, lNumFat)

        Case 216128
            Call Rotina_Erro(vbOKOnly, "ERRO_VOU_TITREC_BAIXADO", gErr, lNumFat)

        Case 216130
            Call Rotina_Erro(vbOKOnly, "ERRO_VOU_TITREC_NAO_BOLETO", gErr, lNumFat)

        Case Else
            Call Rotina_Erro(vbOKOnly, "ERRO_FORNECIDO_PELO_VB", gErr, Error, 216129)
     
    End Select
    
    Call Rotina_Erro(vbOKOnly, "Não foi possível excluir o título para gerar o novo boleto. " & sMotivo, gErr)
    
    'Fecha os comandos
    For iIndice = LBound(alComando) To UBound(alComando)
        Call Comando_Fechar(alComando(iIndice))
    Next
        
    Exit Function
    
End Function
